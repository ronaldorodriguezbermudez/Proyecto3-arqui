{
  "version": 3,
  "sources": ["../../../../parse5/lib/common/unicode.js", "../../../../parse5/lib/common/error-codes.js", "../../../../parse5/lib/tokenizer/preprocessor.js", "../../../../parse5/lib/tokenizer/named-entity-data.js", "../../../../parse5/lib/tokenizer/index.js", "../../../../parse5/lib/common/html.js", "../../../../parse5/lib/parser/open-element-stack.js", "../../../../parse5/lib/parser/formatting-element-list.js", "../../../../parse5/lib/utils/mixin.js", "../../../../parse5/lib/extensions/position-tracking/preprocessor-mixin.js", "../../../../parse5/lib/extensions/location-info/tokenizer-mixin.js", "../../../../parse5/lib/extensions/location-info/open-element-stack-mixin.js", "../../../../parse5/lib/extensions/location-info/parser-mixin.js", "../../../../parse5/lib/extensions/error-reporting/mixin-base.js", "../../../../parse5/lib/extensions/error-reporting/preprocessor-mixin.js", "../../../../parse5/lib/extensions/error-reporting/tokenizer-mixin.js", "../../../../parse5/lib/extensions/error-reporting/parser-mixin.js", "../../../../parse5/lib/tree-adapters/default.js", "../../../../parse5/lib/utils/merge-options.js", "../../../../parse5/lib/common/doctype.js", "../../../../parse5/lib/common/foreign-content.js", "../../../../parse5/lib/parser/index.js", "../../../../hast-util-raw/lib/index.js", "../../../../hast-util-raw/node_modules/unist-util-position/lib/index.js", "../../../../hast-util-raw/node_modules/unist-util-is/lib/index.js", "../../../../hast-util-raw/node_modules/unist-util-visit-parents/lib/color.browser.js", "../../../../hast-util-raw/node_modules/unist-util-visit-parents/lib/index.js", "../../../../hast-util-raw/node_modules/unist-util-visit/lib/index.js", "../../../../property-information/lib/util/schema.js", "../../../../property-information/lib/util/merge.js", "../../../../property-information/lib/normalize.js", "../../../../property-information/lib/util/info.js", "../../../../property-information/lib/util/types.js", "../../../../property-information/lib/util/defined-info.js", "../../../../property-information/lib/util/create.js", "../../../../property-information/lib/xlink.js", "../../../../property-information/lib/xml.js", "../../../../property-information/lib/util/case-sensitive-transform.js", "../../../../property-information/lib/util/case-insensitive-transform.js", "../../../../property-information/lib/xmlns.js", "../../../../property-information/lib/aria.js", "../../../../property-information/lib/html.js", "../../../../property-information/lib/svg.js", "../../../../property-information/lib/find.js", "../../../../property-information/index.js", "../../../../hast-util-parse-selector/lib/index.js", "../../../../space-separated-tokens/index.js", "../../../../comma-separated-tokens/index.js", "../../../../hastscript/lib/core.js", "../../../../hastscript/lib/html.js", "../../../../hastscript/lib/svg-case-sensitive-tag-names.js", "../../../../hastscript/lib/svg.js", "../../../../vfile-location/lib/index.js", "../../../../web-namespaces/index.js", "../../../../hast-util-from-parse5/lib/index.js", "../../../../zwitch/index.js", "../../../../hast-util-to-parse5/lib/index.js", "../../../../html-void-elements/index.js"],
  "sourcesContent": ["'use strict';\r\n\r\nconst UNDEFINED_CODE_POINTS = [\r\n    0xfffe,\r\n    0xffff,\r\n    0x1fffe,\r\n    0x1ffff,\r\n    0x2fffe,\r\n    0x2ffff,\r\n    0x3fffe,\r\n    0x3ffff,\r\n    0x4fffe,\r\n    0x4ffff,\r\n    0x5fffe,\r\n    0x5ffff,\r\n    0x6fffe,\r\n    0x6ffff,\r\n    0x7fffe,\r\n    0x7ffff,\r\n    0x8fffe,\r\n    0x8ffff,\r\n    0x9fffe,\r\n    0x9ffff,\r\n    0xafffe,\r\n    0xaffff,\r\n    0xbfffe,\r\n    0xbffff,\r\n    0xcfffe,\r\n    0xcffff,\r\n    0xdfffe,\r\n    0xdffff,\r\n    0xefffe,\r\n    0xeffff,\r\n    0xffffe,\r\n    0xfffff,\r\n    0x10fffe,\r\n    0x10ffff\r\n];\r\n\r\nexports.REPLACEMENT_CHARACTER = '\\uFFFD';\r\n\r\nexports.CODE_POINTS = {\r\n    EOF: -1,\r\n    NULL: 0x00,\r\n    TABULATION: 0x09,\r\n    CARRIAGE_RETURN: 0x0d,\r\n    LINE_FEED: 0x0a,\r\n    FORM_FEED: 0x0c,\r\n    SPACE: 0x20,\r\n    EXCLAMATION_MARK: 0x21,\r\n    QUOTATION_MARK: 0x22,\r\n    NUMBER_SIGN: 0x23,\r\n    AMPERSAND: 0x26,\r\n    APOSTROPHE: 0x27,\r\n    HYPHEN_MINUS: 0x2d,\r\n    SOLIDUS: 0x2f,\r\n    DIGIT_0: 0x30,\r\n    DIGIT_9: 0x39,\r\n    SEMICOLON: 0x3b,\r\n    LESS_THAN_SIGN: 0x3c,\r\n    EQUALS_SIGN: 0x3d,\r\n    GREATER_THAN_SIGN: 0x3e,\r\n    QUESTION_MARK: 0x3f,\r\n    LATIN_CAPITAL_A: 0x41,\r\n    LATIN_CAPITAL_F: 0x46,\r\n    LATIN_CAPITAL_X: 0x58,\r\n    LATIN_CAPITAL_Z: 0x5a,\r\n    RIGHT_SQUARE_BRACKET: 0x5d,\r\n    GRAVE_ACCENT: 0x60,\r\n    LATIN_SMALL_A: 0x61,\r\n    LATIN_SMALL_F: 0x66,\r\n    LATIN_SMALL_X: 0x78,\r\n    LATIN_SMALL_Z: 0x7a,\r\n    REPLACEMENT_CHARACTER: 0xfffd\r\n};\r\n\r\nexports.CODE_POINT_SEQUENCES = {\r\n    DASH_DASH_STRING: [0x2d, 0x2d], //--\r\n    DOCTYPE_STRING: [0x44, 0x4f, 0x43, 0x54, 0x59, 0x50, 0x45], //DOCTYPE\r\n    CDATA_START_STRING: [0x5b, 0x43, 0x44, 0x41, 0x54, 0x41, 0x5b], //[CDATA[\r\n    SCRIPT_STRING: [0x73, 0x63, 0x72, 0x69, 0x70, 0x74], //script\r\n    PUBLIC_STRING: [0x50, 0x55, 0x42, 0x4c, 0x49, 0x43], //PUBLIC\r\n    SYSTEM_STRING: [0x53, 0x59, 0x53, 0x54, 0x45, 0x4d] //SYSTEM\r\n};\r\n\r\n//Surrogates\r\nexports.isSurrogate = function(cp) {\r\n    return cp >= 0xd800 && cp <= 0xdfff;\r\n};\r\n\r\nexports.isSurrogatePair = function(cp) {\r\n    return cp >= 0xdc00 && cp <= 0xdfff;\r\n};\r\n\r\nexports.getSurrogatePairCodePoint = function(cp1, cp2) {\r\n    return (cp1 - 0xd800) * 0x400 + 0x2400 + cp2;\r\n};\r\n\r\n//NOTE: excluding NULL and ASCII whitespace\r\nexports.isControlCodePoint = function(cp) {\r\n    return (\r\n        (cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\r\n        (cp >= 0x7f && cp <= 0x9f)\r\n    );\r\n};\r\n\r\nexports.isUndefinedCodePoint = function(cp) {\r\n    return (cp >= 0xfdd0 && cp <= 0xfdef) || UNDEFINED_CODE_POINTS.indexOf(cp) > -1;\r\n};\r\n", "'use strict';\r\n\r\nmodule.exports = {\r\n    controlCharacterInInputStream: 'control-character-in-input-stream',\r\n    noncharacterInInputStream: 'noncharacter-in-input-stream',\r\n    surrogateInInputStream: 'surrogate-in-input-stream',\r\n    nonVoidHtmlElementStartTagWithTrailingSolidus: 'non-void-html-element-start-tag-with-trailing-solidus',\r\n    endTagWithAttributes: 'end-tag-with-attributes',\r\n    endTagWithTrailingSolidus: 'end-tag-with-trailing-solidus',\r\n    unexpectedSolidusInTag: 'unexpected-solidus-in-tag',\r\n    unexpectedNullCharacter: 'unexpected-null-character',\r\n    unexpectedQuestionMarkInsteadOfTagName: 'unexpected-question-mark-instead-of-tag-name',\r\n    invalidFirstCharacterOfTagName: 'invalid-first-character-of-tag-name',\r\n    unexpectedEqualsSignBeforeAttributeName: 'unexpected-equals-sign-before-attribute-name',\r\n    missingEndTagName: 'missing-end-tag-name',\r\n    unexpectedCharacterInAttributeName: 'unexpected-character-in-attribute-name',\r\n    unknownNamedCharacterReference: 'unknown-named-character-reference',\r\n    missingSemicolonAfterCharacterReference: 'missing-semicolon-after-character-reference',\r\n    unexpectedCharacterAfterDoctypeSystemIdentifier: 'unexpected-character-after-doctype-system-identifier',\r\n    unexpectedCharacterInUnquotedAttributeValue: 'unexpected-character-in-unquoted-attribute-value',\r\n    eofBeforeTagName: 'eof-before-tag-name',\r\n    eofInTag: 'eof-in-tag',\r\n    missingAttributeValue: 'missing-attribute-value',\r\n    missingWhitespaceBetweenAttributes: 'missing-whitespace-between-attributes',\r\n    missingWhitespaceAfterDoctypePublicKeyword: 'missing-whitespace-after-doctype-public-keyword',\r\n    missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers:\r\n        'missing-whitespace-between-doctype-public-and-system-identifiers',\r\n    missingWhitespaceAfterDoctypeSystemKeyword: 'missing-whitespace-after-doctype-system-keyword',\r\n    missingQuoteBeforeDoctypePublicIdentifier: 'missing-quote-before-doctype-public-identifier',\r\n    missingQuoteBeforeDoctypeSystemIdentifier: 'missing-quote-before-doctype-system-identifier',\r\n    missingDoctypePublicIdentifier: 'missing-doctype-public-identifier',\r\n    missingDoctypeSystemIdentifier: 'missing-doctype-system-identifier',\r\n    abruptDoctypePublicIdentifier: 'abrupt-doctype-public-identifier',\r\n    abruptDoctypeSystemIdentifier: 'abrupt-doctype-system-identifier',\r\n    cdataInHtmlContent: 'cdata-in-html-content',\r\n    incorrectlyOpenedComment: 'incorrectly-opened-comment',\r\n    eofInScriptHtmlCommentLikeText: 'eof-in-script-html-comment-like-text',\r\n    eofInDoctype: 'eof-in-doctype',\r\n    nestedComment: 'nested-comment',\r\n    abruptClosingOfEmptyComment: 'abrupt-closing-of-empty-comment',\r\n    eofInComment: 'eof-in-comment',\r\n    incorrectlyClosedComment: 'incorrectly-closed-comment',\r\n    eofInCdata: 'eof-in-cdata',\r\n    absenceOfDigitsInNumericCharacterReference: 'absence-of-digits-in-numeric-character-reference',\r\n    nullCharacterReference: 'null-character-reference',\r\n    surrogateCharacterReference: 'surrogate-character-reference',\r\n    characterReferenceOutsideUnicodeRange: 'character-reference-outside-unicode-range',\r\n    controlCharacterReference: 'control-character-reference',\r\n    noncharacterCharacterReference: 'noncharacter-character-reference',\r\n    missingWhitespaceBeforeDoctypeName: 'missing-whitespace-before-doctype-name',\r\n    missingDoctypeName: 'missing-doctype-name',\r\n    invalidCharacterSequenceAfterDoctypeName: 'invalid-character-sequence-after-doctype-name',\r\n    duplicateAttribute: 'duplicate-attribute',\r\n    nonConformingDoctype: 'non-conforming-doctype',\r\n    missingDoctype: 'missing-doctype',\r\n    misplacedDoctype: 'misplaced-doctype',\r\n    endTagWithoutMatchingOpenElement: 'end-tag-without-matching-open-element',\r\n    closingOfElementWithOpenChildElements: 'closing-of-element-with-open-child-elements',\r\n    disallowedContentInNoscriptInHead: 'disallowed-content-in-noscript-in-head',\r\n    openElementsLeftAfterEof: 'open-elements-left-after-eof',\r\n    abandonedHeadElementChild: 'abandoned-head-element-child',\r\n    misplacedStartTagForHeadElement: 'misplaced-start-tag-for-head-element',\r\n    nestedNoscriptInHead: 'nested-noscript-in-head',\r\n    eofInElementThatCanContainOnlyText: 'eof-in-element-that-can-contain-only-text'\r\n};\r\n", "'use strict';\r\n\r\nconst unicode = require('../common/unicode');\r\nconst ERR = require('../common/error-codes');\r\n\r\n//Aliases\r\nconst $ = unicode.CODE_POINTS;\r\n\r\n//Const\r\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\r\n\r\n//Preprocessor\r\n//NOTE: HTML input preprocessing\r\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\r\nclass Preprocessor {\r\n    constructor() {\r\n        this.html = null;\r\n\r\n        this.pos = -1;\r\n        this.lastGapPos = -1;\r\n        this.lastCharPos = -1;\r\n\r\n        this.gapStack = [];\r\n\r\n        this.skipNextNewLine = false;\r\n\r\n        this.lastChunkWritten = false;\r\n        this.endOfChunkHit = false;\r\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\r\n    }\r\n\r\n    _err() {\r\n        // NOTE: err reporting is noop by default. Enabled by mixin.\r\n    }\r\n\r\n    _addGap() {\r\n        this.gapStack.push(this.lastGapPos);\r\n        this.lastGapPos = this.pos;\r\n    }\r\n\r\n    _processSurrogate(cp) {\r\n        //NOTE: try to peek a surrogate pair\r\n        if (this.pos !== this.lastCharPos) {\r\n            const nextCp = this.html.charCodeAt(this.pos + 1);\r\n\r\n            if (unicode.isSurrogatePair(nextCp)) {\r\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\r\n                this.pos++;\r\n\r\n                //NOTE: add gap that should be avoided during retreat\r\n                this._addGap();\r\n\r\n                return unicode.getSurrogatePairCodePoint(cp, nextCp);\r\n            }\r\n        }\r\n\r\n        //NOTE: we are at the end of a chunk, therefore we can't infer surrogate pair yet.\r\n        else if (!this.lastChunkWritten) {\r\n            this.endOfChunkHit = true;\r\n            return $.EOF;\r\n        }\r\n\r\n        //NOTE: isolated surrogate\r\n        this._err(ERR.surrogateInInputStream);\r\n\r\n        return cp;\r\n    }\r\n\r\n    dropParsedChunk() {\r\n        if (this.pos > this.bufferWaterline) {\r\n            this.lastCharPos -= this.pos;\r\n            this.html = this.html.substring(this.pos);\r\n            this.pos = 0;\r\n            this.lastGapPos = -1;\r\n            this.gapStack = [];\r\n        }\r\n    }\r\n\r\n    write(chunk, isLastChunk) {\r\n        if (this.html) {\r\n            this.html += chunk;\r\n        } else {\r\n            this.html = chunk;\r\n        }\r\n\r\n        this.lastCharPos = this.html.length - 1;\r\n        this.endOfChunkHit = false;\r\n        this.lastChunkWritten = isLastChunk;\r\n    }\r\n\r\n    insertHtmlAtCurrentPos(chunk) {\r\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1, this.html.length);\r\n\r\n        this.lastCharPos = this.html.length - 1;\r\n        this.endOfChunkHit = false;\r\n    }\r\n\r\n    advance() {\r\n        this.pos++;\r\n\r\n        if (this.pos > this.lastCharPos) {\r\n            this.endOfChunkHit = !this.lastChunkWritten;\r\n            return $.EOF;\r\n        }\r\n\r\n        let cp = this.html.charCodeAt(this.pos);\r\n\r\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\r\n        //must be ignored.\r\n        if (this.skipNextNewLine && cp === $.LINE_FEED) {\r\n            this.skipNextNewLine = false;\r\n            this._addGap();\r\n            return this.advance();\r\n        }\r\n\r\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\r\n        if (cp === $.CARRIAGE_RETURN) {\r\n            this.skipNextNewLine = true;\r\n            return $.LINE_FEED;\r\n        }\r\n\r\n        this.skipNextNewLine = false;\r\n\r\n        if (unicode.isSurrogate(cp)) {\r\n            cp = this._processSurrogate(cp);\r\n        }\r\n\r\n        //OPTIMIZATION: first check if code point is in the common allowed\r\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\r\n        //before going into detailed performance cost validation.\r\n        const isCommonValidRange =\r\n            (cp > 0x1f && cp < 0x7f) || cp === $.LINE_FEED || cp === $.CARRIAGE_RETURN || (cp > 0x9f && cp < 0xfdd0);\r\n\r\n        if (!isCommonValidRange) {\r\n            this._checkForProblematicCharacters(cp);\r\n        }\r\n\r\n        return cp;\r\n    }\r\n\r\n    _checkForProblematicCharacters(cp) {\r\n        if (unicode.isControlCodePoint(cp)) {\r\n            this._err(ERR.controlCharacterInInputStream);\r\n        } else if (unicode.isUndefinedCodePoint(cp)) {\r\n            this._err(ERR.noncharacterInInputStream);\r\n        }\r\n    }\r\n\r\n    retreat() {\r\n        if (this.pos === this.lastGapPos) {\r\n            this.lastGapPos = this.gapStack.pop();\r\n            this.pos--;\r\n        }\r\n\r\n        this.pos--;\r\n    }\r\n}\r\n\r\nmodule.exports = Preprocessor;\r\n", "'use strict';\r\n\r\n//NOTE: this file contains auto-generated array mapped radix tree that is used for the named entity references consumption\r\n//(details: https://github.com/inikulin/parse5/tree/master/scripts/generate-named-entity-data/README.md)\r\nmodule.exports = new Uint16Array([4,52,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,106,303,412,810,1432,1701,1796,1987,2114,2360,2420,2484,3170,3251,4140,4393,4575,4610,5106,5512,5728,6117,6274,6315,6345,6427,6516,7002,7910,8733,9323,9870,10170,10631,10893,11318,11386,11467,12773,13092,14474,14922,15448,15542,16419,17666,18166,18611,19004,19095,19298,19397,4,16,69,77,97,98,99,102,103,108,109,110,111,112,114,115,116,117,140,150,158,169,176,194,199,210,216,222,226,242,256,266,283,294,108,105,103,5,198,1,59,148,1,198,80,5,38,1,59,156,1,38,99,117,116,101,5,193,1,59,167,1,193,114,101,118,101,59,1,258,4,2,105,121,182,191,114,99,5,194,1,59,189,1,194,59,1,1040,114,59,3,55349,56580,114,97,118,101,5,192,1,59,208,1,192,112,104,97,59,1,913,97,99,114,59,1,256,100,59,1,10835,4,2,103,112,232,237,111,110,59,1,260,102,59,3,55349,56632,112,108,121,70,117,110,99,116,105,111,110,59,1,8289,105,110,103,5,197,1,59,264,1,197,4,2,99,115,272,277,114,59,3,55349,56476,105,103,110,59,1,8788,105,108,100,101,5,195,1,59,292,1,195,109,108,5,196,1,59,301,1,196,4,8,97,99,101,102,111,114,115,117,321,350,354,383,388,394,400,405,4,2,99,114,327,336,107,115,108,97,115,104,59,1,8726,4,2,118,119,342,345,59,1,10983,101,100,59,1,8966,121,59,1,1041,4,3,99,114,116,362,369,379,97,117,115,101,59,1,8757,110,111,117,108,108,105,115,59,1,8492,97,59,1,914,114,59,3,55349,56581,112,102,59,3,55349,56633,101,118,101,59,1,728,99,114,59,1,8492,109,112,101,113,59,1,8782,4,14,72,79,97,99,100,101,102,104,105,108,111,114,115,117,442,447,456,504,542,547,569,573,577,616,678,784,790,796,99,121,59,1,1063,80,89,5,169,1,59,454,1,169,4,3,99,112,121,464,470,497,117,116,101,59,1,262,4,2,59,105,476,478,1,8914,116,97,108,68,105,102,102,101,114,101,110,116,105,97,108,68,59,1,8517,108,101,121,115,59,1,8493,4,4,97,101,105,111,514,520,530,535,114,111,110,59,1,268,100,105,108,5,199,1,59,528,1,199,114,99,59,1,264,110,105,110,116,59,1,8752,111,116,59,1,266,4,2,100,110,553,560,105,108,108,97,59,1,184,116,101,114,68,111,116,59,1,183,114,59,1,8493,105,59,1,935,114,99,108,101,4,4,68,77,80,84,591,596,603,609,111,116,59,1,8857,105,110,117,115,59,1,8854,108,117,115,59,1,8853,105,109,101,115,59,1,8855,111,4,2,99,115,623,646,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8754,101,67,117,114,108,121,4,2,68,81,658,671,111,117,98,108,101,81,117,111,116,101,59,1,8221,117,111,116,101,59,1,8217,4,4,108,110,112,117,688,701,736,753,111,110,4,2,59,101,696,698,1,8759,59,1,10868,4,3,103,105,116,709,717,722,114,117,101,110,116,59,1,8801,110,116,59,1,8751,111,117,114,73,110,116,101,103,114,97,108,59,1,8750,4,2,102,114,742,745,59,1,8450,111,100,117,99,116,59,1,8720,110,116,101,114,67,108,111,99,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8755,111,115,115,59,1,10799,99,114,59,3,55349,56478,112,4,2,59,67,803,805,1,8915,97,112,59,1,8781,4,11,68,74,83,90,97,99,101,102,105,111,115,834,850,855,860,865,888,903,916,921,1011,1415,4,2,59,111,840,842,1,8517,116,114,97,104,100,59,1,10513,99,121,59,1,1026,99,121,59,1,1029,99,121,59,1,1039,4,3,103,114,115,873,879,883,103,101,114,59,1,8225,114,59,1,8609,104,118,59,1,10980,4,2,97,121,894,900,114,111,110,59,1,270,59,1,1044,108,4,2,59,116,910,912,1,8711,97,59,1,916,114,59,3,55349,56583,4,2,97,102,927,998,4,2,99,109,933,992,114,105,116,105,99,97,108,4,4,65,68,71,84,950,957,978,985,99,117,116,101,59,1,180,111,4,2,116,117,964,967,59,1,729,98,108,101,65,99,117,116,101,59,1,733,114,97,118,101,59,1,96,105,108,100,101,59,1,732,111,110,100,59,1,8900,102,101,114,101,110,116,105,97,108,68,59,1,8518,4,4,112,116,117,119,1021,1026,1048,1249,102,59,3,55349,56635,4,3,59,68,69,1034,1036,1041,1,168,111,116,59,1,8412,113,117,97,108,59,1,8784,98,108,101,4,6,67,68,76,82,85,86,1065,1082,1101,1189,1211,1236,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8751,111,4,2,116,119,1089,1092,59,1,168,110,65,114,114,111,119,59,1,8659,4,2,101,111,1107,1141,102,116,4,3,65,82,84,1117,1124,1136,114,114,111,119,59,1,8656,105,103,104,116,65,114,114,111,119,59,1,8660,101,101,59,1,10980,110,103,4,2,76,82,1149,1177,101,102,116,4,2,65,82,1158,1165,114,114,111,119,59,1,10232,105,103,104,116,65,114,114,111,119,59,1,10234,105,103,104,116,65,114,114,111,119,59,1,10233,105,103,104,116,4,2,65,84,1199,1206,114,114,111,119,59,1,8658,101,101,59,1,8872,112,4,2,65,68,1218,1225,114,114,111,119,59,1,8657,111,119,110,65,114,114,111,119,59,1,8661,101,114,116,105,99,97,108,66,97,114,59,1,8741,110,4,6,65,66,76,82,84,97,1264,1292,1299,1352,1391,1408,114,114,111,119,4,3,59,66,85,1276,1278,1283,1,8595,97,114,59,1,10515,112,65,114,114,111,119,59,1,8693,114,101,118,101,59,1,785,101,102,116,4,3,82,84,86,1310,1323,1334,105,103,104,116,86,101,99,116,111,114,59,1,10576,101,101,86,101,99,116,111,114,59,1,10590,101,99,116,111,114,4,2,59,66,1345,1347,1,8637,97,114,59,1,10582,105,103,104,116,4,2,84,86,1362,1373,101,101,86,101,99,116,111,114,59,1,10591,101,99,116,111,114,4,2,59,66,1384,1386,1,8641,97,114,59,1,10583,101,101,4,2,59,65,1399,1401,1,8868,114,114,111,119,59,1,8615,114,114,111,119,59,1,8659,4,2,99,116,1421,1426,114,59,3,55349,56479,114,111,107,59,1,272,4,16,78,84,97,99,100,102,103,108,109,111,112,113,115,116,117,120,1466,1470,1478,1489,1515,1520,1525,1536,1544,1593,1609,1617,1650,1664,1668,1677,71,59,1,330,72,5,208,1,59,1476,1,208,99,117,116,101,5,201,1,59,1487,1,201,4,3,97,105,121,1497,1503,1512,114,111,110,59,1,282,114,99,5,202,1,59,1510,1,202,59,1,1069,111,116,59,1,278,114,59,3,55349,56584,114,97,118,101,5,200,1,59,1534,1,200,101,109,101,110,116,59,1,8712,4,2,97,112,1550,1555,99,114,59,1,274,116,121,4,2,83,86,1563,1576,109,97,108,108,83,113,117,97,114,101,59,1,9723,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59,1,9643,4,2,103,112,1599,1604,111,110,59,1,280,102,59,3,55349,56636,115,105,108,111,110,59,1,917,117,4,2,97,105,1624,1640,108,4,2,59,84,1631,1633,1,10869,105,108,100,101,59,1,8770,108,105,98,114,105,117,109,59,1,8652,4,2,99,105,1656,1660,114,59,1,8496,109,59,1,10867,97,59,1,919,109,108,5,203,1,59,1675,1,203,4,2,105,112,1683,1689,115,116,115,59,1,8707,111,110,101,110,116,105,97,108,69,59,1,8519,4,5,99,102,105,111,115,1713,1717,1722,1762,1791,121,59,1,1060,114,59,3,55349,56585,108,108,101,100,4,2,83,86,1732,1745,109,97,108,108,83,113,117,97,114,101,59,1,9724,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59,1,9642,4,3,112,114,117,1770,1775,1781,102,59,3,55349,56637,65,108,108,59,1,8704,114,105,101,114,116,114,102,59,1,8497,99,114,59,1,8497,4,12,74,84,97,98,99,100,102,103,111,114,115,116,1822,1827,1834,1848,1855,1877,1882,1887,1890,1896,1978,1984,99,121,59,1,1027,5,62,1,59,1832,1,62,109,109,97,4,2,59,100,1843,1845,1,915,59,1,988,114,101,118,101,59,1,286,4,3,101,105,121,1863,1869,1874,100,105,108,59,1,290,114,99,59,1,284,59,1,1043,111,116,59,1,288,114,59,3,55349,56586,59,1,8921,112,102,59,3,55349,56638,101,97,116,101,114,4,6,69,70,71,76,83,84,1915,1933,1944,1953,1959,1971,113,117,97,108,4,2,59,76,1925,1927,1,8805,101,115,115,59,1,8923,117,108,108,69,113,117,97,108,59,1,8807,114,101,97,116,101,114,59,1,10914,101,115,115,59,1,8823,108,97,110,116,69,113,117,97,108,59,1,10878,105,108,100,101,59,1,8819,99,114,59,3,55349,56482,59,1,8811,4,8,65,97,99,102,105,111,115,117,2005,2012,2026,2032,2036,2049,2073,2089,82,68,99,121,59,1,1066,4,2,99,116,2018,2023,101,107,59,1,711,59,1,94,105,114,99,59,1,292,114,59,1,8460,108,98,101,114,116,83,112,97,99,101,59,1,8459,4,2,112,114,2055,2059,102,59,1,8461,105,122,111,110,116,97,108,76,105,110,101,59,1,9472,4,2,99,116,2079,2083,114,59,1,8459,114,111,107,59,1,294,109,112,4,2,68,69,2097,2107,111,119,110,72,117,109,112,59,1,8782,113,117,97,108,59,1,8783,4,14,69,74,79,97,99,100,102,103,109,110,111,115,116,117,2144,2149,2155,2160,2171,2189,2194,2198,2209,2245,2307,2329,2334,2341,99,121,59,1,1045,108,105,103,59,1,306,99,121,59,1,1025,99,117,116,101,5,205,1,59,2169,1,205,4,2,105,121,2177,2186,114,99,5,206,1,59,2184,1,206,59,1,1048,111,116,59,1,304,114,59,1,8465,114,97,118,101,5,204,1,59,2207,1,204,4,3,59,97,112,2217,2219,2238,1,8465,4,2,99,103,2225,2229,114,59,1,298,105,110,97,114,121,73,59,1,8520,108,105,101,115,59,1,8658,4,2,116,118,2251,2281,4,2,59,101,2257,2259,1,8748,4,2,103,114,2265,2271,114,97,108,59,1,8747,115,101,99,116,105,111,110,59,1,8898,105,115,105,98,108,101,4,2,67,84,2293,2300,111,109,109,97,59,1,8291,105,109,101,115,59,1,8290,4,3,103,112,116,2315,2320,2325,111,110,59,1,302,102,59,3,55349,56640,97,59,1,921,99,114,59,1,8464,105,108,100,101,59,1,296,4,2,107,109,2347,2352,99,121,59,1,1030,108,5,207,1,59,2358,1,207,4,5,99,102,111,115,117,2372,2386,2391,2397,2414,4,2,105,121,2378,2383,114,99,59,1,308,59,1,1049,114,59,3,55349,56589,112,102,59,3,55349,56641,4,2,99,101,2403,2408,114,59,3,55349,56485,114,99,121,59,1,1032,107,99,121,59,1,1028,4,7,72,74,97,99,102,111,115,2436,2441,2446,2452,2467,2472,2478,99,121,59,1,1061,99,121,59,1,1036,112,112,97,59,1,922,4,2,101,121,2458,2464,100,105,108,59,1,310,59,1,1050,114,59,3,55349,56590,112,102,59,3,55349,56642,99,114,59,3,55349,56486,4,11,74,84,97,99,101,102,108,109,111,115,116,2508,2513,2520,2562,2585,2981,2986,3004,3011,3146,3167,99,121,59,1,1033,5,60,1,59,2518,1,60,4,5,99,109,110,112,114,2532,2538,2544,2548,2558,117,116,101,59,1,313,98,100,97,59,1,923,103,59,1,10218,108,97,99,101,116,114,102,59,1,8466,114,59,1,8606,4,3,97,101,121,2570,2576,2582,114,111,110,59,1,317,100,105,108,59,1,315,59,1,1051,4,2,102,115,2591,2907,116,4,10,65,67,68,70,82,84,85,86,97,114,2614,2663,2672,2728,2735,2760,2820,2870,2888,2895,4,2,110,114,2620,2633,103,108,101,66,114,97,99,107,101,116,59,1,10216,114,111,119,4,3,59,66,82,2644,2646,2651,1,8592,97,114,59,1,8676,105,103,104,116,65,114,114,111,119,59,1,8646,101,105,108,105,110,103,59,1,8968,111,4,2,117,119,2679,2692,98,108,101,66,114,97,99,107,101,116,59,1,10214,110,4,2,84,86,2699,2710,101,101,86,101,99,116,111,114,59,1,10593,101,99,116,111,114,4,2,59,66,2721,2723,1,8643,97,114,59,1,10585,108,111,111,114,59,1,8970,105,103,104,116,4,2,65,86,2745,2752,114,114,111,119,59,1,8596,101,99,116,111,114,59,1,10574,4,2,101,114,2766,2792,101,4,3,59,65,86,2775,2777,2784,1,8867,114,114,111,119,59,1,8612,101,99,116,111,114,59,1,10586,105,97,110,103,108,101,4,3,59,66,69,2806,2808,2813,1,8882,97,114,59,1,10703,113,117,97,108,59,1,8884,112,4,3,68,84,86,2829,2841,2852,111,119,110,86,101,99,116,111,114,59,1,10577,101,101,86,101,99,116,111,114,59,1,10592,101,99,116,111,114,4,2,59,66,2863,2865,1,8639,97,114,59,1,10584,101,99,116,111,114,4,2,59,66,2881,2883,1,8636,97,114,59,1,10578,114,114,111,119,59,1,8656,105,103,104,116,97,114,114,111,119,59,1,8660,115,4,6,69,70,71,76,83,84,2922,2936,2947,2956,2962,2974,113,117,97,108,71,114,101,97,116,101,114,59,1,8922,117,108,108,69,113,117,97,108,59,1,8806,114,101,97,116,101,114,59,1,8822,101,115,115,59,1,10913,108,97,110,116,69,113,117,97,108,59,1,10877,105,108,100,101,59,1,8818,114,59,3,55349,56591,4,2,59,101,2992,2994,1,8920,102,116,97,114,114,111,119,59,1,8666,105,100,111,116,59,1,319,4,3,110,112,119,3019,3110,3115,103,4,4,76,82,108,114,3030,3058,3070,3098,101,102,116,4,2,65,82,3039,3046,114,114,111,119,59,1,10229,105,103,104,116,65,114,114,111,119,59,1,10231,105,103,104,116,65,114,114,111,119,59,1,10230,101,102,116,4,2,97,114,3079,3086,114,114,111,119,59,1,10232,105,103,104,116,97,114,114,111,119,59,1,10234,105,103,104,116,97,114,114,111,119,59,1,10233,102,59,3,55349,56643,101,114,4,2,76,82,3123,3134,101,102,116,65,114,114,111,119,59,1,8601,105,103,104,116,65,114,114,111,119,59,1,8600,4,3,99,104,116,3154,3158,3161,114,59,1,8466,59,1,8624,114,111,107,59,1,321,59,1,8810,4,8,97,99,101,102,105,111,115,117,3188,3192,3196,3222,3227,3237,3243,3248,112,59,1,10501,121,59,1,1052,4,2,100,108,3202,3213,105,117,109,83,112,97,99,101,59,1,8287,108,105,110,116,114,102,59,1,8499,114,59,3,55349,56592,110,117,115,80,108,117,115,59,1,8723,112,102,59,3,55349,56644,99,114,59,1,8499,59,1,924,4,9,74,97,99,101,102,111,115,116,117,3271,3276,3283,3306,3422,3427,4120,4126,4137,99,121,59,1,1034,99,117,116,101,59,1,323,4,3,97,101,121,3291,3297,3303,114,111,110,59,1,327,100,105,108,59,1,325,59,1,1053,4,3,103,115,119,3314,3380,3415,97,116,105,118,101,4,3,77,84,86,3327,3340,3365,101,100,105,117,109,83,112,97,99,101,59,1,8203,104,105,4,2,99,110,3348,3357,107,83,112,97,99,101,59,1,8203,83,112,97,99,101,59,1,8203,101,114,121,84,104,105,110,83,112,97,99,101,59,1,8203,116,101,100,4,2,71,76,3389,3405,114,101,97,116,101,114,71,114,101,97,116,101,114,59,1,8811,101,115,115,76,101,115,115,59,1,8810,76,105,110,101,59,1,10,114,59,3,55349,56593,4,4,66,110,112,116,3437,3444,3460,3464,114,101,97,107,59,1,8288,66,114,101,97,107,105,110,103,83,112,97,99,101,59,1,160,102,59,1,8469,4,13,59,67,68,69,71,72,76,78,80,82,83,84,86,3492,3494,3517,3536,3578,3657,3685,3784,3823,3860,3915,4066,4107,1,10988,4,2,111,117,3500,3510,110,103,114,117,101,110,116,59,1,8802,112,67,97,112,59,1,8813,111,117,98,108,101,86,101,114,116,105,99,97,108,66,97,114,59,1,8742,4,3,108,113,120,3544,3552,3571,101,109,101,110,116,59,1,8713,117,97,108,4,2,59,84,3561,3563,1,8800,105,108,100,101,59,3,8770,824,105,115,116,115,59,1,8708,114,101,97,116,101,114,4,7,59,69,70,71,76,83,84,3600,3602,3609,3621,3631,3637,3650,1,8815,113,117,97,108,59,1,8817,117,108,108,69,113,117,97,108,59,3,8807,824,114,101,97,116,101,114,59,3,8811,824,101,115,115,59,1,8825,108,97,110,116,69,113,117,97,108,59,3,10878,824,105,108,100,101,59,1,8821,117,109,112,4,2,68,69,3666,3677,111,119,110,72,117,109,112,59,3,8782,824,113,117,97,108,59,3,8783,824,101,4,2,102,115,3692,3724,116,84,114,105,97,110,103,108,101,4,3,59,66,69,3709,3711,3717,1,8938,97,114,59,3,10703,824,113,117,97,108,59,1,8940,115,4,6,59,69,71,76,83,84,3739,3741,3748,3757,3764,3777,1,8814,113,117,97,108,59,1,8816,114,101,97,116,101,114,59,1,8824,101,115,115,59,3,8810,824,108,97,110,116,69,113,117,97,108,59,3,10877,824,105,108,100,101,59,1,8820,101,115,116,101,100,4,2,71,76,3795,3812,114,101,97,116,101,114,71,114,101,97,116,101,114,59,3,10914,824,101,115,115,76,101,115,115,59,3,10913,824,114,101,99,101,100,101,115,4,3,59,69,83,3838,3840,3848,1,8832,113,117,97,108,59,3,10927,824,108,97,110,116,69,113,117,97,108,59,1,8928,4,2,101,105,3866,3881,118,101,114,115,101,69,108,101,109,101,110,116,59,1,8716,103,104,116,84,114,105,97,110,103,108,101,4,3,59,66,69,3900,3902,3908,1,8939,97,114,59,3,10704,824,113,117,97,108,59,1,8941,4,2,113,117,3921,3973,117,97,114,101,83,117,4,2,98,112,3933,3952,115,101,116,4,2,59,69,3942,3945,3,8847,824,113,117,97,108,59,1,8930,101,114,115,101,116,4,2,59,69,3963,3966,3,8848,824,113,117,97,108,59,1,8931,4,3,98,99,112,3981,4000,4045,115,101,116,4,2,59,69,3990,3993,3,8834,8402,113,117,97,108,59,1,8840,99,101,101,100,115,4,4,59,69,83,84,4015,4017,4025,4037,1,8833,113,117,97,108,59,3,10928,824,108,97,110,116,69,113,117,97,108,59,1,8929,105,108,100,101,59,3,8831,824,101,114,115,101,116,4,2,59,69,4056,4059,3,8835,8402,113,117,97,108,59,1,8841,105,108,100,101,4,4,59,69,70,84,4080,4082,4089,4100,1,8769,113,117,97,108,59,1,8772,117,108,108,69,113,117,97,108,59,1,8775,105,108,100,101,59,1,8777,101,114,116,105,99,97,108,66,97,114,59,1,8740,99,114,59,3,55349,56489,105,108,100,101,5,209,1,59,4135,1,209,59,1,925,4,14,69,97,99,100,102,103,109,111,112,114,115,116,117,118,4170,4176,4187,4205,4212,4217,4228,4253,4259,4292,4295,4316,4337,4346,108,105,103,59,1,338,99,117,116,101,5,211,1,59,4185,1,211,4,2,105,121,4193,4202,114,99,5,212,1,59,4200,1,212,59,1,1054,98,108,97,99,59,1,336,114,59,3,55349,56594,114,97,118,101,5,210,1,59,4226,1,210,4,3,97,101,105,4236,4241,4246,99,114,59,1,332,103,97,59,1,937,99,114,111,110,59,1,927,112,102,59,3,55349,56646,101,110,67,117,114,108,121,4,2,68,81,4272,4285,111,117,98,108,101,81,117,111,116,101,59,1,8220,117,111,116,101,59,1,8216,59,1,10836,4,2,99,108,4301,4306,114,59,3,55349,56490,97,115,104,5,216,1,59,4314,1,216,105,4,2,108,109,4323,4332,100,101,5,213,1,59,4330,1,213,101,115,59,1,10807,109,108,5,214,1,59,4344,1,214,101,114,4,2,66,80,4354,4380,4,2,97,114,4360,4364,114,59,1,8254,97,99,4,2,101,107,4372,4375,59,1,9182,101,116,59,1,9140,97,114,101,110,116,104,101,115,105,115,59,1,9180,4,9,97,99,102,104,105,108,111,114,115,4413,4422,4426,4431,4435,4438,4448,4471,4561,114,116,105,97,108,68,59,1,8706,121,59,1,1055,114,59,3,55349,56595,105,59,1,934,59,1,928,117,115,77,105,110,117,115,59,1,177,4,2,105,112,4454,4467,110,99,97,114,101,112,108,97,110,101,59,1,8460,102,59,1,8473,4,4,59,101,105,111,4481,4483,4526,4531,1,10939,99,101,100,101,115,4,4,59,69,83,84,4498,4500,4507,4519,1,8826,113,117,97,108,59,1,10927,108,97,110,116,69,113,117,97,108,59,1,8828,105,108,100,101,59,1,8830,109,101,59,1,8243,4,2,100,112,4537,4543,117,99,116,59,1,8719,111,114,116,105,111,110,4,2,59,97,4555,4557,1,8759,108,59,1,8733,4,2,99,105,4567,4572,114,59,3,55349,56491,59,1,936,4,4,85,102,111,115,4585,4594,4599,4604,79,84,5,34,1,59,4592,1,34,114,59,3,55349,56596,112,102,59,1,8474,99,114,59,3,55349,56492,4,12,66,69,97,99,101,102,104,105,111,114,115,117,4636,4642,4650,4681,4704,4763,4767,4771,5047,5069,5081,5094,97,114,114,59,1,10512,71,5,174,1,59,4648,1,174,4,3,99,110,114,4658,4664,4668,117,116,101,59,1,340,103,59,1,10219,114,4,2,59,116,4675,4677,1,8608,108,59,1,10518,4,3,97,101,121,4689,4695,4701,114,111,110,59,1,344,100,105,108,59,1,342,59,1,1056,4,2,59,118,4710,4712,1,8476,101,114,115,101,4,2,69,85,4722,4748,4,2,108,113,4728,4736,101,109,101,110,116,59,1,8715,117,105,108,105,98,114,105,117,109,59,1,8651,112,69,113,117,105,108,105,98,114,105,117,109,59,1,10607,114,59,1,8476,111,59,1,929,103,104,116,4,8,65,67,68,70,84,85,86,97,4792,4840,4849,4905,4912,4972,5022,5040,4,2,110,114,4798,4811,103,108,101,66,114,97,99,107,101,116,59,1,10217,114,111,119,4,3,59,66,76,4822,4824,4829,1,8594,97,114,59,1,8677,101,102,116,65,114,114,111,119,59,1,8644,101,105,108,105,110,103,59,1,8969,111,4,2,117,119,4856,4869,98,108,101,66,114,97,99,107,101,116,59,1,10215,110,4,2,84,86,4876,4887,101,101,86,101,99,116,111,114,59,1,10589,101,99,116,111,114,4,2,59,66,4898,4900,1,8642,97,114,59,1,10581,108,111,111,114,59,1,8971,4,2,101,114,4918,4944,101,4,3,59,65,86,4927,4929,4936,1,8866,114,114,111,119,59,1,8614,101,99,116,111,114,59,1,10587,105,97,110,103,108,101,4,3,59,66,69,4958,4960,4965,1,8883,97,114,59,1,10704,113,117,97,108,59,1,8885,112,4,3,68,84,86,4981,4993,5004,111,119,110,86,101,99,116,111,114,59,1,10575,101,101,86,101,99,116,111,114,59,1,10588,101,99,116,111,114,4,2,59,66,5015,5017,1,8638,97,114,59,1,10580,101,99,116,111,114,4,2,59,66,5033,5035,1,8640,97,114,59,1,10579,114,114,111,119,59,1,8658,4,2,112,117,5053,5057,102,59,1,8477,110,100,73,109,112,108,105,101,115,59,1,10608,105,103,104,116,97,114,114,111,119,59,1,8667,4,2,99,104,5087,5091,114,59,1,8475,59,1,8625,108,101,68,101,108,97,121,101,100,59,1,10740,4,13,72,79,97,99,102,104,105,109,111,113,115,116,117,5134,5150,5157,5164,5198,5203,5259,5265,5277,5283,5374,5380,5385,4,2,67,99,5140,5146,72,99,121,59,1,1065,121,59,1,1064,70,84,99,121,59,1,1068,99,117,116,101,59,1,346,4,5,59,97,101,105,121,5176,5178,5184,5190,5195,1,10940,114,111,110,59,1,352,100,105,108,59,1,350,114,99,59,1,348,59,1,1057,114,59,3,55349,56598,111,114,116,4,4,68,76,82,85,5216,5227,5238,5250,111,119,110,65,114,114,111,119,59,1,8595,101,102,116,65,114,114,111,119,59,1,8592,105,103,104,116,65,114,114,111,119,59,1,8594,112,65,114,114,111,119,59,1,8593,103,109,97,59,1,931,97,108,108,67,105,114,99,108,101,59,1,8728,112,102,59,3,55349,56650,4,2,114,117,5289,5293,116,59,1,8730,97,114,101,4,4,59,73,83,85,5306,5308,5322,5367,1,9633,110,116,101,114,115,101,99,116,105,111,110,59,1,8851,117,4,2,98,112,5329,5347,115,101,116,4,2,59,69,5338,5340,1,8847,113,117,97,108,59,1,8849,101,114,115,101,116,4,2,59,69,5358,5360,1,8848,113,117,97,108,59,1,8850,110,105,111,110,59,1,8852,99,114,59,3,55349,56494,97,114,59,1,8902,4,4,98,99,109,112,5395,5420,5475,5478,4,2,59,115,5401,5403,1,8912,101,116,4,2,59,69,5411,5413,1,8912,113,117,97,108,59,1,8838,4,2,99,104,5426,5468,101,101,100,115,4,4,59,69,83,84,5440,5442,5449,5461,1,8827,113,117,97,108,59,1,10928,108,97,110,116,69,113,117,97,108,59,1,8829,105,108,100,101,59,1,8831,84,104,97,116,59,1,8715,59,1,8721,4,3,59,101,115,5486,5488,5507,1,8913,114,115,101,116,4,2,59,69,5498,5500,1,8835,113,117,97,108,59,1,8839,101,116,59,1,8913,4,11,72,82,83,97,99,102,104,105,111,114,115,5536,5546,5552,5567,5579,5602,5607,5655,5695,5701,5711,79,82,78,5,222,1,59,5544,1,222,65,68,69,59,1,8482,4,2,72,99,5558,5563,99,121,59,1,1035,121,59,1,1062,4,2,98,117,5573,5576,59,1,9,59,1,932,4,3,97,101,121,5587,5593,5599,114,111,110,59,1,356,100,105,108,59,1,354,59,1,1058,114,59,3,55349,56599,4,2,101,105,5613,5631,4,2,114,116,5619,5627,101,102,111,114,101,59,1,8756,97,59,1,920,4,2,99,110,5637,5647,107,83,112,97,99,101,59,3,8287,8202,83,112,97,99,101,59,1,8201,108,100,101,4,4,59,69,70,84,5668,5670,5677,5688,1,8764,113,117,97,108,59,1,8771,117,108,108,69,113,117,97,108,59,1,8773,105,108,100,101,59,1,8776,112,102,59,3,55349,56651,105,112,108,101,68,111,116,59,1,8411,4,2,99,116,5717,5722,114,59,3,55349,56495,114,111,107,59,1,358,4,14,97,98,99,100,102,103,109,110,111,112,114,115,116,117,5758,5789,5805,5823,5830,5835,5846,5852,5921,5937,6089,6095,6101,6108,4,2,99,114,5764,5774,117,116,101,5,218,1,59,5772,1,218,114,4,2,59,111,5781,5783,1,8607,99,105,114,59,1,10569,114,4,2,99,101,5796,5800,121,59,1,1038,118,101,59,1,364,4,2,105,121,5811,5820,114,99,5,219,1,59,5818,1,219,59,1,1059,98,108,97,99,59,1,368,114,59,3,55349,56600,114,97,118,101,5,217,1,59,5844,1,217,97,99,114,59,1,362,4,2,100,105,5858,5905,101,114,4,2,66,80,5866,5892,4,2,97,114,5872,5876,114,59,1,95,97,99,4,2,101,107,5884,5887,59,1,9183,101,116,59,1,9141,97,114,101,110,116,104,101,115,105,115,59,1,9181,111,110,4,2,59,80,5913,5915,1,8899,108,117,115,59,1,8846,4,2,103,112,5927,5932,111,110,59,1,370,102,59,3,55349,56652,4,8,65,68,69,84,97,100,112,115,5955,5985,5996,6009,6026,6033,6044,6075,114,114,111,119,4,3,59,66,68,5967,5969,5974,1,8593,97,114,59,1,10514,111,119,110,65,114,114,111,119,59,1,8645,111,119,110,65,114,114,111,119,59,1,8597,113,117,105,108,105,98,114,105,117,109,59,1,10606,101,101,4,2,59,65,6017,6019,1,8869,114,114,111,119,59,1,8613,114,114,111,119,59,1,8657,111,119,110,97,114,114,111,119,59,1,8661,101,114,4,2,76,82,6052,6063,101,102,116,65,114,114,111,119,59,1,8598,105,103,104,116,65,114,114,111,119,59,1,8599,105,4,2,59,108,6082,6084,1,978,111,110,59,1,933,105,110,103,59,1,366,99,114,59,3,55349,56496,105,108,100,101,59,1,360,109,108,5,220,1,59,6115,1,220,4,9,68,98,99,100,101,102,111,115,118,6137,6143,6148,6152,6166,6250,6255,6261,6267,97,115,104,59,1,8875,97,114,59,1,10987,121,59,1,1042,97,115,104,4,2,59,108,6161,6163,1,8873,59,1,10982,4,2,101,114,6172,6175,59,1,8897,4,3,98,116,121,6183,6188,6238,97,114,59,1,8214,4,2,59,105,6194,6196,1,8214,99,97,108,4,4,66,76,83,84,6209,6214,6220,6231,97,114,59,1,8739,105,110,101,59,1,124,101,112,97,114,97,116,111,114,59,1,10072,105,108,100,101,59,1,8768,84,104,105,110,83,112,97,99,101,59,1,8202,114,59,3,55349,56601,112,102,59,3,55349,56653,99,114,59,3,55349,56497,100,97,115,104,59,1,8874,4,5,99,101,102,111,115,6286,6292,6298,6303,6309,105,114,99,59,1,372,100,103,101,59,1,8896,114,59,3,55349,56602,112,102,59,3,55349,56654,99,114,59,3,55349,56498,4,4,102,105,111,115,6325,6330,6333,6339,114,59,3,55349,56603,59,1,926,112,102,59,3,55349,56655,99,114,59,3,55349,56499,4,9,65,73,85,97,99,102,111,115,117,6365,6370,6375,6380,6391,6405,6410,6416,6422,99,121,59,1,1071,99,121,59,1,1031,99,121,59,1,1070,99,117,116,101,5,221,1,59,6389,1,221,4,2,105,121,6397,6402,114,99,59,1,374,59,1,1067,114,59,3,55349,56604,112,102,59,3,55349,56656,99,114,59,3,55349,56500,109,108,59,1,376,4,8,72,97,99,100,101,102,111,115,6445,6450,6457,6472,6477,6501,6505,6510,99,121,59,1,1046,99,117,116,101,59,1,377,4,2,97,121,6463,6469,114,111,110,59,1,381,59,1,1047,111,116,59,1,379,4,2,114,116,6483,6497,111,87,105,100,116,104,83,112,97,99,101,59,1,8203,97,59,1,918,114,59,1,8488,112,102,59,1,8484,99,114,59,3,55349,56501,4,16,97,98,99,101,102,103,108,109,110,111,112,114,115,116,117,119,6550,6561,6568,6612,6622,6634,6645,6672,6699,6854,6870,6923,6933,6963,6974,6983,99,117,116,101,5,225,1,59,6559,1,225,114,101,118,101,59,1,259,4,6,59,69,100,105,117,121,6582,6584,6588,6591,6600,6609,1,8766,59,3,8766,819,59,1,8767,114,99,5,226,1,59,6598,1,226,116,101,5,180,1,59,6607,1,180,59,1,1072,108,105,103,5,230,1,59,6620,1,230,4,2,59,114,6628,6630,1,8289,59,3,55349,56606,114,97,118,101,5,224,1,59,6643,1,224,4,2,101,112,6651,6667,4,2,102,112,6657,6663,115,121,109,59,1,8501,104,59,1,8501,104,97,59,1,945,4,2,97,112,6678,6692,4,2,99,108,6684,6688,114,59,1,257,103,59,1,10815,5,38,1,59,6697,1,38,4,2,100,103,6705,6737,4,5,59,97,100,115,118,6717,6719,6724,6727,6734,1,8743,110,100,59,1,10837,59,1,10844,108,111,112,101,59,1,10840,59,1,10842,4,7,59,101,108,109,114,115,122,6753,6755,6758,6762,6814,6835,6848,1,8736,59,1,10660,101,59,1,8736,115,100,4,2,59,97,6770,6772,1,8737,4,8,97,98,99,100,101,102,103,104,6790,6793,6796,6799,6802,6805,6808,6811,59,1,10664,59,1,10665,59,1,10666,59,1,10667,59,1,10668,59,1,10669,59,1,10670,59,1,10671,116,4,2,59,118,6821,6823,1,8735,98,4,2,59,100,6830,6832,1,8894,59,1,10653,4,2,112,116,6841,6845,104,59,1,8738,59,1,197,97,114,114,59,1,9084,4,2,103,112,6860,6865,111,110,59,1,261,102,59,3,55349,56658,4,7,59,69,97,101,105,111,112,6886,6888,6891,6897,6900,6904,6908,1,8776,59,1,10864,99,105,114,59,1,10863,59,1,8778,100,59,1,8779,115,59,1,39,114,111,120,4,2,59,101,6917,6919,1,8776,113,59,1,8778,105,110,103,5,229,1,59,6931,1,229,4,3,99,116,121,6941,6946,6949,114,59,3,55349,56502,59,1,42,109,112,4,2,59,101,6957,6959,1,8776,113,59,1,8781,105,108,100,101,5,227,1,59,6972,1,227,109,108,5,228,1,59,6981,1,228,4,2,99,105,6989,6997,111,110,105,110,116,59,1,8755,110,116,59,1,10769,4,16,78,97,98,99,100,101,102,105,107,108,110,111,112,114,115,117,7036,7041,7119,7135,7149,7155,7219,7224,7347,7354,7463,7489,7786,7793,7814,7866,111,116,59,1,10989,4,2,99,114,7047,7094,107,4,4,99,101,112,115,7058,7064,7073,7080,111,110,103,59,1,8780,112,115,105,108,111,110,59,1,1014,114,105,109,101,59,1,8245,105,109,4,2,59,101,7088,7090,1,8765,113,59,1,8909,4,2,118,119,7100,7105,101,101,59,1,8893,101,100,4,2,59,103,7113,7115,1,8965,101,59,1,8965,114,107,4,2,59,116,7127,7129,1,9141,98,114,107,59,1,9142,4,2,111,121,7141,7146,110,103,59,1,8780,59,1,1073,113,117,111,59,1,8222,4,5,99,109,112,114,116,7167,7181,7188,7193,7199,97,117,115,4,2,59,101,7176,7178,1,8757,59,1,8757,112,116,121,118,59,1,10672,115,105,59,1,1014,110,111,117,59,1,8492,4,3,97,104,119,7207,7210,7213,59,1,946,59,1,8502,101,101,110,59,1,8812,114,59,3,55349,56607,103,4,7,99,111,115,116,117,118,119,7241,7262,7288,7305,7328,7335,7340,4,3,97,105,117,7249,7253,7258,112,59,1,8898,114,99,59,1,9711,112,59,1,8899,4,3,100,112,116,7270,7275,7281,111,116,59,1,10752,108,117,115,59,1,10753,105,109,101,115,59,1,10754,4,2,113,116,7294,7300,99,117,112,59,1,10758,97,114,59,1,9733,114,105,97,110,103,108,101,4,2,100,117,7318,7324,111,119,110,59,1,9661,112,59,1,9651,112,108,117,115,59,1,10756,101,101,59,1,8897,101,100,103,101,59,1,8896,97,114,111,119,59,1,10509,4,3,97,107,111,7362,7436,7458,4,2,99,110,7368,7432,107,4,3,108,115,116,7377,7386,7394,111,122,101,110,103,101,59,1,10731,113,117,97,114,101,59,1,9642,114,105,97,110,103,108,101,4,4,59,100,108,114,7411,7413,7419,7425,1,9652,111,119,110,59,1,9662,101,102,116,59,1,9666,105,103,104,116,59,1,9656,107,59,1,9251,4,2,49,51,7442,7454,4,2,50,52,7448,7451,59,1,9618,59,1,9617,52,59,1,9619,99,107,59,1,9608,4,2,101,111,7469,7485,4,2,59,113,7475,7478,3,61,8421,117,105,118,59,3,8801,8421,116,59,1,8976,4,4,112,116,119,120,7499,7504,7517,7523,102,59,3,55349,56659,4,2,59,116,7510,7512,1,8869,111,109,59,1,8869,116,105,101,59,1,8904,4,12,68,72,85,86,98,100,104,109,112,116,117,118,7549,7571,7597,7619,7655,7660,7682,7708,7715,7721,7728,7750,4,4,76,82,108,114,7559,7562,7565,7568,59,1,9559,59,1,9556,59,1,9558,59,1,9555,4,5,59,68,85,100,117,7583,7585,7588,7591,7594,1,9552,59,1,9574,59,1,9577,59,1,9572,59,1,9575,4,4,76,82,108,114,7607,7610,7613,7616,59,1,9565,59,1,9562,59,1,9564,59,1,9561,4,7,59,72,76,82,104,108,114,7635,7637,7640,7643,7646,7649,7652,1,9553,59,1,9580,59,1,9571,59,1,9568,59,1,9579,59,1,9570,59,1,9567,111,120,59,1,10697,4,4,76,82,108,114,7670,7673,7676,7679,59,1,9557,59,1,9554,59,1,9488,59,1,9484,4,5,59,68,85,100,117,7694,7696,7699,7702,7705,1,9472,59,1,9573,59,1,9576,59,1,9516,59,1,9524,105,110,117,115,59,1,8863,108,117,115,59,1,8862,105,109,101,115,59,1,8864,4,4,76,82,108,114,7738,7741,7744,7747,59,1,9563,59,1,9560,59,1,9496,59,1,9492,4,7,59,72,76,82,104,108,114,7766,7768,7771,7774,7777,7780,7783,1,9474,59,1,9578,59,1,9569,59,1,9566,59,1,9532,59,1,9508,59,1,9500,114,105,109,101,59,1,8245,4,2,101,118,7799,7804,118,101,59,1,728,98,97,114,5,166,1,59,7812,1,166,4,4,99,101,105,111,7824,7829,7834,7846,114,59,3,55349,56503,109,105,59,1,8271,109,4,2,59,101,7841,7843,1,8765,59,1,8909,108,4,3,59,98,104,7855,7857,7860,1,92,59,1,10693,115,117,98,59,1,10184,4,2,108,109,7872,7885,108,4,2,59,101,7879,7881,1,8226,116,59,1,8226,112,4,3,59,69,101,7894,7896,7899,1,8782,59,1,10926,4,2,59,113,7905,7907,1,8783,59,1,8783,4,15,97,99,100,101,102,104,105,108,111,114,115,116,117,119,121,7942,8021,8075,8080,8121,8126,8157,8279,8295,8430,8446,8485,8491,8707,8726,4,3,99,112,114,7950,7956,8007,117,116,101,59,1,263,4,6,59,97,98,99,100,115,7970,7972,7977,7984,7998,8003,1,8745,110,100,59,1,10820,114,99,117,112,59,1,10825,4,2,97,117,7990,7994,112,59,1,10827,112,59,1,10823,111,116,59,1,10816,59,3,8745,65024,4,2,101,111,8013,8017,116,59,1,8257,110,59,1,711,4,4,97,101,105,117,8031,8046,8056,8061,4,2,112,114,8037,8041,115,59,1,10829,111,110,59,1,269,100,105,108,5,231,1,59,8054,1,231,114,99,59,1,265,112,115,4,2,59,115,8069,8071,1,10828,109,59,1,10832,111,116,59,1,267,4,3,100,109,110,8088,8097,8104,105,108,5,184,1,59,8095,1,184,112,116,121,118,59,1,10674,116,5,162,2,59,101,8112,8114,1,162,114,100,111,116,59,1,183,114,59,3,55349,56608,4,3,99,101,105,8134,8138,8154,121,59,1,1095,99,107,4,2,59,109,8146,8148,1,10003,97,114,107,59,1,10003,59,1,967,114,4,7,59,69,99,101,102,109,115,8174,8176,8179,8258,8261,8268,8273,1,9675,59,1,10691,4,3,59,101,108,8187,8189,8193,1,710,113,59,1,8791,101,4,2,97,100,8200,8223,114,114,111,119,4,2,108,114,8210,8216,101,102,116,59,1,8634,105,103,104,116,59,1,8635,4,5,82,83,97,99,100,8235,8238,8241,8246,8252,59,1,174,59,1,9416,115,116,59,1,8859,105,114,99,59,1,8858,97,115,104,59,1,8861,59,1,8791,110,105,110,116,59,1,10768,105,100,59,1,10991,99,105,114,59,1,10690,117,98,115,4,2,59,117,8288,8290,1,9827,105,116,59,1,9827,4,4,108,109,110,112,8305,8326,8376,8400,111,110,4,2,59,101,8313,8315,1,58,4,2,59,113,8321,8323,1,8788,59,1,8788,4,2,109,112,8332,8344,97,4,2,59,116,8339,8341,1,44,59,1,64,4,3,59,102,108,8352,8354,8358,1,8705,110,59,1,8728,101,4,2,109,120,8365,8371,101,110,116,59,1,8705,101,115,59,1,8450,4,2,103,105,8382,8395,4,2,59,100,8388,8390,1,8773,111,116,59,1,10861,110,116,59,1,8750,4,3,102,114,121,8408,8412,8417,59,3,55349,56660,111,100,59,1,8720,5,169,2,59,115,8424,8426,1,169,114,59,1,8471,4,2,97,111,8436,8441,114,114,59,1,8629,115,115,59,1,10007,4,2,99,117,8452,8457,114,59,3,55349,56504,4,2,98,112,8463,8474,4,2,59,101,8469,8471,1,10959,59,1,10961,4,2,59,101,8480,8482,1,10960,59,1,10962,100,111,116,59,1,8943,4,7,100,101,108,112,114,118,119,8507,8522,8536,8550,8600,8697,8702,97,114,114,4,2,108,114,8516,8519,59,1,10552,59,1,10549,4,2,112,115,8528,8532,114,59,1,8926,99,59,1,8927,97,114,114,4,2,59,112,8545,8547,1,8630,59,1,10557,4,6,59,98,99,100,111,115,8564,8566,8573,8587,8592,8596,1,8746,114,99,97,112,59,1,10824,4,2,97,117,8579,8583,112,59,1,10822,112,59,1,10826,111,116,59,1,8845,114,59,1,10821,59,3,8746,65024,4,4,97,108,114,118,8610,8623,8663,8672,114,114,4,2,59,109,8618,8620,1,8631,59,1,10556,121,4,3,101,118,119,8632,8651,8656,113,4,2,112,115,8639,8645,114,101,99,59,1,8926,117,99,99,59,1,8927,101,101,59,1,8910,101,100,103,101,59,1,8911,101,110,5,164,1,59,8670,1,164,101,97,114,114,111,119,4,2,108,114,8684,8690,101,102,116,59,1,8630,105,103,104,116,59,1,8631,101,101,59,1,8910,101,100,59,1,8911,4,2,99,105,8713,8721,111,110,105,110,116,59,1,8754,110,116,59,1,8753,108,99,116,121,59,1,9005,4,19,65,72,97,98,99,100,101,102,104,105,106,108,111,114,115,116,117,119,122,8773,8778,8783,8821,8839,8854,8887,8914,8930,8944,9036,9041,9058,9197,9227,9258,9281,9297,9305,114,114,59,1,8659,97,114,59,1,10597,4,4,103,108,114,115,8793,8799,8805,8809,103,101,114,59,1,8224,101,116,104,59,1,8504,114,59,1,8595,104,4,2,59,118,8816,8818,1,8208,59,1,8867,4,2,107,108,8827,8834,97,114,111,119,59,1,10511,97,99,59,1,733,4,2,97,121,8845,8851,114,111,110,59,1,271,59,1,1076,4,3,59,97,111,8862,8864,8880,1,8518,4,2,103,114,8870,8876,103,101,114,59,1,8225,114,59,1,8650,116,115,101,113,59,1,10871,4,3,103,108,109,8895,8902,8907,5,176,1,59,8900,1,176,116,97,59,1,948,112,116,121,118,59,1,10673,4,2,105,114,8920,8926,115,104,116,59,1,10623,59,3,55349,56609,97,114,4,2,108,114,8938,8941,59,1,8643,59,1,8642,4,5,97,101,103,115,118,8956,8986,8989,8996,9001,109,4,3,59,111,115,8965,8967,8983,1,8900,110,100,4,2,59,115,8975,8977,1,8900,117,105,116,59,1,9830,59,1,9830,59,1,168,97,109,109,97,59,1,989,105,110,59,1,8946,4,3,59,105,111,9009,9011,9031,1,247,100,101,5,247,2,59,111,9020,9022,1,247,110,116,105,109,101,115,59,1,8903,110,120,59,1,8903,99,121,59,1,1106,99,4,2,111,114,9048,9053,114,110,59,1,8990,111,112,59,1,8973,4,5,108,112,116,117,119,9070,9076,9081,9130,9144,108,97,114,59,1,36,102,59,3,55349,56661,4,5,59,101,109,112,115,9093,9095,9109,9116,9122,1,729,113,4,2,59,100,9102,9104,1,8784,111,116,59,1,8785,105,110,117,115,59,1,8760,108,117,115,59,1,8724,113,117,97,114,101,59,1,8865,98,108,101,98,97,114,119,101,100,103,101,59,1,8966,110,4,3,97,100,104,9153,9160,9172,114,114,111,119,59,1,8595,111,119,110,97,114,114,111,119,115,59,1,8650,97,114,112,111,111,110,4,2,108,114,9184,9190,101,102,116,59,1,8643,105,103,104,116,59,1,8642,4,2,98,99,9203,9211,107,97,114,111,119,59,1,10512,4,2,111,114,9217,9222,114,110,59,1,8991,111,112,59,1,8972,4,3,99,111,116,9235,9248,9252,4,2,114,121,9241,9245,59,3,55349,56505,59,1,1109,108,59,1,10742,114,111,107,59,1,273,4,2,100,114,9264,9269,111,116,59,1,8945,105,4,2,59,102,9276,9278,1,9663,59,1,9662,4,2,97,104,9287,9292,114,114,59,1,8693,97,114,59,1,10607,97,110,103,108,101,59,1,10662,4,2,99,105,9311,9315,121,59,1,1119,103,114,97,114,114,59,1,10239,4,18,68,97,99,100,101,102,103,108,109,110,111,112,113,114,115,116,117,120,9361,9376,9398,9439,9444,9447,9462,9495,9531,9585,9598,9614,9659,9755,9771,9792,9808,9826,4,2,68,111,9367,9372,111,116,59,1,10871,116,59,1,8785,4,2,99,115,9382,9392,117,116,101,5,233,1,59,9390,1,233,116,101,114,59,1,10862,4,4,97,105,111,121,9408,9414,9430,9436,114,111,110,59,1,283,114,4,2,59,99,9421,9423,1,8790,5,234,1,59,9428,1,234,108,111,110,59,1,8789,59,1,1101,111,116,59,1,279,59,1,8519,4,2,68,114,9453,9458,111,116,59,1,8786,59,3,55349,56610,4,3,59,114,115,9470,9472,9482,1,10906,97,118,101,5,232,1,59,9480,1,232,4,2,59,100,9488,9490,1,10902,111,116,59,1,10904,4,4,59,105,108,115,9505,9507,9515,9518,1,10905,110,116,101,114,115,59,1,9191,59,1,8467,4,2,59,100,9524,9526,1,10901,111,116,59,1,10903,4,3,97,112,115,9539,9544,9564,99,114,59,1,275,116,121,4,3,59,115,118,9554,9556,9561,1,8709,101,116,59,1,8709,59,1,8709,112,4,2,49,59,9571,9583,4,2,51,52,9577,9580,59,1,8196,59,1,8197,1,8195,4,2,103,115,9591,9594,59,1,331,112,59,1,8194,4,2,103,112,9604,9609,111,110,59,1,281,102,59,3,55349,56662,4,3,97,108,115,9622,9635,9640,114,4,2,59,115,9629,9631,1,8917,108,59,1,10723,117,115,59,1,10865,105,4,3,59,108,118,9649,9651,9656,1,949,111,110,59,1,949,59,1,1013,4,4,99,115,117,118,9669,9686,9716,9747,4,2,105,111,9675,9680,114,99,59,1,8790,108,111,110,59,1,8789,4,2,105,108,9692,9696,109,59,1,8770,97,110,116,4,2,103,108,9705,9710,116,114,59,1,10902,101,115,115,59,1,10901,4,3,97,101,105,9724,9729,9734,108,115,59,1,61,115,116,59,1,8799,118,4,2,59,68,9741,9743,1,8801,68,59,1,10872,112,97,114,115,108,59,1,10725,4,2,68,97,9761,9766,111,116,59,1,8787,114,114,59,1,10609,4,3,99,100,105,9779,9783,9788,114,59,1,8495,111,116,59,1,8784,109,59,1,8770,4,2,97,104,9798,9801,59,1,951,5,240,1,59,9806,1,240,4,2,109,114,9814,9822,108,5,235,1,59,9820,1,235,111,59,1,8364,4,3,99,105,112,9834,9838,9843,108,59,1,33,115,116,59,1,8707,4,2,101,111,9849,9859,99,116,97,116,105,111,110,59,1,8496,110,101,110,116,105,97,108,101,59,1,8519,4,12,97,99,101,102,105,106,108,110,111,112,114,115,9896,9910,9914,9921,9954,9960,9967,9989,9994,10027,10036,10164,108,108,105,110,103,100,111,116,115,101,113,59,1,8786,121,59,1,1092,109,97,108,101,59,1,9792,4,3,105,108,114,9929,9935,9950,108,105,103,59,1,64259,4,2,105,108,9941,9945,103,59,1,64256,105,103,59,1,64260,59,3,55349,56611,108,105,103,59,1,64257,108,105,103,59,3,102,106,4,3,97,108,116,9975,9979,9984,116,59,1,9837,105,103,59,1,64258,110,115,59,1,9649,111,102,59,1,402,4,2,112,114,10000,10005,102,59,3,55349,56663,4,2,97,107,10011,10016,108,108,59,1,8704,4,2,59,118,10022,10024,1,8916,59,1,10969,97,114,116,105,110,116,59,1,10765,4,2,97,111,10042,10159,4,2,99,115,10048,10155,4,6,49,50,51,52,53,55,10062,10102,10114,10135,10139,10151,4,6,50,51,52,53,54,56,10076,10083,10086,10093,10096,10099,5,189,1,59,10081,1,189,59,1,8531,5,188,1,59,10091,1,188,59,1,8533,59,1,8537,59,1,8539,4,2,51,53,10108,10111,59,1,8532,59,1,8534,4,3,52,53,56,10122,10129,10132,5,190,1,59,10127,1,190,59,1,8535,59,1,8540,53,59,1,8536,4,2,54,56,10145,10148,59,1,8538,59,1,8541,56,59,1,8542,108,59,1,8260,119,110,59,1,8994,99,114,59,3,55349,56507,4,17,69,97,98,99,100,101,102,103,105,106,108,110,111,114,115,116,118,10206,10217,10247,10254,10268,10273,10358,10363,10374,10380,10385,10406,10458,10464,10470,10497,10610,4,2,59,108,10212,10214,1,8807,59,1,10892,4,3,99,109,112,10225,10231,10244,117,116,101,59,1,501,109,97,4,2,59,100,10239,10241,1,947,59,1,989,59,1,10886,114,101,118,101,59,1,287,4,2,105,121,10260,10265,114,99,59,1,285,59,1,1075,111,116,59,1,289,4,4,59,108,113,115,10283,10285,10288,10308,1,8805,59,1,8923,4,3,59,113,115,10296,10298,10301,1,8805,59,1,8807,108,97,110,116,59,1,10878,4,4,59,99,100,108,10318,10320,10324,10345,1,10878,99,59,1,10921,111,116,4,2,59,111,10332,10334,1,10880,4,2,59,108,10340,10342,1,10882,59,1,10884,4,2,59,101,10351,10354,3,8923,65024,115,59,1,10900,114,59,3,55349,56612,4,2,59,103,10369,10371,1,8811,59,1,8921,109,101,108,59,1,8503,99,121,59,1,1107,4,4,59,69,97,106,10395,10397,10400,10403,1,8823,59,1,10898,59,1,10917,59,1,10916,4,4,69,97,101,115,10416,10419,10434,10453,59,1,8809,112,4,2,59,112,10426,10428,1,10890,114,111,120,59,1,10890,4,2,59,113,10440,10442,1,10888,4,2,59,113,10448,10450,1,10888,59,1,8809,105,109,59,1,8935,112,102,59,3,55349,56664,97,118,101,59,1,96,4,2,99,105,10476,10480,114,59,1,8458,109,4,3,59,101,108,10489,10491,10494,1,8819,59,1,10894,59,1,10896,5,62,6,59,99,100,108,113,114,10512,10514,10527,10532,10538,10545,1,62,4,2,99,105,10520,10523,59,1,10919,114,59,1,10874,111,116,59,1,8919,80,97,114,59,1,10645,117,101,115,116,59,1,10876,4,5,97,100,101,108,115,10557,10574,10579,10599,10605,4,2,112,114,10563,10570,112,114,111,120,59,1,10886,114,59,1,10616,111,116,59,1,8919,113,4,2,108,113,10586,10592,101,115,115,59,1,8923,108,101,115,115,59,1,10892,101,115,115,59,1,8823,105,109,59,1,8819,4,2,101,110,10616,10626,114,116,110,101,113,113,59,3,8809,65024,69,59,3,8809,65024,4,10,65,97,98,99,101,102,107,111,115,121,10653,10658,10713,10718,10724,10760,10765,10786,10850,10875,114,114,59,1,8660,4,4,105,108,109,114,10668,10674,10678,10684,114,115,112,59,1,8202,102,59,1,189,105,108,116,59,1,8459,4,2,100,114,10690,10695,99,121,59,1,1098,4,3,59,99,119,10703,10705,10710,1,8596,105,114,59,1,10568,59,1,8621,97,114,59,1,8463,105,114,99,59,1,293,4,3,97,108,114,10732,10748,10754,114,116,115,4,2,59,117,10741,10743,1,9829,105,116,59,1,9829,108,105,112,59,1,8230,99,111,110,59,1,8889,114,59,3,55349,56613,115,4,2,101,119,10772,10779,97,114,111,119,59,1,10533,97,114,111,119,59,1,10534,4,5,97,109,111,112,114,10798,10803,10809,10839,10844,114,114,59,1,8703,116,104,116,59,1,8763,107,4,2,108,114,10816,10827,101,102,116,97,114,114,111,119,59,1,8617,105,103,104,116,97,114,114,111,119,59,1,8618,102,59,3,55349,56665,98,97,114,59,1,8213,4,3,99,108,116,10858,10863,10869,114,59,3,55349,56509,97,115,104,59,1,8463,114,111,107,59,1,295,4,2,98,112,10881,10887,117,108,108,59,1,8259,104,101,110,59,1,8208,4,15,97,99,101,102,103,105,106,109,110,111,112,113,115,116,117,10925,10936,10958,10977,10990,11001,11039,11045,11101,11192,11220,11226,11237,11285,11299,99,117,116,101,5,237,1,59,10934,1,237,4,3,59,105,121,10944,10946,10955,1,8291,114,99,5,238,1,59,10953,1,238,59,1,1080,4,2,99,120,10964,10968,121,59,1,1077,99,108,5,161,1,59,10975,1,161,4,2,102,114,10983,10986,59,1,8660,59,3,55349,56614,114,97,118,101,5,236,1,59,10999,1,236,4,4,59,105,110,111,11011,11013,11028,11034,1,8520,4,2,105,110,11019,11024,110,116,59,1,10764,116,59,1,8749,102,105,110,59,1,10716,116,97,59,1,8489,108,105,103,59,1,307,4,3,97,111,112,11053,11092,11096,4,3,99,103,116,11061,11065,11088,114,59,1,299,4,3,101,108,112,11073,11076,11082,59,1,8465,105,110,101,59,1,8464,97,114,116,59,1,8465,104,59,1,305,102,59,1,8887,101,100,59,1,437,4,5,59,99,102,111,116,11113,11115,11121,11136,11142,1,8712,97,114,101,59,1,8453,105,110,4,2,59,116,11129,11131,1,8734,105,101,59,1,10717,100,111,116,59,1,305,4,5,59,99,101,108,112,11154,11156,11161,11179,11186,1,8747,97,108,59,1,8890,4,2,103,114,11167,11173,101,114,115,59,1,8484,99,97,108,59,1,8890,97,114,104,107,59,1,10775,114,111,100,59,1,10812,4,4,99,103,112,116,11202,11206,11211,11216,121,59,1,1105,111,110,59,1,303,102,59,3,55349,56666,97,59,1,953,114,111,100,59,1,10812,117,101,115,116,5,191,1,59,11235,1,191,4,2,99,105,11243,11248,114,59,3,55349,56510,110,4,5,59,69,100,115,118,11261,11263,11266,11271,11282,1,8712,59,1,8953,111,116,59,1,8949,4,2,59,118,11277,11279,1,8948,59,1,8947,59,1,8712,4,2,59,105,11291,11293,1,8290,108,100,101,59,1,297,4,2,107,109,11305,11310,99,121,59,1,1110,108,5,239,1,59,11316,1,239,4,6,99,102,109,111,115,117,11332,11346,11351,11357,11363,11380,4,2,105,121,11338,11343,114,99,59,1,309,59,1,1081,114,59,3,55349,56615,97,116,104,59,1,567,112,102,59,3,55349,56667,4,2,99,101,11369,11374,114,59,3,55349,56511,114,99,121,59,1,1112,107,99,121,59,1,1108,4,8,97,99,102,103,104,106,111,115,11404,11418,11433,11438,11445,11450,11455,11461,112,112,97,4,2,59,118,11413,11415,1,954,59,1,1008,4,2,101,121,11424,11430,100,105,108,59,1,311,59,1,1082,114,59,3,55349,56616,114,101,101,110,59,1,312,99,121,59,1,1093,99,121,59,1,1116,112,102,59,3,55349,56668,99,114,59,3,55349,56512,4,23,65,66,69,72,97,98,99,100,101,102,103,104,106,108,109,110,111,112,114,115,116,117,118,11515,11538,11544,11555,11560,11721,11780,11818,11868,12136,12160,12171,12203,12208,12246,12275,12327,12509,12523,12569,12641,12732,12752,4,3,97,114,116,11523,11528,11532,114,114,59,1,8666,114,59,1,8656,97,105,108,59,1,10523,97,114,114,59,1,10510,4,2,59,103,11550,11552,1,8806,59,1,10891,97,114,59,1,10594,4,9,99,101,103,109,110,112,113,114,116,11580,11586,11594,11600,11606,11624,11627,11636,11694,117,116,101,59,1,314,109,112,116,121,118,59,1,10676,114,97,110,59,1,8466,98,100,97,59,1,955,103,4,3,59,100,108,11615,11617,11620,1,10216,59,1,10641,101,59,1,10216,59,1,10885,117,111,5,171,1,59,11634,1,171,114,4,8,59,98,102,104,108,112,115,116,11655,11657,11669,11673,11677,11681,11685,11690,1,8592,4,2,59,102,11663,11665,1,8676,115,59,1,10527,115,59,1,10525,107,59,1,8617,112,59,1,8619,108,59,1,10553,105,109,59,1,10611,108,59,1,8610,4,3,59,97,101,11702,11704,11709,1,10923,105,108,59,1,10521,4,2,59,115,11715,11717,1,10925,59,3,10925,65024,4,3,97,98,114,11729,11734,11739,114,114,59,1,10508,114,107,59,1,10098,4,2,97,107,11745,11758,99,4,2,101,107,11752,11755,59,1,123,59,1,91,4,2,101,115,11764,11767,59,1,10635,108,4,2,100,117,11774,11777,59,1,10639,59,1,10637,4,4,97,101,117,121,11790,11796,11811,11815,114,111,110,59,1,318,4,2,100,105,11802,11807,105,108,59,1,316,108,59,1,8968,98,59,1,123,59,1,1083,4,4,99,113,114,115,11828,11832,11845,11864,97,59,1,10550,117,111,4,2,59,114,11840,11842,1,8220,59,1,8222,4,2,100,117,11851,11857,104,97,114,59,1,10599,115,104,97,114,59,1,10571,104,59,1,8626,4,5,59,102,103,113,115,11880,11882,12008,12011,12031,1,8804,116,4,5,97,104,108,114,116,11895,11913,11935,11947,11996,114,114,111,119,4,2,59,116,11905,11907,1,8592,97,105,108,59,1,8610,97,114,112,111,111,110,4,2,100,117,11925,11931,111,119,110,59,1,8637,112,59,1,8636,101,102,116,97,114,114,111,119,115,59,1,8647,105,103,104,116,4,3,97,104,115,11959,11974,11984,114,114,111,119,4,2,59,115,11969,11971,1,8596,59,1,8646,97,114,112,111,111,110,115,59,1,8651,113,117,105,103,97,114,114,111,119,59,1,8621,104,114,101,101,116,105,109,101,115,59,1,8907,59,1,8922,4,3,59,113,115,12019,12021,12024,1,8804,59,1,8806,108,97,110,116,59,1,10877,4,5,59,99,100,103,115,12043,12045,12049,12070,12083,1,10877,99,59,1,10920,111,116,4,2,59,111,12057,12059,1,10879,4,2,59,114,12065,12067,1,10881,59,1,10883,4,2,59,101,12076,12079,3,8922,65024,115,59,1,10899,4,5,97,100,101,103,115,12095,12103,12108,12126,12131,112,112,114,111,120,59,1,10885,111,116,59,1,8918,113,4,2,103,113,12115,12120,116,114,59,1,8922,103,116,114,59,1,10891,116,114,59,1,8822,105,109,59,1,8818,4,3,105,108,114,12144,12150,12156,115,104,116,59,1,10620,111,111,114,59,1,8970,59,3,55349,56617,4,2,59,69,12166,12168,1,8822,59,1,10897,4,2,97,98,12177,12198,114,4,2,100,117,12184,12187,59,1,8637,4,2,59,108,12193,12195,1,8636,59,1,10602,108,107,59,1,9604,99,121,59,1,1113,4,5,59,97,99,104,116,12220,12222,12227,12235,12241,1,8810,114,114,59,1,8647,111,114,110,101,114,59,1,8990,97,114,100,59,1,10603,114,105,59,1,9722,4,2,105,111,12252,12258,100,111,116,59,1,320,117,115,116,4,2,59,97,12267,12269,1,9136,99,104,101,59,1,9136,4,4,69,97,101,115,12285,12288,12303,12322,59,1,8808,112,4,2,59,112,12295,12297,1,10889,114,111,120,59,1,10889,4,2,59,113,12309,12311,1,10887,4,2,59,113,12317,12319,1,10887,59,1,8808,105,109,59,1,8934,4,8,97,98,110,111,112,116,119,122,12345,12359,12364,12421,12446,12467,12474,12490,4,2,110,114,12351,12355,103,59,1,10220,114,59,1,8701,114,107,59,1,10214,103,4,3,108,109,114,12373,12401,12409,101,102,116,4,2,97,114,12382,12389,114,114,111,119,59,1,10229,105,103,104,116,97,114,114,111,119,59,1,10231,97,112,115,116,111,59,1,10236,105,103,104,116,97,114,114,111,119,59,1,10230,112,97,114,114,111,119,4,2,108,114,12433,12439,101,102,116,59,1,8619,105,103,104,116,59,1,8620,4,3,97,102,108,12454,12458,12462,114,59,1,10629,59,3,55349,56669,117,115,59,1,10797,105,109,101,115,59,1,10804,4,2,97,98,12480,12485,115,116,59,1,8727,97,114,59,1,95,4,3,59,101,102,12498,12500,12506,1,9674,110,103,101,59,1,9674,59,1,10731,97,114,4,2,59,108,12517,12519,1,40,116,59,1,10643,4,5,97,99,104,109,116,12535,12540,12548,12561,12564,114,114,59,1,8646,111,114,110,101,114,59,1,8991,97,114,4,2,59,100,12556,12558,1,8651,59,1,10605,59,1,8206,114,105,59,1,8895,4,6,97,99,104,105,113,116,12583,12589,12594,12597,12614,12635,113,117,111,59,1,8249,114,59,3,55349,56513,59,1,8624,109,4,3,59,101,103,12606,12608,12611,1,8818,59,1,10893,59,1,10895,4,2,98,117,12620,12623,59,1,91,111,4,2,59,114,12630,12632,1,8216,59,1,8218,114,111,107,59,1,322,5,60,8,59,99,100,104,105,108,113,114,12660,12662,12675,12680,12686,12692,12698,12705,1,60,4,2,99,105,12668,12671,59,1,10918,114,59,1,10873,111,116,59,1,8918,114,101,101,59,1,8907,109,101,115,59,1,8905,97,114,114,59,1,10614,117,101,115,116,59,1,10875,4,2,80,105,12711,12716,97,114,59,1,10646,4,3,59,101,102,12724,12726,12729,1,9667,59,1,8884,59,1,9666,114,4,2,100,117,12739,12746,115,104,97,114,59,1,10570,104,97,114,59,1,10598,4,2,101,110,12758,12768,114,116,110,101,113,113,59,3,8808,65024,69,59,3,8808,65024,4,14,68,97,99,100,101,102,104,105,108,110,111,112,115,117,12803,12809,12893,12908,12914,12928,12933,12937,13011,13025,13032,13049,13052,13069,68,111,116,59,1,8762,4,4,99,108,112,114,12819,12827,12849,12887,114,5,175,1,59,12825,1,175,4,2,101,116,12833,12836,59,1,9794,4,2,59,101,12842,12844,1,10016,115,101,59,1,10016,4,2,59,115,12855,12857,1,8614,116,111,4,4,59,100,108,117,12869,12871,12877,12883,1,8614,111,119,110,59,1,8615,101,102,116,59,1,8612,112,59,1,8613,107,101,114,59,1,9646,4,2,111,121,12899,12905,109,109,97,59,1,10793,59,1,1084,97,115,104,59,1,8212,97,115,117,114,101,100,97,110,103,108,101,59,1,8737,114,59,3,55349,56618,111,59,1,8487,4,3,99,100,110,12945,12954,12985,114,111,5,181,1,59,12952,1,181,4,4,59,97,99,100,12964,12966,12971,12976,1,8739,115,116,59,1,42,105,114,59,1,10992,111,116,5,183,1,59,12983,1,183,117,115,4,3,59,98,100,12995,12997,13000,1,8722,59,1,8863,4,2,59,117,13006,13008,1,8760,59,1,10794,4,2,99,100,13017,13021,112,59,1,10971,114,59,1,8230,112,108,117,115,59,1,8723,4,2,100,112,13038,13044,101,108,115,59,1,8871,102,59,3,55349,56670,59,1,8723,4,2,99,116,13058,13063,114,59,3,55349,56514,112,111,115,59,1,8766,4,3,59,108,109,13077,13079,13087,1,956,116,105,109,97,112,59,1,8888,97,112,59,1,8888,4,24,71,76,82,86,97,98,99,100,101,102,103,104,105,106,108,109,111,112,114,115,116,117,118,119,13142,13165,13217,13229,13247,13330,13359,13414,13420,13508,13513,13579,13602,13626,13631,13762,13767,13855,13936,13995,14214,14285,14312,14432,4,2,103,116,13148,13152,59,3,8921,824,4,2,59,118,13158,13161,3,8811,8402,59,3,8811,824,4,3,101,108,116,13173,13200,13204,102,116,4,2,97,114,13181,13188,114,114,111,119,59,1,8653,105,103,104,116,97,114,114,111,119,59,1,8654,59,3,8920,824,4,2,59,118,13210,13213,3,8810,8402,59,3,8810,824,105,103,104,116,97,114,114,111,119,59,1,8655,4,2,68,100,13235,13241,97,115,104,59,1,8879,97,115,104,59,1,8878,4,5,98,99,110,112,116,13259,13264,13270,13275,13308,108,97,59,1,8711,117,116,101,59,1,324,103,59,3,8736,8402,4,5,59,69,105,111,112,13287,13289,13293,13298,13302,1,8777,59,3,10864,824,100,59,3,8779,824,115,59,1,329,114,111,120,59,1,8777,117,114,4,2,59,97,13316,13318,1,9838,108,4,2,59,115,13325,13327,1,9838,59,1,8469,4,2,115,117,13336,13344,112,5,160,1,59,13342,1,160,109,112,4,2,59,101,13352,13355,3,8782,824,59,3,8783,824,4,5,97,101,111,117,121,13371,13385,13391,13407,13411,4,2,112,114,13377,13380,59,1,10819,111,110,59,1,328,100,105,108,59,1,326,110,103,4,2,59,100,13399,13401,1,8775,111,116,59,3,10861,824,112,59,1,10818,59,1,1085,97,115,104,59,1,8211,4,7,59,65,97,100,113,115,120,13436,13438,13443,13466,13472,13478,13494,1,8800,114,114,59,1,8663,114,4,2,104,114,13450,13454,107,59,1,10532,4,2,59,111,13460,13462,1,8599,119,59,1,8599,111,116,59,3,8784,824,117,105,118,59,1,8802,4,2,101,105,13484,13489,97,114,59,1,10536,109,59,3,8770,824,105,115,116,4,2,59,115,13503,13505,1,8708,59,1,8708,114,59,3,55349,56619,4,4,69,101,115,116,13523,13527,13563,13568,59,3,8807,824,4,3,59,113,115,13535,13537,13559,1,8817,4,3,59,113,115,13545,13547,13551,1,8817,59,3,8807,824,108,97,110,116,59,3,10878,824,59,3,10878,824,105,109,59,1,8821,4,2,59,114,13574,13576,1,8815,59,1,8815,4,3,65,97,112,13587,13592,13597,114,114,59,1,8654,114,114,59,1,8622,97,114,59,1,10994,4,3,59,115,118,13610,13612,13623,1,8715,4,2,59,100,13618,13620,1,8956,59,1,8954,59,1,8715,99,121,59,1,1114,4,7,65,69,97,100,101,115,116,13647,13652,13656,13661,13665,13737,13742,114,114,59,1,8653,59,3,8806,824,114,114,59,1,8602,114,59,1,8229,4,4,59,102,113,115,13675,13677,13703,13725,1,8816,116,4,2,97,114,13684,13691,114,114,111,119,59,1,8602,105,103,104,116,97,114,114,111,119,59,1,8622,4,3,59,113,115,13711,13713,13717,1,8816,59,3,8806,824,108,97,110,116,59,3,10877,824,4,2,59,115,13731,13734,3,10877,824,59,1,8814,105,109,59,1,8820,4,2,59,114,13748,13750,1,8814,105,4,2,59,101,13757,13759,1,8938,59,1,8940,105,100,59,1,8740,4,2,112,116,13773,13778,102,59,3,55349,56671,5,172,3,59,105,110,13787,13789,13829,1,172,110,4,4,59,69,100,118,13800,13802,13806,13812,1,8713,59,3,8953,824,111,116,59,3,8949,824,4,3,97,98,99,13820,13823,13826,59,1,8713,59,1,8951,59,1,8950,105,4,2,59,118,13836,13838,1,8716,4,3,97,98,99,13846,13849,13852,59,1,8716,59,1,8958,59,1,8957,4,3,97,111,114,13863,13892,13899,114,4,4,59,97,115,116,13874,13876,13883,13888,1,8742,108,108,101,108,59,1,8742,108,59,3,11005,8421,59,3,8706,824,108,105,110,116,59,1,10772,4,3,59,99,101,13907,13909,13914,1,8832,117,101,59,1,8928,4,2,59,99,13920,13923,3,10927,824,4,2,59,101,13929,13931,1,8832,113,59,3,10927,824,4,4,65,97,105,116,13946,13951,13971,13982,114,114,59,1,8655,114,114,4,3,59,99,119,13961,13963,13967,1,8603,59,3,10547,824,59,3,8605,824,103,104,116,97,114,114,111,119,59,1,8603,114,105,4,2,59,101,13990,13992,1,8939,59,1,8941,4,7,99,104,105,109,112,113,117,14011,14036,14060,14080,14085,14090,14106,4,4,59,99,101,114,14021,14023,14028,14032,1,8833,117,101,59,1,8929,59,3,10928,824,59,3,55349,56515,111,114,116,4,2,109,112,14045,14050,105,100,59,1,8740,97,114,97,108,108,101,108,59,1,8742,109,4,2,59,101,14067,14069,1,8769,4,2,59,113,14075,14077,1,8772,59,1,8772,105,100,59,1,8740,97,114,59,1,8742,115,117,4,2,98,112,14098,14102,101,59,1,8930,101,59,1,8931,4,3,98,99,112,14114,14157,14171,4,4,59,69,101,115,14124,14126,14130,14133,1,8836,59,3,10949,824,59,1,8840,101,116,4,2,59,101,14141,14144,3,8834,8402,113,4,2,59,113,14151,14153,1,8840,59,3,10949,824,99,4,2,59,101,14164,14166,1,8833,113,59,3,10928,824,4,4,59,69,101,115,14181,14183,14187,14190,1,8837,59,3,10950,824,59,1,8841,101,116,4,2,59,101,14198,14201,3,8835,8402,113,4,2,59,113,14208,14210,1,8841,59,3,10950,824,4,4,103,105,108,114,14224,14228,14238,14242,108,59,1,8825,108,100,101,5,241,1,59,14236,1,241,103,59,1,8824,105,97,110,103,108,101,4,2,108,114,14254,14269,101,102,116,4,2,59,101,14263,14265,1,8938,113,59,1,8940,105,103,104,116,4,2,59,101,14279,14281,1,8939,113,59,1,8941,4,2,59,109,14291,14293,1,957,4,3,59,101,115,14301,14303,14308,1,35,114,111,59,1,8470,112,59,1,8199,4,9,68,72,97,100,103,105,108,114,115,14332,14338,14344,14349,14355,14369,14376,14408,14426,97,115,104,59,1,8877,97,114,114,59,1,10500,112,59,3,8781,8402,97,115,104,59,1,8876,4,2,101,116,14361,14365,59,3,8805,8402,59,3,62,8402,110,102,105,110,59,1,10718,4,3,65,101,116,14384,14389,14393,114,114,59,1,10498,59,3,8804,8402,4,2,59,114,14399,14402,3,60,8402,105,101,59,3,8884,8402,4,2,65,116,14414,14419,114,114,59,1,10499,114,105,101,59,3,8885,8402,105,109,59,3,8764,8402,4,3,65,97,110,14440,14445,14468,114,114,59,1,8662,114,4,2,104,114,14452,14456,107,59,1,10531,4,2,59,111,14462,14464,1,8598,119,59,1,8598,101,97,114,59,1,10535,4,18,83,97,99,100,101,102,103,104,105,108,109,111,112,114,115,116,117,118,14512,14515,14535,14560,14597,14603,14618,14643,14657,14662,14701,14741,14747,14769,14851,14877,14907,14916,59,1,9416,4,2,99,115,14521,14531,117,116,101,5,243,1,59,14529,1,243,116,59,1,8859,4,2,105,121,14541,14557,114,4,2,59,99,14548,14550,1,8858,5,244,1,59,14555,1,244,59,1,1086,4,5,97,98,105,111,115,14572,14577,14583,14587,14591,115,104,59,1,8861,108,97,99,59,1,337,118,59,1,10808,116,59,1,8857,111,108,100,59,1,10684,108,105,103,59,1,339,4,2,99,114,14609,14614,105,114,59,1,10687,59,3,55349,56620,4,3,111,114,116,14626,14630,14640,110,59,1,731,97,118,101,5,242,1,59,14638,1,242,59,1,10689,4,2,98,109,14649,14654,97,114,59,1,10677,59,1,937,110,116,59,1,8750,4,4,97,99,105,116,14672,14677,14693,14698,114,114,59,1,8634,4,2,105,114,14683,14687,114,59,1,10686,111,115,115,59,1,10683,110,101,59,1,8254,59,1,10688,4,3,97,101,105,14709,14714,14719,99,114,59,1,333,103,97,59,1,969,4,3,99,100,110,14727,14733,14736,114,111,110,59,1,959,59,1,10678,117,115,59,1,8854,112,102,59,3,55349,56672,4,3,97,101,108,14755,14759,14764,114,59,1,10679,114,112,59,1,10681,117,115,59,1,8853,4,7,59,97,100,105,111,115,118,14785,14787,14792,14831,14837,14841,14848,1,8744,114,114,59,1,8635,4,4,59,101,102,109,14802,14804,14817,14824,1,10845,114,4,2,59,111,14811,14813,1,8500,102,59,1,8500,5,170,1,59,14822,1,170,5,186,1,59,14829,1,186,103,111,102,59,1,8886,114,59,1,10838,108,111,112,101,59,1,10839,59,1,10843,4,3,99,108,111,14859,14863,14873,114,59,1,8500,97,115,104,5,248,1,59,14871,1,248,108,59,1,8856,105,4,2,108,109,14884,14893,100,101,5,245,1,59,14891,1,245,101,115,4,2,59,97,14901,14903,1,8855,115,59,1,10806,109,108,5,246,1,59,14914,1,246,98,97,114,59,1,9021,4,12,97,99,101,102,104,105,108,109,111,114,115,117,14948,14992,14996,15033,15038,15068,15090,15189,15192,15222,15427,15441,114,4,4,59,97,115,116,14959,14961,14976,14989,1,8741,5,182,2,59,108,14968,14970,1,182,108,101,108,59,1,8741,4,2,105,108,14982,14986,109,59,1,10995,59,1,11005,59,1,8706,121,59,1,1087,114,4,5,99,105,109,112,116,15009,15014,15019,15024,15027,110,116,59,1,37,111,100,59,1,46,105,108,59,1,8240,59,1,8869,101,110,107,59,1,8241,114,59,3,55349,56621,4,3,105,109,111,15046,15057,15063,4,2,59,118,15052,15054,1,966,59,1,981,109,97,116,59,1,8499,110,101,59,1,9742,4,3,59,116,118,15076,15078,15087,1,960,99,104,102,111,114,107,59,1,8916,59,1,982,4,2,97,117,15096,15119,110,4,2,99,107,15103,15115,107,4,2,59,104,15110,15112,1,8463,59,1,8462,118,59,1,8463,115,4,9,59,97,98,99,100,101,109,115,116,15140,15142,15148,15151,15156,15168,15171,15179,15184,1,43,99,105,114,59,1,10787,59,1,8862,105,114,59,1,10786,4,2,111,117,15162,15165,59,1,8724,59,1,10789,59,1,10866,110,5,177,1,59,15177,1,177,105,109,59,1,10790,119,111,59,1,10791,59,1,177,4,3,105,112,117,15200,15208,15213,110,116,105,110,116,59,1,10773,102,59,3,55349,56673,110,100,5,163,1,59,15220,1,163,4,10,59,69,97,99,101,105,110,111,115,117,15244,15246,15249,15253,15258,15334,15347,15367,15416,15421,1,8826,59,1,10931,112,59,1,10935,117,101,59,1,8828,4,2,59,99,15264,15266,1,10927,4,6,59,97,99,101,110,115,15280,15282,15290,15299,15303,15329,1,8826,112,112,114,111,120,59,1,10935,117,114,108,121,101,113,59,1,8828,113,59,1,10927,4,3,97,101,115,15311,15319,15324,112,112,114,111,120,59,1,10937,113,113,59,1,10933,105,109,59,1,8936,105,109,59,1,8830,109,101,4,2,59,115,15342,15344,1,8242,59,1,8473,4,3,69,97,115,15355,15358,15362,59,1,10933,112,59,1,10937,105,109,59,1,8936,4,3,100,102,112,15375,15378,15404,59,1,8719,4,3,97,108,115,15386,15392,15398,108,97,114,59,1,9006,105,110,101,59,1,8978,117,114,102,59,1,8979,4,2,59,116,15410,15412,1,8733,111,59,1,8733,105,109,59,1,8830,114,101,108,59,1,8880,4,2,99,105,15433,15438,114,59,3,55349,56517,59,1,968,110,99,115,112,59,1,8200,4,6,102,105,111,112,115,117,15462,15467,15472,15478,15485,15491,114,59,3,55349,56622,110,116,59,1,10764,112,102,59,3,55349,56674,114,105,109,101,59,1,8279,99,114,59,3,55349,56518,4,3,97,101,111,15499,15520,15534,116,4,2,101,105,15506,15515,114,110,105,111,110,115,59,1,8461,110,116,59,1,10774,115,116,4,2,59,101,15528,15530,1,63,113,59,1,8799,116,5,34,1,59,15540,1,34,4,21,65,66,72,97,98,99,100,101,102,104,105,108,109,110,111,112,114,115,116,117,120,15586,15609,15615,15620,15796,15855,15893,15931,15977,16001,16039,16183,16204,16222,16228,16285,16312,16318,16363,16408,16416,4,3,97,114,116,15594,15599,15603,114,114,59,1,8667,114,59,1,8658,97,105,108,59,1,10524,97,114,114,59,1,10511,97,114,59,1,10596,4,7,99,100,101,110,113,114,116,15636,15651,15656,15664,15687,15696,15770,4,2,101,117,15642,15646,59,3,8765,817,116,101,59,1,341,105,99,59,1,8730,109,112,116,121,118,59,1,10675,103,4,4,59,100,101,108,15675,15677,15680,15683,1,10217,59,1,10642,59,1,10661,101,59,1,10217,117,111,5,187,1,59,15694,1,187,114,4,11,59,97,98,99,102,104,108,112,115,116,119,15721,15723,15727,15739,15742,15746,15750,15754,15758,15763,15767,1,8594,112,59,1,10613,4,2,59,102,15733,15735,1,8677,115,59,1,10528,59,1,10547,115,59,1,10526,107,59,1,8618,112,59,1,8620,108,59,1,10565,105,109,59,1,10612,108,59,1,8611,59,1,8605,4,2,97,105,15776,15781,105,108,59,1,10522,111,4,2,59,110,15788,15790,1,8758,97,108,115,59,1,8474,4,3,97,98,114,15804,15809,15814,114,114,59,1,10509,114,107,59,1,10099,4,2,97,107,15820,15833,99,4,2,101,107,15827,15830,59,1,125,59,1,93,4,2,101,115,15839,15842,59,1,10636,108,4,2,100,117,15849,15852,59,1,10638,59,1,10640,4,4,97,101,117,121,15865,15871,15886,15890,114,111,110,59,1,345,4,2,100,105,15877,15882,105,108,59,1,343,108,59,1,8969,98,59,1,125,59,1,1088,4,4,99,108,113,115,15903,15907,15914,15927,97,59,1,10551,100,104,97,114,59,1,10601,117,111,4,2,59,114,15922,15924,1,8221,59,1,8221,104,59,1,8627,4,3,97,99,103,15939,15966,15970,108,4,4,59,105,112,115,15950,15952,15957,15963,1,8476,110,101,59,1,8475,97,114,116,59,1,8476,59,1,8477,116,59,1,9645,5,174,1,59,15975,1,174,4,3,105,108,114,15985,15991,15997,115,104,116,59,1,10621,111,111,114,59,1,8971,59,3,55349,56623,4,2,97,111,16007,16028,114,4,2,100,117,16014,16017,59,1,8641,4,2,59,108,16023,16025,1,8640,59,1,10604,4,2,59,118,16034,16036,1,961,59,1,1009,4,3,103,110,115,16047,16167,16171,104,116,4,6,97,104,108,114,115,116,16063,16081,16103,16130,16143,16155,114,114,111,119,4,2,59,116,16073,16075,1,8594,97,105,108,59,1,8611,97,114,112,111,111,110,4,2,100,117,16093,16099,111,119,110,59,1,8641,112,59,1,8640,101,102,116,4,2,97,104,16112,16120,114,114,111,119,115,59,1,8644,97,114,112,111,111,110,115,59,1,8652,105,103,104,116,97,114,114,111,119,115,59,1,8649,113,117,105,103,97,114,114,111,119,59,1,8605,104,114,101,101,116,105,109,101,115,59,1,8908,103,59,1,730,105,110,103,100,111,116,115,101,113,59,1,8787,4,3,97,104,109,16191,16196,16201,114,114,59,1,8644,97,114,59,1,8652,59,1,8207,111,117,115,116,4,2,59,97,16214,16216,1,9137,99,104,101,59,1,9137,109,105,100,59,1,10990,4,4,97,98,112,116,16238,16252,16257,16278,4,2,110,114,16244,16248,103,59,1,10221,114,59,1,8702,114,107,59,1,10215,4,3,97,102,108,16265,16269,16273,114,59,1,10630,59,3,55349,56675,117,115,59,1,10798,105,109,101,115,59,1,10805,4,2,97,112,16291,16304,114,4,2,59,103,16298,16300,1,41,116,59,1,10644,111,108,105,110,116,59,1,10770,97,114,114,59,1,8649,4,4,97,99,104,113,16328,16334,16339,16342,113,117,111,59,1,8250,114,59,3,55349,56519,59,1,8625,4,2,98,117,16348,16351,59,1,93,111,4,2,59,114,16358,16360,1,8217,59,1,8217,4,3,104,105,114,16371,16377,16383,114,101,101,59,1,8908,109,101,115,59,1,8906,105,4,4,59,101,102,108,16394,16396,16399,16402,1,9657,59,1,8885,59,1,9656,116,114,105,59,1,10702,108,117,104,97,114,59,1,10600,59,1,8478,4,19,97,98,99,100,101,102,104,105,108,109,111,112,113,114,115,116,117,119,122,16459,16466,16472,16572,16590,16672,16687,16746,16844,16850,16924,16963,16988,17115,17121,17154,17206,17614,17656,99,117,116,101,59,1,347,113,117,111,59,1,8218,4,10,59,69,97,99,101,105,110,112,115,121,16494,16496,16499,16513,16518,16531,16536,16556,16564,16569,1,8827,59,1,10932,4,2,112,114,16505,16508,59,1,10936,111,110,59,1,353,117,101,59,1,8829,4,2,59,100,16524,16526,1,10928,105,108,59,1,351,114,99,59,1,349,4,3,69,97,115,16544,16547,16551,59,1,10934,112,59,1,10938,105,109,59,1,8937,111,108,105,110,116,59,1,10771,105,109,59,1,8831,59,1,1089,111,116,4,3,59,98,101,16582,16584,16587,1,8901,59,1,8865,59,1,10854,4,7,65,97,99,109,115,116,120,16606,16611,16634,16642,16646,16652,16668,114,114,59,1,8664,114,4,2,104,114,16618,16622,107,59,1,10533,4,2,59,111,16628,16630,1,8600,119,59,1,8600,116,5,167,1,59,16640,1,167,105,59,1,59,119,97,114,59,1,10537,109,4,2,105,110,16659,16665,110,117,115,59,1,8726,59,1,8726,116,59,1,10038,114,4,2,59,111,16679,16682,3,55349,56624,119,110,59,1,8994,4,4,97,99,111,121,16697,16702,16716,16739,114,112,59,1,9839,4,2,104,121,16708,16713,99,121,59,1,1097,59,1,1096,114,116,4,2,109,112,16724,16729,105,100,59,1,8739,97,114,97,108,108,101,108,59,1,8741,5,173,1,59,16744,1,173,4,2,103,109,16752,16770,109,97,4,3,59,102,118,16762,16764,16767,1,963,59,1,962,59,1,962,4,8,59,100,101,103,108,110,112,114,16788,16790,16795,16806,16817,16828,16832,16838,1,8764,111,116,59,1,10858,4,2,59,113,16801,16803,1,8771,59,1,8771,4,2,59,69,16812,16814,1,10910,59,1,10912,4,2,59,69,16823,16825,1,10909,59,1,10911,101,59,1,8774,108,117,115,59,1,10788,97,114,114,59,1,10610,97,114,114,59,1,8592,4,4,97,101,105,116,16860,16883,16891,16904,4,2,108,115,16866,16878,108,115,101,116,109,105,110,117,115,59,1,8726,104,112,59,1,10803,112,97,114,115,108,59,1,10724,4,2,100,108,16897,16900,59,1,8739,101,59,1,8995,4,2,59,101,16910,16912,1,10922,4,2,59,115,16918,16920,1,10924,59,3,10924,65024,4,3,102,108,112,16932,16938,16958,116,99,121,59,1,1100,4,2,59,98,16944,16946,1,47,4,2,59,97,16952,16954,1,10692,114,59,1,9023,102,59,3,55349,56676,97,4,2,100,114,16970,16985,101,115,4,2,59,117,16978,16980,1,9824,105,116,59,1,9824,59,1,8741,4,3,99,115,117,16996,17028,17089,4,2,97,117,17002,17015,112,4,2,59,115,17009,17011,1,8851,59,3,8851,65024,112,4,2,59,115,17022,17024,1,8852,59,3,8852,65024,117,4,2,98,112,17035,17062,4,3,59,101,115,17043,17045,17048,1,8847,59,1,8849,101,116,4,2,59,101,17056,17058,1,8847,113,59,1,8849,4,3,59,101,115,17070,17072,17075,1,8848,59,1,8850,101,116,4,2,59,101,17083,17085,1,8848,113,59,1,8850,4,3,59,97,102,17097,17099,17112,1,9633,114,4,2,101,102,17106,17109,59,1,9633,59,1,9642,59,1,9642,97,114,114,59,1,8594,4,4,99,101,109,116,17131,17136,17142,17148,114,59,3,55349,56520,116,109,110,59,1,8726,105,108,101,59,1,8995,97,114,102,59,1,8902,4,2,97,114,17160,17172,114,4,2,59,102,17167,17169,1,9734,59,1,9733,4,2,97,110,17178,17202,105,103,104,116,4,2,101,112,17188,17197,112,115,105,108,111,110,59,1,1013,104,105,59,1,981,115,59,1,175,4,5,98,99,109,110,112,17218,17351,17420,17423,17427,4,9,59,69,100,101,109,110,112,114,115,17238,17240,17243,17248,17261,17267,17279,17285,17291,1,8834,59,1,10949,111,116,59,1,10941,4,2,59,100,17254,17256,1,8838,111,116,59,1,10947,117,108,116,59,1,10945,4,2,69,101,17273,17276,59,1,10955,59,1,8842,108,117,115,59,1,10943,97,114,114,59,1,10617,4,3,101,105,117,17299,17335,17339,116,4,3,59,101,110,17308,17310,17322,1,8834,113,4,2,59,113,17317,17319,1,8838,59,1,10949,101,113,4,2,59,113,17330,17332,1,8842,59,1,10955,109,59,1,10951,4,2,98,112,17345,17348,59,1,10965,59,1,10963,99,4,6,59,97,99,101,110,115,17366,17368,17376,17385,17389,17415,1,8827,112,112,114,111,120,59,1,10936,117,114,108,121,101,113,59,1,8829,113,59,1,10928,4,3,97,101,115,17397,17405,17410,112,112,114,111,120,59,1,10938,113,113,59,1,10934,105,109,59,1,8937,105,109,59,1,8831,59,1,8721,103,59,1,9834,4,13,49,50,51,59,69,100,101,104,108,109,110,112,115,17455,17462,17469,17476,17478,17481,17496,17509,17524,17530,17536,17548,17554,5,185,1,59,17460,1,185,5,178,1,59,17467,1,178,5,179,1,59,17474,1,179,1,8835,59,1,10950,4,2,111,115,17487,17491,116,59,1,10942,117,98,59,1,10968,4,2,59,100,17502,17504,1,8839,111,116,59,1,10948,115,4,2,111,117,17516,17520,108,59,1,10185,98,59,1,10967,97,114,114,59,1,10619,117,108,116,59,1,10946,4,2,69,101,17542,17545,59,1,10956,59,1,8843,108,117,115,59,1,10944,4,3,101,105,117,17562,17598,17602,116,4,3,59,101,110,17571,17573,17585,1,8835,113,4,2,59,113,17580,17582,1,8839,59,1,10950,101,113,4,2,59,113,17593,17595,1,8843,59,1,10956,109,59,1,10952,4,2,98,112,17608,17611,59,1,10964,59,1,10966,4,3,65,97,110,17622,17627,17650,114,114,59,1,8665,114,4,2,104,114,17634,17638,107,59,1,10534,4,2,59,111,17644,17646,1,8601,119,59,1,8601,119,97,114,59,1,10538,108,105,103,5,223,1,59,17664,1,223,4,13,97,98,99,100,101,102,104,105,111,112,114,115,119,17694,17709,17714,17737,17742,17749,17754,17860,17905,17957,17964,18090,18122,4,2,114,117,17700,17706,103,101,116,59,1,8982,59,1,964,114,107,59,1,9140,4,3,97,101,121,17722,17728,17734,114,111,110,59,1,357,100,105,108,59,1,355,59,1,1090,111,116,59,1,8411,108,114,101,99,59,1,8981,114,59,3,55349,56625,4,4,101,105,107,111,17764,17805,17836,17851,4,2,114,116,17770,17786,101,4,2,52,102,17777,17780,59,1,8756,111,114,101,59,1,8756,97,4,3,59,115,118,17795,17797,17802,1,952,121,109,59,1,977,59,1,977,4,2,99,110,17811,17831,107,4,2,97,115,17818,17826,112,112,114,111,120,59,1,8776,105,109,59,1,8764,115,112,59,1,8201,4,2,97,115,17842,17846,112,59,1,8776,105,109,59,1,8764,114,110,5,254,1,59,17858,1,254,4,3,108,109,110,17868,17873,17901,100,101,59,1,732,101,115,5,215,3,59,98,100,17884,17886,17898,1,215,4,2,59,97,17892,17894,1,8864,114,59,1,10801,59,1,10800,116,59,1,8749,4,3,101,112,115,17913,17917,17953,97,59,1,10536,4,4,59,98,99,102,17927,17929,17934,17939,1,8868,111,116,59,1,9014,105,114,59,1,10993,4,2,59,111,17945,17948,3,55349,56677,114,107,59,1,10970,97,59,1,10537,114,105,109,101,59,1,8244,4,3,97,105,112,17972,17977,18082,100,101,59,1,8482,4,7,97,100,101,109,112,115,116,17993,18051,18056,18059,18066,18072,18076,110,103,108,101,4,5,59,100,108,113,114,18009,18011,18017,18032,18035,1,9653,111,119,110,59,1,9663,101,102,116,4,2,59,101,18026,18028,1,9667,113,59,1,8884,59,1,8796,105,103,104,116,4,2,59,101,18045,18047,1,9657,113,59,1,8885,111,116,59,1,9708,59,1,8796,105,110,117,115,59,1,10810,108,117,115,59,1,10809,98,59,1,10701,105,109,101,59,1,10811,101,122,105,117,109,59,1,9186,4,3,99,104,116,18098,18111,18116,4,2,114,121,18104,18108,59,3,55349,56521,59,1,1094,99,121,59,1,1115,114,111,107,59,1,359,4,2,105,111,18128,18133,120,116,59,1,8812,104,101,97,100,4,2,108,114,18143,18154,101,102,116,97,114,114,111,119,59,1,8606,105,103,104,116,97,114,114,111,119,59,1,8608,4,18,65,72,97,98,99,100,102,103,104,108,109,111,112,114,115,116,117,119,18204,18209,18214,18234,18250,18268,18292,18308,18319,18343,18379,18397,18413,18504,18547,18553,18584,18603,114,114,59,1,8657,97,114,59,1,10595,4,2,99,114,18220,18230,117,116,101,5,250,1,59,18228,1,250,114,59,1,8593,114,4,2,99,101,18241,18245,121,59,1,1118,118,101,59,1,365,4,2,105,121,18256,18265,114,99,5,251,1,59,18263,1,251,59,1,1091,4,3,97,98,104,18276,18281,18287,114,114,59,1,8645,108,97,99,59,1,369,97,114,59,1,10606,4,2,105,114,18298,18304,115,104,116,59,1,10622,59,3,55349,56626,114,97,118,101,5,249,1,59,18317,1,249,4,2,97,98,18325,18338,114,4,2,108,114,18332,18335,59,1,8639,59,1,8638,108,107,59,1,9600,4,2,99,116,18349,18374,4,2,111,114,18355,18369,114,110,4,2,59,101,18363,18365,1,8988,114,59,1,8988,111,112,59,1,8975,114,105,59,1,9720,4,2,97,108,18385,18390,99,114,59,1,363,5,168,1,59,18395,1,168,4,2,103,112,18403,18408,111,110,59,1,371,102,59,3,55349,56678,4,6,97,100,104,108,115,117,18427,18434,18445,18470,18475,18494,114,114,111,119,59,1,8593,111,119,110,97,114,114,111,119,59,1,8597,97,114,112,111,111,110,4,2,108,114,18457,18463,101,102,116,59,1,8639,105,103,104,116,59,1,8638,117,115,59,1,8846,105,4,3,59,104,108,18484,18486,18489,1,965,59,1,978,111,110,59,1,965,112,97,114,114,111,119,115,59,1,8648,4,3,99,105,116,18512,18537,18542,4,2,111,114,18518,18532,114,110,4,2,59,101,18526,18528,1,8989,114,59,1,8989,111,112,59,1,8974,110,103,59,1,367,114,105,59,1,9721,99,114,59,3,55349,56522,4,3,100,105,114,18561,18566,18572,111,116,59,1,8944,108,100,101,59,1,361,105,4,2,59,102,18579,18581,1,9653,59,1,9652,4,2,97,109,18590,18595,114,114,59,1,8648,108,5,252,1,59,18601,1,252,97,110,103,108,101,59,1,10663,4,15,65,66,68,97,99,100,101,102,108,110,111,112,114,115,122,18643,18648,18661,18667,18847,18851,18857,18904,18909,18915,18931,18937,18943,18949,18996,114,114,59,1,8661,97,114,4,2,59,118,18656,18658,1,10984,59,1,10985,97,115,104,59,1,8872,4,2,110,114,18673,18679,103,114,116,59,1,10652,4,7,101,107,110,112,114,115,116,18695,18704,18711,18720,18742,18754,18810,112,115,105,108,111,110,59,1,1013,97,112,112,97,59,1,1008,111,116,104,105,110,103,59,1,8709,4,3,104,105,114,18728,18732,18735,105,59,1,981,59,1,982,111,112,116,111,59,1,8733,4,2,59,104,18748,18750,1,8597,111,59,1,1009,4,2,105,117,18760,18766,103,109,97,59,1,962,4,2,98,112,18772,18791,115,101,116,110,101,113,4,2,59,113,18784,18787,3,8842,65024,59,3,10955,65024,115,101,116,110,101,113,4,2,59,113,18803,18806,3,8843,65024,59,3,10956,65024,4,2,104,114,18816,18822,101,116,97,59,1,977,105,97,110,103,108,101,4,2,108,114,18834,18840,101,102,116,59,1,8882,105,103,104,116,59,1,8883,121,59,1,1074,97,115,104,59,1,8866,4,3,101,108,114,18865,18884,18890,4,3,59,98,101,18873,18875,18880,1,8744,97,114,59,1,8891,113,59,1,8794,108,105,112,59,1,8942,4,2,98,116,18896,18901,97,114,59,1,124,59,1,124,114,59,3,55349,56627,116,114,105,59,1,8882,115,117,4,2,98,112,18923,18927,59,3,8834,8402,59,3,8835,8402,112,102,59,3,55349,56679,114,111,112,59,1,8733,116,114,105,59,1,8883,4,2,99,117,18955,18960,114,59,3,55349,56523,4,2,98,112,18966,18981,110,4,2,69,101,18973,18977,59,3,10955,65024,59,3,8842,65024,110,4,2,69,101,18988,18992,59,3,10956,65024,59,3,8843,65024,105,103,122,97,103,59,1,10650,4,7,99,101,102,111,112,114,115,19020,19026,19061,19066,19072,19075,19089,105,114,99,59,1,373,4,2,100,105,19032,19055,4,2,98,103,19038,19043,97,114,59,1,10847,101,4,2,59,113,19050,19052,1,8743,59,1,8793,101,114,112,59,1,8472,114,59,3,55349,56628,112,102,59,3,55349,56680,59,1,8472,4,2,59,101,19081,19083,1,8768,97,116,104,59,1,8768,99,114,59,3,55349,56524,4,14,99,100,102,104,105,108,109,110,111,114,115,117,118,119,19125,19146,19152,19157,19173,19176,19192,19197,19202,19236,19252,19269,19286,19291,4,3,97,105,117,19133,19137,19142,112,59,1,8898,114,99,59,1,9711,112,59,1,8899,116,114,105,59,1,9661,114,59,3,55349,56629,4,2,65,97,19163,19168,114,114,59,1,10234,114,114,59,1,10231,59,1,958,4,2,65,97,19182,19187,114,114,59,1,10232,114,114,59,1,10229,97,112,59,1,10236,105,115,59,1,8955,4,3,100,112,116,19210,19215,19230,111,116,59,1,10752,4,2,102,108,19221,19225,59,3,55349,56681,117,115,59,1,10753,105,109,101,59,1,10754,4,2,65,97,19242,19247,114,114,59,1,10233,114,114,59,1,10230,4,2,99,113,19258,19263,114,59,3,55349,56525,99,117,112,59,1,10758,4,2,112,116,19275,19281,108,117,115,59,1,10756,114,105,59,1,9651,101,101,59,1,8897,101,100,103,101,59,1,8896,4,8,97,99,101,102,105,111,115,117,19316,19335,19349,19357,19362,19367,19373,19379,99,4,2,117,121,19323,19332,116,101,5,253,1,59,19330,1,253,59,1,1103,4,2,105,121,19341,19346,114,99,59,1,375,59,1,1099,110,5,165,1,59,19355,1,165,114,59,3,55349,56630,99,121,59,1,1111,112,102,59,3,55349,56682,99,114,59,3,55349,56526,4,2,99,109,19385,19389,121,59,1,1102,108,5,255,1,59,19395,1,255,4,10,97,99,100,101,102,104,105,111,115,119,19419,19426,19441,19446,19462,19467,19472,19480,19486,19492,99,117,116,101,59,1,378,4,2,97,121,19432,19438,114,111,110,59,1,382,59,1,1079,111,116,59,1,380,4,2,101,116,19452,19458,116,114,102,59,1,8488,97,59,1,950,114,59,3,55349,56631,99,121,59,1,1078,103,114,97,114,114,59,1,8669,112,102,59,3,55349,56683,99,114,59,3,55349,56527,4,2,106,110,19498,19501,59,1,8205,106,59,1,8204]);", "'use strict';\r\n\r\nconst Preprocessor = require('./preprocessor');\r\nconst unicode = require('../common/unicode');\r\nconst neTree = require('./named-entity-data');\r\nconst ERR = require('../common/error-codes');\r\n\r\n//Aliases\r\nconst $ = unicode.CODE_POINTS;\r\nconst $$ = unicode.CODE_POINT_SEQUENCES;\r\n\r\n//C1 Unicode control character reference replacements\r\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = {\r\n    0x80: 0x20ac,\r\n    0x82: 0x201a,\r\n    0x83: 0x0192,\r\n    0x84: 0x201e,\r\n    0x85: 0x2026,\r\n    0x86: 0x2020,\r\n    0x87: 0x2021,\r\n    0x88: 0x02c6,\r\n    0x89: 0x2030,\r\n    0x8a: 0x0160,\r\n    0x8b: 0x2039,\r\n    0x8c: 0x0152,\r\n    0x8e: 0x017d,\r\n    0x91: 0x2018,\r\n    0x92: 0x2019,\r\n    0x93: 0x201c,\r\n    0x94: 0x201d,\r\n    0x95: 0x2022,\r\n    0x96: 0x2013,\r\n    0x97: 0x2014,\r\n    0x98: 0x02dc,\r\n    0x99: 0x2122,\r\n    0x9a: 0x0161,\r\n    0x9b: 0x203a,\r\n    0x9c: 0x0153,\r\n    0x9e: 0x017e,\r\n    0x9f: 0x0178\r\n};\r\n\r\n// Named entity tree flags\r\nconst HAS_DATA_FLAG = 1 << 0;\r\nconst DATA_DUPLET_FLAG = 1 << 1;\r\nconst HAS_BRANCHES_FLAG = 1 << 2;\r\nconst MAX_BRANCH_MARKER_VALUE = HAS_DATA_FLAG | DATA_DUPLET_FLAG | HAS_BRANCHES_FLAG;\r\n\r\n//States\r\nconst DATA_STATE = 'DATA_STATE';\r\nconst RCDATA_STATE = 'RCDATA_STATE';\r\nconst RAWTEXT_STATE = 'RAWTEXT_STATE';\r\nconst SCRIPT_DATA_STATE = 'SCRIPT_DATA_STATE';\r\nconst PLAINTEXT_STATE = 'PLAINTEXT_STATE';\r\nconst TAG_OPEN_STATE = 'TAG_OPEN_STATE';\r\nconst END_TAG_OPEN_STATE = 'END_TAG_OPEN_STATE';\r\nconst TAG_NAME_STATE = 'TAG_NAME_STATE';\r\nconst RCDATA_LESS_THAN_SIGN_STATE = 'RCDATA_LESS_THAN_SIGN_STATE';\r\nconst RCDATA_END_TAG_OPEN_STATE = 'RCDATA_END_TAG_OPEN_STATE';\r\nconst RCDATA_END_TAG_NAME_STATE = 'RCDATA_END_TAG_NAME_STATE';\r\nconst RAWTEXT_LESS_THAN_SIGN_STATE = 'RAWTEXT_LESS_THAN_SIGN_STATE';\r\nconst RAWTEXT_END_TAG_OPEN_STATE = 'RAWTEXT_END_TAG_OPEN_STATE';\r\nconst RAWTEXT_END_TAG_NAME_STATE = 'RAWTEXT_END_TAG_NAME_STATE';\r\nconst SCRIPT_DATA_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_LESS_THAN_SIGN_STATE';\r\nconst SCRIPT_DATA_END_TAG_OPEN_STATE = 'SCRIPT_DATA_END_TAG_OPEN_STATE';\r\nconst SCRIPT_DATA_END_TAG_NAME_STATE = 'SCRIPT_DATA_END_TAG_NAME_STATE';\r\nconst SCRIPT_DATA_ESCAPE_START_STATE = 'SCRIPT_DATA_ESCAPE_START_STATE';\r\nconst SCRIPT_DATA_ESCAPE_START_DASH_STATE = 'SCRIPT_DATA_ESCAPE_START_DASH_STATE';\r\nconst SCRIPT_DATA_ESCAPED_STATE = 'SCRIPT_DATA_ESCAPED_STATE';\r\nconst SCRIPT_DATA_ESCAPED_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_STATE';\r\nconst SCRIPT_DATA_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_DASH_STATE';\r\nconst SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE';\r\nconst SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE';\r\nconst SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE';\r\nconst SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE';\r\nconst SCRIPT_DATA_DOUBLE_ESCAPED_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_STATE';\r\nconst SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE';\r\nconst SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE';\r\nconst SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE';\r\nconst SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE';\r\nconst BEFORE_ATTRIBUTE_NAME_STATE = 'BEFORE_ATTRIBUTE_NAME_STATE';\r\nconst ATTRIBUTE_NAME_STATE = 'ATTRIBUTE_NAME_STATE';\r\nconst AFTER_ATTRIBUTE_NAME_STATE = 'AFTER_ATTRIBUTE_NAME_STATE';\r\nconst BEFORE_ATTRIBUTE_VALUE_STATE = 'BEFORE_ATTRIBUTE_VALUE_STATE';\r\nconst ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE';\r\nconst ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE';\r\nconst ATTRIBUTE_VALUE_UNQUOTED_STATE = 'ATTRIBUTE_VALUE_UNQUOTED_STATE';\r\nconst AFTER_ATTRIBUTE_VALUE_QUOTED_STATE = 'AFTER_ATTRIBUTE_VALUE_QUOTED_STATE';\r\nconst SELF_CLOSING_START_TAG_STATE = 'SELF_CLOSING_START_TAG_STATE';\r\nconst BOGUS_COMMENT_STATE = 'BOGUS_COMMENT_STATE';\r\nconst MARKUP_DECLARATION_OPEN_STATE = 'MARKUP_DECLARATION_OPEN_STATE';\r\nconst COMMENT_START_STATE = 'COMMENT_START_STATE';\r\nconst COMMENT_START_DASH_STATE = 'COMMENT_START_DASH_STATE';\r\nconst COMMENT_STATE = 'COMMENT_STATE';\r\nconst COMMENT_LESS_THAN_SIGN_STATE = 'COMMENT_LESS_THAN_SIGN_STATE';\r\nconst COMMENT_LESS_THAN_SIGN_BANG_STATE = 'COMMENT_LESS_THAN_SIGN_BANG_STATE';\r\nconst COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE = 'COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE';\r\nconst COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE = 'COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE';\r\nconst COMMENT_END_DASH_STATE = 'COMMENT_END_DASH_STATE';\r\nconst COMMENT_END_STATE = 'COMMENT_END_STATE';\r\nconst COMMENT_END_BANG_STATE = 'COMMENT_END_BANG_STATE';\r\nconst DOCTYPE_STATE = 'DOCTYPE_STATE';\r\nconst BEFORE_DOCTYPE_NAME_STATE = 'BEFORE_DOCTYPE_NAME_STATE';\r\nconst DOCTYPE_NAME_STATE = 'DOCTYPE_NAME_STATE';\r\nconst AFTER_DOCTYPE_NAME_STATE = 'AFTER_DOCTYPE_NAME_STATE';\r\nconst AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE = 'AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE';\r\nconst BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE';\r\nconst DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE';\r\nconst DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE';\r\nconst AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE = 'AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE';\r\nconst BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE = 'BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE';\r\nconst AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE = 'AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE';\r\nconst BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE';\r\nconst DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE';\r\nconst DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE';\r\nconst AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE';\r\nconst BOGUS_DOCTYPE_STATE = 'BOGUS_DOCTYPE_STATE';\r\nconst CDATA_SECTION_STATE = 'CDATA_SECTION_STATE';\r\nconst CDATA_SECTION_BRACKET_STATE = 'CDATA_SECTION_BRACKET_STATE';\r\nconst CDATA_SECTION_END_STATE = 'CDATA_SECTION_END_STATE';\r\nconst CHARACTER_REFERENCE_STATE = 'CHARACTER_REFERENCE_STATE';\r\nconst NAMED_CHARACTER_REFERENCE_STATE = 'NAMED_CHARACTER_REFERENCE_STATE';\r\nconst AMBIGUOUS_AMPERSAND_STATE = 'AMBIGUOS_AMPERSAND_STATE';\r\nconst NUMERIC_CHARACTER_REFERENCE_STATE = 'NUMERIC_CHARACTER_REFERENCE_STATE';\r\nconst HEXADEMICAL_CHARACTER_REFERENCE_START_STATE = 'HEXADEMICAL_CHARACTER_REFERENCE_START_STATE';\r\nconst DECIMAL_CHARACTER_REFERENCE_START_STATE = 'DECIMAL_CHARACTER_REFERENCE_START_STATE';\r\nconst HEXADEMICAL_CHARACTER_REFERENCE_STATE = 'HEXADEMICAL_CHARACTER_REFERENCE_STATE';\r\nconst DECIMAL_CHARACTER_REFERENCE_STATE = 'DECIMAL_CHARACTER_REFERENCE_STATE';\r\nconst NUMERIC_CHARACTER_REFERENCE_END_STATE = 'NUMERIC_CHARACTER_REFERENCE_END_STATE';\r\n\r\n//Utils\r\n\r\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\r\n//this functions if they will be situated in another module due to context switch.\r\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\r\nfunction isWhitespace(cp) {\r\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\r\n}\r\n\r\nfunction isAsciiDigit(cp) {\r\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\r\n}\r\n\r\nfunction isAsciiUpper(cp) {\r\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\r\n}\r\n\r\nfunction isAsciiLower(cp) {\r\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\r\n}\r\n\r\nfunction isAsciiLetter(cp) {\r\n    return isAsciiLower(cp) || isAsciiUpper(cp);\r\n}\r\n\r\nfunction isAsciiAlphaNumeric(cp) {\r\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\r\n}\r\n\r\nfunction isAsciiUpperHexDigit(cp) {\r\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;\r\n}\r\n\r\nfunction isAsciiLowerHexDigit(cp) {\r\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;\r\n}\r\n\r\nfunction isAsciiHexDigit(cp) {\r\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\r\n}\r\n\r\nfunction toAsciiLowerCodePoint(cp) {\r\n    return cp + 0x0020;\r\n}\r\n\r\n//NOTE: String.fromCharCode() function can handle only characters from BMP subset.\r\n//So, we need to workaround this manually.\r\n//(see: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/fromCharCode#Getting_it_to_work_with_higher_values)\r\nfunction toChar(cp) {\r\n    if (cp <= 0xffff) {\r\n        return String.fromCharCode(cp);\r\n    }\r\n\r\n    cp -= 0x10000;\r\n    return String.fromCharCode(((cp >>> 10) & 0x3ff) | 0xd800) + String.fromCharCode(0xdc00 | (cp & 0x3ff));\r\n}\r\n\r\nfunction toAsciiLowerChar(cp) {\r\n    return String.fromCharCode(toAsciiLowerCodePoint(cp));\r\n}\r\n\r\nfunction findNamedEntityTreeBranch(nodeIx, cp) {\r\n    const branchCount = neTree[++nodeIx];\r\n    let lo = ++nodeIx;\r\n    let hi = lo + branchCount - 1;\r\n\r\n    while (lo <= hi) {\r\n        const mid = (lo + hi) >>> 1;\r\n        const midCp = neTree[mid];\r\n\r\n        if (midCp < cp) {\r\n            lo = mid + 1;\r\n        } else if (midCp > cp) {\r\n            hi = mid - 1;\r\n        } else {\r\n            return neTree[mid + branchCount];\r\n        }\r\n    }\r\n\r\n    return -1;\r\n}\r\n\r\n//Tokenizer\r\nclass Tokenizer {\r\n    constructor() {\r\n        this.preprocessor = new Preprocessor();\r\n\r\n        this.tokenQueue = [];\r\n\r\n        this.allowCDATA = false;\r\n\r\n        this.state = DATA_STATE;\r\n        this.returnState = '';\r\n\r\n        this.charRefCode = -1;\r\n        this.tempBuff = [];\r\n        this.lastStartTagName = '';\r\n\r\n        this.consumedAfterSnapshot = -1;\r\n        this.active = false;\r\n\r\n        this.currentCharacterToken = null;\r\n        this.currentToken = null;\r\n        this.currentAttr = null;\r\n    }\r\n\r\n    //Errors\r\n    _err() {\r\n        // NOTE: err reporting is noop by default. Enabled by mixin.\r\n    }\r\n\r\n    _errOnNextCodePoint(err) {\r\n        this._consume();\r\n        this._err(err);\r\n        this._unconsume();\r\n    }\r\n\r\n    //API\r\n    getNextToken() {\r\n        while (!this.tokenQueue.length && this.active) {\r\n            this.consumedAfterSnapshot = 0;\r\n\r\n            const cp = this._consume();\r\n\r\n            if (!this._ensureHibernation()) {\r\n                this[this.state](cp);\r\n            }\r\n        }\r\n\r\n        return this.tokenQueue.shift();\r\n    }\r\n\r\n    write(chunk, isLastChunk) {\r\n        this.active = true;\r\n        this.preprocessor.write(chunk, isLastChunk);\r\n    }\r\n\r\n    insertHtmlAtCurrentPos(chunk) {\r\n        this.active = true;\r\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\r\n    }\r\n\r\n    //Hibernation\r\n    _ensureHibernation() {\r\n        if (this.preprocessor.endOfChunkHit) {\r\n            for (; this.consumedAfterSnapshot > 0; this.consumedAfterSnapshot--) {\r\n                this.preprocessor.retreat();\r\n            }\r\n\r\n            this.active = false;\r\n            this.tokenQueue.push({ type: Tokenizer.HIBERNATION_TOKEN });\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    //Consumption\r\n    _consume() {\r\n        this.consumedAfterSnapshot++;\r\n        return this.preprocessor.advance();\r\n    }\r\n\r\n    _unconsume() {\r\n        this.consumedAfterSnapshot--;\r\n        this.preprocessor.retreat();\r\n    }\r\n\r\n    _reconsumeInState(state) {\r\n        this.state = state;\r\n        this._unconsume();\r\n    }\r\n\r\n    _consumeSequenceIfMatch(pattern, startCp, caseSensitive) {\r\n        let consumedCount = 0;\r\n        let isMatch = true;\r\n        const patternLength = pattern.length;\r\n        let patternPos = 0;\r\n        let cp = startCp;\r\n        let patternCp = void 0;\r\n\r\n        for (; patternPos < patternLength; patternPos++) {\r\n            if (patternPos > 0) {\r\n                cp = this._consume();\r\n                consumedCount++;\r\n            }\r\n\r\n            if (cp === $.EOF) {\r\n                isMatch = false;\r\n                break;\r\n            }\r\n\r\n            patternCp = pattern[patternPos];\r\n\r\n            if (cp !== patternCp && (caseSensitive || cp !== toAsciiLowerCodePoint(patternCp))) {\r\n                isMatch = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!isMatch) {\r\n            while (consumedCount--) {\r\n                this._unconsume();\r\n            }\r\n        }\r\n\r\n        return isMatch;\r\n    }\r\n\r\n    //Temp buffer\r\n    _isTempBufferEqualToScriptString() {\r\n        if (this.tempBuff.length !== $$.SCRIPT_STRING.length) {\r\n            return false;\r\n        }\r\n\r\n        for (let i = 0; i < this.tempBuff.length; i++) {\r\n            if (this.tempBuff[i] !== $$.SCRIPT_STRING[i]) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    //Token creation\r\n    _createStartTagToken() {\r\n        this.currentToken = {\r\n            type: Tokenizer.START_TAG_TOKEN,\r\n            tagName: '',\r\n            selfClosing: false,\r\n            ackSelfClosing: false,\r\n            attrs: []\r\n        };\r\n    }\r\n\r\n    _createEndTagToken() {\r\n        this.currentToken = {\r\n            type: Tokenizer.END_TAG_TOKEN,\r\n            tagName: '',\r\n            selfClosing: false,\r\n            attrs: []\r\n        };\r\n    }\r\n\r\n    _createCommentToken() {\r\n        this.currentToken = {\r\n            type: Tokenizer.COMMENT_TOKEN,\r\n            data: ''\r\n        };\r\n    }\r\n\r\n    _createDoctypeToken(initialName) {\r\n        this.currentToken = {\r\n            type: Tokenizer.DOCTYPE_TOKEN,\r\n            name: initialName,\r\n            forceQuirks: false,\r\n            publicId: null,\r\n            systemId: null\r\n        };\r\n    }\r\n\r\n    _createCharacterToken(type, ch) {\r\n        this.currentCharacterToken = {\r\n            type: type,\r\n            chars: ch\r\n        };\r\n    }\r\n\r\n    _createEOFToken() {\r\n        this.currentToken = { type: Tokenizer.EOF_TOKEN };\r\n    }\r\n\r\n    //Tag attributes\r\n    _createAttr(attrNameFirstCh) {\r\n        this.currentAttr = {\r\n            name: attrNameFirstCh,\r\n            value: ''\r\n        };\r\n    }\r\n\r\n    _leaveAttrName(toState) {\r\n        if (Tokenizer.getTokenAttr(this.currentToken, this.currentAttr.name) === null) {\r\n            this.currentToken.attrs.push(this.currentAttr);\r\n        } else {\r\n            this._err(ERR.duplicateAttribute);\r\n        }\r\n\r\n        this.state = toState;\r\n    }\r\n\r\n    _leaveAttrValue(toState) {\r\n        this.state = toState;\r\n    }\r\n\r\n    //Token emission\r\n    _emitCurrentToken() {\r\n        this._emitCurrentCharacterToken();\r\n\r\n        const ct = this.currentToken;\r\n\r\n        this.currentToken = null;\r\n\r\n        //NOTE: store emited start tag's tagName to determine is the following end tag token is appropriate.\r\n        if (ct.type === Tokenizer.START_TAG_TOKEN) {\r\n            this.lastStartTagName = ct.tagName;\r\n        } else if (ct.type === Tokenizer.END_TAG_TOKEN) {\r\n            if (ct.attrs.length > 0) {\r\n                this._err(ERR.endTagWithAttributes);\r\n            }\r\n\r\n            if (ct.selfClosing) {\r\n                this._err(ERR.endTagWithTrailingSolidus);\r\n            }\r\n        }\r\n\r\n        this.tokenQueue.push(ct);\r\n    }\r\n\r\n    _emitCurrentCharacterToken() {\r\n        if (this.currentCharacterToken) {\r\n            this.tokenQueue.push(this.currentCharacterToken);\r\n            this.currentCharacterToken = null;\r\n        }\r\n    }\r\n\r\n    _emitEOFToken() {\r\n        this._createEOFToken();\r\n        this._emitCurrentToken();\r\n    }\r\n\r\n    //Characters emission\r\n\r\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\r\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\r\n    //If we have a sequence of characters that belong to the same group, parser can process it\r\n    //as a single solid character token.\r\n    //So, there are 3 types of character tokens in parse5:\r\n    //1)NULL_CHARACTER_TOKEN - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\r\n    //2)WHITESPACE_CHARACTER_TOKEN - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\r\n    //3)CHARACTER_TOKEN - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\r\n    _appendCharToCurrentCharacterToken(type, ch) {\r\n        if (this.currentCharacterToken && this.currentCharacterToken.type !== type) {\r\n            this._emitCurrentCharacterToken();\r\n        }\r\n\r\n        if (this.currentCharacterToken) {\r\n            this.currentCharacterToken.chars += ch;\r\n        } else {\r\n            this._createCharacterToken(type, ch);\r\n        }\r\n    }\r\n\r\n    _emitCodePoint(cp) {\r\n        let type = Tokenizer.CHARACTER_TOKEN;\r\n\r\n        if (isWhitespace(cp)) {\r\n            type = Tokenizer.WHITESPACE_CHARACTER_TOKEN;\r\n        } else if (cp === $.NULL) {\r\n            type = Tokenizer.NULL_CHARACTER_TOKEN;\r\n        }\r\n\r\n        this._appendCharToCurrentCharacterToken(type, toChar(cp));\r\n    }\r\n\r\n    _emitSeveralCodePoints(codePoints) {\r\n        for (let i = 0; i < codePoints.length; i++) {\r\n            this._emitCodePoint(codePoints[i]);\r\n        }\r\n    }\r\n\r\n    //NOTE: used then we emit character explicitly. This is always a non-whitespace and a non-null character.\r\n    //So we can avoid additional checks here.\r\n    _emitChars(ch) {\r\n        this._appendCharToCurrentCharacterToken(Tokenizer.CHARACTER_TOKEN, ch);\r\n    }\r\n\r\n    // Character reference helpers\r\n    _matchNamedCharacterReference(startCp) {\r\n        let result = null;\r\n        let excess = 1;\r\n        let i = findNamedEntityTreeBranch(0, startCp);\r\n\r\n        this.tempBuff.push(startCp);\r\n\r\n        while (i > -1) {\r\n            const current = neTree[i];\r\n            const inNode = current < MAX_BRANCH_MARKER_VALUE;\r\n            const nodeWithData = inNode && current & HAS_DATA_FLAG;\r\n\r\n            if (nodeWithData) {\r\n                //NOTE: we use greedy search, so we continue lookup at this point\r\n                result = current & DATA_DUPLET_FLAG ? [neTree[++i], neTree[++i]] : [neTree[++i]];\r\n                excess = 0;\r\n            }\r\n\r\n            const cp = this._consume();\r\n\r\n            this.tempBuff.push(cp);\r\n            excess++;\r\n\r\n            if (cp === $.EOF) {\r\n                break;\r\n            }\r\n\r\n            if (inNode) {\r\n                i = current & HAS_BRANCHES_FLAG ? findNamedEntityTreeBranch(i, cp) : -1;\r\n            } else {\r\n                i = cp === current ? ++i : -1;\r\n            }\r\n        }\r\n\r\n        while (excess--) {\r\n            this.tempBuff.pop();\r\n            this._unconsume();\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    _isCharacterReferenceInAttribute() {\r\n        return (\r\n            this.returnState === ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE ||\r\n            this.returnState === ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE ||\r\n            this.returnState === ATTRIBUTE_VALUE_UNQUOTED_STATE\r\n        );\r\n    }\r\n\r\n    _isCharacterReferenceAttributeQuirk(withSemicolon) {\r\n        if (!withSemicolon && this._isCharacterReferenceInAttribute()) {\r\n            const nextCp = this._consume();\r\n\r\n            this._unconsume();\r\n\r\n            return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    _flushCodePointsConsumedAsCharacterReference() {\r\n        if (this._isCharacterReferenceInAttribute()) {\r\n            for (let i = 0; i < this.tempBuff.length; i++) {\r\n                this.currentAttr.value += toChar(this.tempBuff[i]);\r\n            }\r\n        } else {\r\n            this._emitSeveralCodePoints(this.tempBuff);\r\n        }\r\n\r\n        this.tempBuff = [];\r\n    }\r\n\r\n    // State machine\r\n\r\n    // Data state\r\n    //------------------------------------------------------------------\r\n    [DATA_STATE](cp) {\r\n        this.preprocessor.dropParsedChunk();\r\n\r\n        if (cp === $.LESS_THAN_SIGN) {\r\n            this.state = TAG_OPEN_STATE;\r\n        } else if (cp === $.AMPERSAND) {\r\n            this.returnState = DATA_STATE;\r\n            this.state = CHARACTER_REFERENCE_STATE;\r\n        } else if (cp === $.NULL) {\r\n            this._err(ERR.unexpectedNullCharacter);\r\n            this._emitCodePoint(cp);\r\n        } else if (cp === $.EOF) {\r\n            this._emitEOFToken();\r\n        } else {\r\n            this._emitCodePoint(cp);\r\n        }\r\n    }\r\n\r\n    //  RCDATA state\r\n    //------------------------------------------------------------------\r\n    [RCDATA_STATE](cp) {\r\n        this.preprocessor.dropParsedChunk();\r\n\r\n        if (cp === $.AMPERSAND) {\r\n            this.returnState = RCDATA_STATE;\r\n            this.state = CHARACTER_REFERENCE_STATE;\r\n        } else if (cp === $.LESS_THAN_SIGN) {\r\n            this.state = RCDATA_LESS_THAN_SIGN_STATE;\r\n        } else if (cp === $.NULL) {\r\n            this._err(ERR.unexpectedNullCharacter);\r\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\r\n        } else if (cp === $.EOF) {\r\n            this._emitEOFToken();\r\n        } else {\r\n            this._emitCodePoint(cp);\r\n        }\r\n    }\r\n\r\n    // RAWTEXT state\r\n    //------------------------------------------------------------------\r\n    [RAWTEXT_STATE](cp) {\r\n        this.preprocessor.dropParsedChunk();\r\n\r\n        if (cp === $.LESS_THAN_SIGN) {\r\n            this.state = RAWTEXT_LESS_THAN_SIGN_STATE;\r\n        } else if (cp === $.NULL) {\r\n            this._err(ERR.unexpectedNullCharacter);\r\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\r\n        } else if (cp === $.EOF) {\r\n            this._emitEOFToken();\r\n        } else {\r\n            this._emitCodePoint(cp);\r\n        }\r\n    }\r\n\r\n    // Script data state\r\n    //------------------------------------------------------------------\r\n    [SCRIPT_DATA_STATE](cp) {\r\n        this.preprocessor.dropParsedChunk();\r\n\r\n        if (cp === $.LESS_THAN_SIGN) {\r\n            this.state = SCRIPT_DATA_LESS_THAN_SIGN_STATE;\r\n        } else if (cp === $.NULL) {\r\n            this._err(ERR.unexpectedNullCharacter);\r\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\r\n        } else if (cp === $.EOF) {\r\n            this._emitEOFToken();\r\n        } else {\r\n            this._emitCodePoint(cp);\r\n        }\r\n    }\r\n\r\n    // PLAINTEXT state\r\n    //------------------------------------------------------------------\r\n    [PLAINTEXT_STATE](cp) {\r\n        this.preprocessor.dropParsedChunk();\r\n\r\n        if (cp === $.NULL) {\r\n            this._err(ERR.unexpectedNullCharacter);\r\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\r\n        } else if (cp === $.EOF) {\r\n            this._emitEOFToken();\r\n        } else {\r\n            this._emitCodePoint(cp);\r\n        }\r\n    }\r\n\r\n    // Tag open state\r\n    //------------------------------------------------------------------\r\n    [TAG_OPEN_STATE](cp) {\r\n        if (cp === $.EXCLAMATION_MARK) {\r\n            this.state = MARKUP_DECLARATION_OPEN_STATE;\r\n        } else if (cp === $.SOLIDUS) {\r\n            this.state = END_TAG_OPEN_STATE;\r\n        } else if (isAsciiLetter(cp)) {\r\n            this._createStartTagToken();\r\n            this._reconsumeInState(TAG_NAME_STATE);\r\n        } else if (cp === $.QUESTION_MARK) {\r\n            this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\r\n            this._createCommentToken();\r\n            this._reconsumeInState(BOGUS_COMMENT_STATE);\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofBeforeTagName);\r\n            this._emitChars('<');\r\n            this._emitEOFToken();\r\n        } else {\r\n            this._err(ERR.invalidFirstCharacterOfTagName);\r\n            this._emitChars('<');\r\n            this._reconsumeInState(DATA_STATE);\r\n        }\r\n    }\r\n\r\n    // End tag open state\r\n    //------------------------------------------------------------------\r\n    [END_TAG_OPEN_STATE](cp) {\r\n        if (isAsciiLetter(cp)) {\r\n            this._createEndTagToken();\r\n            this._reconsumeInState(TAG_NAME_STATE);\r\n        } else if (cp === $.GREATER_THAN_SIGN) {\r\n            this._err(ERR.missingEndTagName);\r\n            this.state = DATA_STATE;\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofBeforeTagName);\r\n            this._emitChars('</');\r\n            this._emitEOFToken();\r\n        } else {\r\n            this._err(ERR.invalidFirstCharacterOfTagName);\r\n            this._createCommentToken();\r\n            this._reconsumeInState(BOGUS_COMMENT_STATE);\r\n        }\r\n    }\r\n\r\n    // Tag name state\r\n    //------------------------------------------------------------------\r\n    [TAG_NAME_STATE](cp) {\r\n        if (isWhitespace(cp)) {\r\n            this.state = BEFORE_ATTRIBUTE_NAME_STATE;\r\n        } else if (cp === $.SOLIDUS) {\r\n            this.state = SELF_CLOSING_START_TAG_STATE;\r\n        } else if (cp === $.GREATER_THAN_SIGN) {\r\n            this.state = DATA_STATE;\r\n            this._emitCurrentToken();\r\n        } else if (isAsciiUpper(cp)) {\r\n            this.currentToken.tagName += toAsciiLowerChar(cp);\r\n        } else if (cp === $.NULL) {\r\n            this._err(ERR.unexpectedNullCharacter);\r\n            this.currentToken.tagName += unicode.REPLACEMENT_CHARACTER;\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofInTag);\r\n            this._emitEOFToken();\r\n        } else {\r\n            this.currentToken.tagName += toChar(cp);\r\n        }\r\n    }\r\n\r\n    // RCDATA less-than sign state\r\n    //------------------------------------------------------------------\r\n    [RCDATA_LESS_THAN_SIGN_STATE](cp) {\r\n        if (cp === $.SOLIDUS) {\r\n            this.tempBuff = [];\r\n            this.state = RCDATA_END_TAG_OPEN_STATE;\r\n        } else {\r\n            this._emitChars('<');\r\n            this._reconsumeInState(RCDATA_STATE);\r\n        }\r\n    }\r\n\r\n    // RCDATA end tag open state\r\n    //------------------------------------------------------------------\r\n    [RCDATA_END_TAG_OPEN_STATE](cp) {\r\n        if (isAsciiLetter(cp)) {\r\n            this._createEndTagToken();\r\n            this._reconsumeInState(RCDATA_END_TAG_NAME_STATE);\r\n        } else {\r\n            this._emitChars('</');\r\n            this._reconsumeInState(RCDATA_STATE);\r\n        }\r\n    }\r\n\r\n    // RCDATA end tag name state\r\n    //------------------------------------------------------------------\r\n    [RCDATA_END_TAG_NAME_STATE](cp) {\r\n        if (isAsciiUpper(cp)) {\r\n            this.currentToken.tagName += toAsciiLowerChar(cp);\r\n            this.tempBuff.push(cp);\r\n        } else if (isAsciiLower(cp)) {\r\n            this.currentToken.tagName += toChar(cp);\r\n            this.tempBuff.push(cp);\r\n        } else {\r\n            if (this.lastStartTagName === this.currentToken.tagName) {\r\n                if (isWhitespace(cp)) {\r\n                    this.state = BEFORE_ATTRIBUTE_NAME_STATE;\r\n                    return;\r\n                }\r\n\r\n                if (cp === $.SOLIDUS) {\r\n                    this.state = SELF_CLOSING_START_TAG_STATE;\r\n                    return;\r\n                }\r\n\r\n                if (cp === $.GREATER_THAN_SIGN) {\r\n                    this.state = DATA_STATE;\r\n                    this._emitCurrentToken();\r\n                    return;\r\n                }\r\n            }\r\n\r\n            this._emitChars('</');\r\n            this._emitSeveralCodePoints(this.tempBuff);\r\n            this._reconsumeInState(RCDATA_STATE);\r\n        }\r\n    }\r\n\r\n    // RAWTEXT less-than sign state\r\n    //------------------------------------------------------------------\r\n    [RAWTEXT_LESS_THAN_SIGN_STATE](cp) {\r\n        if (cp === $.SOLIDUS) {\r\n            this.tempBuff = [];\r\n            this.state = RAWTEXT_END_TAG_OPEN_STATE;\r\n        } else {\r\n            this._emitChars('<');\r\n            this._reconsumeInState(RAWTEXT_STATE);\r\n        }\r\n    }\r\n\r\n    // RAWTEXT end tag open state\r\n    //------------------------------------------------------------------\r\n    [RAWTEXT_END_TAG_OPEN_STATE](cp) {\r\n        if (isAsciiLetter(cp)) {\r\n            this._createEndTagToken();\r\n            this._reconsumeInState(RAWTEXT_END_TAG_NAME_STATE);\r\n        } else {\r\n            this._emitChars('</');\r\n            this._reconsumeInState(RAWTEXT_STATE);\r\n        }\r\n    }\r\n\r\n    // RAWTEXT end tag name state\r\n    //------------------------------------------------------------------\r\n    [RAWTEXT_END_TAG_NAME_STATE](cp) {\r\n        if (isAsciiUpper(cp)) {\r\n            this.currentToken.tagName += toAsciiLowerChar(cp);\r\n            this.tempBuff.push(cp);\r\n        } else if (isAsciiLower(cp)) {\r\n            this.currentToken.tagName += toChar(cp);\r\n            this.tempBuff.push(cp);\r\n        } else {\r\n            if (this.lastStartTagName === this.currentToken.tagName) {\r\n                if (isWhitespace(cp)) {\r\n                    this.state = BEFORE_ATTRIBUTE_NAME_STATE;\r\n                    return;\r\n                }\r\n\r\n                if (cp === $.SOLIDUS) {\r\n                    this.state = SELF_CLOSING_START_TAG_STATE;\r\n                    return;\r\n                }\r\n\r\n                if (cp === $.GREATER_THAN_SIGN) {\r\n                    this._emitCurrentToken();\r\n                    this.state = DATA_STATE;\r\n                    return;\r\n                }\r\n            }\r\n\r\n            this._emitChars('</');\r\n            this._emitSeveralCodePoints(this.tempBuff);\r\n            this._reconsumeInState(RAWTEXT_STATE);\r\n        }\r\n    }\r\n\r\n    // Script data less-than sign state\r\n    //------------------------------------------------------------------\r\n    [SCRIPT_DATA_LESS_THAN_SIGN_STATE](cp) {\r\n        if (cp === $.SOLIDUS) {\r\n            this.tempBuff = [];\r\n            this.state = SCRIPT_DATA_END_TAG_OPEN_STATE;\r\n        } else if (cp === $.EXCLAMATION_MARK) {\r\n            this.state = SCRIPT_DATA_ESCAPE_START_STATE;\r\n            this._emitChars('<!');\r\n        } else {\r\n            this._emitChars('<');\r\n            this._reconsumeInState(SCRIPT_DATA_STATE);\r\n        }\r\n    }\r\n\r\n    // Script data end tag open state\r\n    //------------------------------------------------------------------\r\n    [SCRIPT_DATA_END_TAG_OPEN_STATE](cp) {\r\n        if (isAsciiLetter(cp)) {\r\n            this._createEndTagToken();\r\n            this._reconsumeInState(SCRIPT_DATA_END_TAG_NAME_STATE);\r\n        } else {\r\n            this._emitChars('</');\r\n            this._reconsumeInState(SCRIPT_DATA_STATE);\r\n        }\r\n    }\r\n\r\n    // Script data end tag name state\r\n    //------------------------------------------------------------------\r\n    [SCRIPT_DATA_END_TAG_NAME_STATE](cp) {\r\n        if (isAsciiUpper(cp)) {\r\n            this.currentToken.tagName += toAsciiLowerChar(cp);\r\n            this.tempBuff.push(cp);\r\n        } else if (isAsciiLower(cp)) {\r\n            this.currentToken.tagName += toChar(cp);\r\n            this.tempBuff.push(cp);\r\n        } else {\r\n            if (this.lastStartTagName === this.currentToken.tagName) {\r\n                if (isWhitespace(cp)) {\r\n                    this.state = BEFORE_ATTRIBUTE_NAME_STATE;\r\n                    return;\r\n                } else if (cp === $.SOLIDUS) {\r\n                    this.state = SELF_CLOSING_START_TAG_STATE;\r\n                    return;\r\n                } else if (cp === $.GREATER_THAN_SIGN) {\r\n                    this._emitCurrentToken();\r\n                    this.state = DATA_STATE;\r\n                    return;\r\n                }\r\n            }\r\n\r\n            this._emitChars('</');\r\n            this._emitSeveralCodePoints(this.tempBuff);\r\n            this._reconsumeInState(SCRIPT_DATA_STATE);\r\n        }\r\n    }\r\n\r\n    // Script data escape start state\r\n    //------------------------------------------------------------------\r\n    [SCRIPT_DATA_ESCAPE_START_STATE](cp) {\r\n        if (cp === $.HYPHEN_MINUS) {\r\n            this.state = SCRIPT_DATA_ESCAPE_START_DASH_STATE;\r\n            this._emitChars('-');\r\n        } else {\r\n            this._reconsumeInState(SCRIPT_DATA_STATE);\r\n        }\r\n    }\r\n\r\n    // Script data escape start dash state\r\n    //------------------------------------------------------------------\r\n    [SCRIPT_DATA_ESCAPE_START_DASH_STATE](cp) {\r\n        if (cp === $.HYPHEN_MINUS) {\r\n            this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;\r\n            this._emitChars('-');\r\n        } else {\r\n            this._reconsumeInState(SCRIPT_DATA_STATE);\r\n        }\r\n    }\r\n\r\n    // Script data escaped state\r\n    //------------------------------------------------------------------\r\n    [SCRIPT_DATA_ESCAPED_STATE](cp) {\r\n        if (cp === $.HYPHEN_MINUS) {\r\n            this.state = SCRIPT_DATA_ESCAPED_DASH_STATE;\r\n            this._emitChars('-');\r\n        } else if (cp === $.LESS_THAN_SIGN) {\r\n            this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;\r\n        } else if (cp === $.NULL) {\r\n            this._err(ERR.unexpectedNullCharacter);\r\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\r\n            this._emitEOFToken();\r\n        } else {\r\n            this._emitCodePoint(cp);\r\n        }\r\n    }\r\n\r\n    // Script data escaped dash state\r\n    //------------------------------------------------------------------\r\n    [SCRIPT_DATA_ESCAPED_DASH_STATE](cp) {\r\n        if (cp === $.HYPHEN_MINUS) {\r\n            this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;\r\n            this._emitChars('-');\r\n        } else if (cp === $.LESS_THAN_SIGN) {\r\n            this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;\r\n        } else if (cp === $.NULL) {\r\n            this._err(ERR.unexpectedNullCharacter);\r\n            this.state = SCRIPT_DATA_ESCAPED_STATE;\r\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\r\n            this._emitEOFToken();\r\n        } else {\r\n            this.state = SCRIPT_DATA_ESCAPED_STATE;\r\n            this._emitCodePoint(cp);\r\n        }\r\n    }\r\n\r\n    // Script data escaped dash dash state\r\n    //------------------------------------------------------------------\r\n    [SCRIPT_DATA_ESCAPED_DASH_DASH_STATE](cp) {\r\n        if (cp === $.HYPHEN_MINUS) {\r\n            this._emitChars('-');\r\n        } else if (cp === $.LESS_THAN_SIGN) {\r\n            this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;\r\n        } else if (cp === $.GREATER_THAN_SIGN) {\r\n            this.state = SCRIPT_DATA_STATE;\r\n            this._emitChars('>');\r\n        } else if (cp === $.NULL) {\r\n            this._err(ERR.unexpectedNullCharacter);\r\n            this.state = SCRIPT_DATA_ESCAPED_STATE;\r\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\r\n            this._emitEOFToken();\r\n        } else {\r\n            this.state = SCRIPT_DATA_ESCAPED_STATE;\r\n            this._emitCodePoint(cp);\r\n        }\r\n    }\r\n\r\n    // Script data escaped less-than sign state\r\n    //------------------------------------------------------------------\r\n    [SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE](cp) {\r\n        if (cp === $.SOLIDUS) {\r\n            this.tempBuff = [];\r\n            this.state = SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE;\r\n        } else if (isAsciiLetter(cp)) {\r\n            this.tempBuff = [];\r\n            this._emitChars('<');\r\n            this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE);\r\n        } else {\r\n            this._emitChars('<');\r\n            this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\r\n        }\r\n    }\r\n\r\n    // Script data escaped end tag open state\r\n    //------------------------------------------------------------------\r\n    [SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE](cp) {\r\n        if (isAsciiLetter(cp)) {\r\n            this._createEndTagToken();\r\n            this._reconsumeInState(SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE);\r\n        } else {\r\n            this._emitChars('</');\r\n            this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\r\n        }\r\n    }\r\n\r\n    // Script data escaped end tag name state\r\n    //------------------------------------------------------------------\r\n    [SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE](cp) {\r\n        if (isAsciiUpper(cp)) {\r\n            this.currentToken.tagName += toAsciiLowerChar(cp);\r\n            this.tempBuff.push(cp);\r\n        } else if (isAsciiLower(cp)) {\r\n            this.currentToken.tagName += toChar(cp);\r\n            this.tempBuff.push(cp);\r\n        } else {\r\n            if (this.lastStartTagName === this.currentToken.tagName) {\r\n                if (isWhitespace(cp)) {\r\n                    this.state = BEFORE_ATTRIBUTE_NAME_STATE;\r\n                    return;\r\n                }\r\n\r\n                if (cp === $.SOLIDUS) {\r\n                    this.state = SELF_CLOSING_START_TAG_STATE;\r\n                    return;\r\n                }\r\n\r\n                if (cp === $.GREATER_THAN_SIGN) {\r\n                    this._emitCurrentToken();\r\n                    this.state = DATA_STATE;\r\n                    return;\r\n                }\r\n            }\r\n\r\n            this._emitChars('</');\r\n            this._emitSeveralCodePoints(this.tempBuff);\r\n            this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\r\n        }\r\n    }\r\n\r\n    // Script data double escape start state\r\n    //------------------------------------------------------------------\r\n    [SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE](cp) {\r\n        if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {\r\n            this.state = this._isTempBufferEqualToScriptString()\r\n                ? SCRIPT_DATA_DOUBLE_ESCAPED_STATE\r\n                : SCRIPT_DATA_ESCAPED_STATE;\r\n            this._emitCodePoint(cp);\r\n        } else if (isAsciiUpper(cp)) {\r\n            this.tempBuff.push(toAsciiLowerCodePoint(cp));\r\n            this._emitCodePoint(cp);\r\n        } else if (isAsciiLower(cp)) {\r\n            this.tempBuff.push(cp);\r\n            this._emitCodePoint(cp);\r\n        } else {\r\n            this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\r\n        }\r\n    }\r\n\r\n    // Script data double escaped state\r\n    //------------------------------------------------------------------\r\n    [SCRIPT_DATA_DOUBLE_ESCAPED_STATE](cp) {\r\n        if (cp === $.HYPHEN_MINUS) {\r\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE;\r\n            this._emitChars('-');\r\n        } else if (cp === $.LESS_THAN_SIGN) {\r\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\r\n            this._emitChars('<');\r\n        } else if (cp === $.NULL) {\r\n            this._err(ERR.unexpectedNullCharacter);\r\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\r\n            this._emitEOFToken();\r\n        } else {\r\n            this._emitCodePoint(cp);\r\n        }\r\n    }\r\n\r\n    // Script data double escaped dash state\r\n    //------------------------------------------------------------------\r\n    [SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE](cp) {\r\n        if (cp === $.HYPHEN_MINUS) {\r\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE;\r\n            this._emitChars('-');\r\n        } else if (cp === $.LESS_THAN_SIGN) {\r\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\r\n            this._emitChars('<');\r\n        } else if (cp === $.NULL) {\r\n            this._err(ERR.unexpectedNullCharacter);\r\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\r\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\r\n            this._emitEOFToken();\r\n        } else {\r\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\r\n            this._emitCodePoint(cp);\r\n        }\r\n    }\r\n\r\n    // Script data double escaped dash dash state\r\n    //------------------------------------------------------------------\r\n    [SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE](cp) {\r\n        if (cp === $.HYPHEN_MINUS) {\r\n            this._emitChars('-');\r\n        } else if (cp === $.LESS_THAN_SIGN) {\r\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\r\n            this._emitChars('<');\r\n        } else if (cp === $.GREATER_THAN_SIGN) {\r\n            this.state = SCRIPT_DATA_STATE;\r\n            this._emitChars('>');\r\n        } else if (cp === $.NULL) {\r\n            this._err(ERR.unexpectedNullCharacter);\r\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\r\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\r\n            this._emitEOFToken();\r\n        } else {\r\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\r\n            this._emitCodePoint(cp);\r\n        }\r\n    }\r\n\r\n    // Script data double escaped less-than sign state\r\n    //------------------------------------------------------------------\r\n    [SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE](cp) {\r\n        if (cp === $.SOLIDUS) {\r\n            this.tempBuff = [];\r\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE;\r\n            this._emitChars('/');\r\n        } else {\r\n            this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);\r\n        }\r\n    }\r\n\r\n    // Script data double escape end state\r\n    //------------------------------------------------------------------\r\n    [SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE](cp) {\r\n        if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {\r\n            this.state = this._isTempBufferEqualToScriptString()\r\n                ? SCRIPT_DATA_ESCAPED_STATE\r\n                : SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\r\n\r\n            this._emitCodePoint(cp);\r\n        } else if (isAsciiUpper(cp)) {\r\n            this.tempBuff.push(toAsciiLowerCodePoint(cp));\r\n            this._emitCodePoint(cp);\r\n        } else if (isAsciiLower(cp)) {\r\n            this.tempBuff.push(cp);\r\n            this._emitCodePoint(cp);\r\n        } else {\r\n            this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);\r\n        }\r\n    }\r\n\r\n    // Before attribute name state\r\n    //------------------------------------------------------------------\r\n    [BEFORE_ATTRIBUTE_NAME_STATE](cp) {\r\n        if (isWhitespace(cp)) {\r\n            return;\r\n        }\r\n\r\n        if (cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN || cp === $.EOF) {\r\n            this._reconsumeInState(AFTER_ATTRIBUTE_NAME_STATE);\r\n        } else if (cp === $.EQUALS_SIGN) {\r\n            this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\r\n            this._createAttr('=');\r\n            this.state = ATTRIBUTE_NAME_STATE;\r\n        } else {\r\n            this._createAttr('');\r\n            this._reconsumeInState(ATTRIBUTE_NAME_STATE);\r\n        }\r\n    }\r\n\r\n    // Attribute name state\r\n    //------------------------------------------------------------------\r\n    [ATTRIBUTE_NAME_STATE](cp) {\r\n        if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN || cp === $.EOF) {\r\n            this._leaveAttrName(AFTER_ATTRIBUTE_NAME_STATE);\r\n            this._unconsume();\r\n        } else if (cp === $.EQUALS_SIGN) {\r\n            this._leaveAttrName(BEFORE_ATTRIBUTE_VALUE_STATE);\r\n        } else if (isAsciiUpper(cp)) {\r\n            this.currentAttr.name += toAsciiLowerChar(cp);\r\n        } else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN) {\r\n            this._err(ERR.unexpectedCharacterInAttributeName);\r\n            this.currentAttr.name += toChar(cp);\r\n        } else if (cp === $.NULL) {\r\n            this._err(ERR.unexpectedNullCharacter);\r\n            this.currentAttr.name += unicode.REPLACEMENT_CHARACTER;\r\n        } else {\r\n            this.currentAttr.name += toChar(cp);\r\n        }\r\n    }\r\n\r\n    // After attribute name state\r\n    //------------------------------------------------------------------\r\n    [AFTER_ATTRIBUTE_NAME_STATE](cp) {\r\n        if (isWhitespace(cp)) {\r\n            return;\r\n        }\r\n\r\n        if (cp === $.SOLIDUS) {\r\n            this.state = SELF_CLOSING_START_TAG_STATE;\r\n        } else if (cp === $.EQUALS_SIGN) {\r\n            this.state = BEFORE_ATTRIBUTE_VALUE_STATE;\r\n        } else if (cp === $.GREATER_THAN_SIGN) {\r\n            this.state = DATA_STATE;\r\n            this._emitCurrentToken();\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofInTag);\r\n            this._emitEOFToken();\r\n        } else {\r\n            this._createAttr('');\r\n            this._reconsumeInState(ATTRIBUTE_NAME_STATE);\r\n        }\r\n    }\r\n\r\n    // Before attribute value state\r\n    //------------------------------------------------------------------\r\n    [BEFORE_ATTRIBUTE_VALUE_STATE](cp) {\r\n        if (isWhitespace(cp)) {\r\n            return;\r\n        }\r\n\r\n        if (cp === $.QUOTATION_MARK) {\r\n            this.state = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE;\r\n        } else if (cp === $.APOSTROPHE) {\r\n            this.state = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE;\r\n        } else if (cp === $.GREATER_THAN_SIGN) {\r\n            this._err(ERR.missingAttributeValue);\r\n            this.state = DATA_STATE;\r\n            this._emitCurrentToken();\r\n        } else {\r\n            this._reconsumeInState(ATTRIBUTE_VALUE_UNQUOTED_STATE);\r\n        }\r\n    }\r\n\r\n    // Attribute value (double-quoted) state\r\n    //------------------------------------------------------------------\r\n    [ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE](cp) {\r\n        if (cp === $.QUOTATION_MARK) {\r\n            this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;\r\n        } else if (cp === $.AMPERSAND) {\r\n            this.returnState = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE;\r\n            this.state = CHARACTER_REFERENCE_STATE;\r\n        } else if (cp === $.NULL) {\r\n            this._err(ERR.unexpectedNullCharacter);\r\n            this.currentAttr.value += unicode.REPLACEMENT_CHARACTER;\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofInTag);\r\n            this._emitEOFToken();\r\n        } else {\r\n            this.currentAttr.value += toChar(cp);\r\n        }\r\n    }\r\n\r\n    // Attribute value (single-quoted) state\r\n    //------------------------------------------------------------------\r\n    [ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE](cp) {\r\n        if (cp === $.APOSTROPHE) {\r\n            this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;\r\n        } else if (cp === $.AMPERSAND) {\r\n            this.returnState = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE;\r\n            this.state = CHARACTER_REFERENCE_STATE;\r\n        } else if (cp === $.NULL) {\r\n            this._err(ERR.unexpectedNullCharacter);\r\n            this.currentAttr.value += unicode.REPLACEMENT_CHARACTER;\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofInTag);\r\n            this._emitEOFToken();\r\n        } else {\r\n            this.currentAttr.value += toChar(cp);\r\n        }\r\n    }\r\n\r\n    // Attribute value (unquoted) state\r\n    //------------------------------------------------------------------\r\n    [ATTRIBUTE_VALUE_UNQUOTED_STATE](cp) {\r\n        if (isWhitespace(cp)) {\r\n            this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);\r\n        } else if (cp === $.AMPERSAND) {\r\n            this.returnState = ATTRIBUTE_VALUE_UNQUOTED_STATE;\r\n            this.state = CHARACTER_REFERENCE_STATE;\r\n        } else if (cp === $.GREATER_THAN_SIGN) {\r\n            this._leaveAttrValue(DATA_STATE);\r\n            this._emitCurrentToken();\r\n        } else if (cp === $.NULL) {\r\n            this._err(ERR.unexpectedNullCharacter);\r\n            this.currentAttr.value += unicode.REPLACEMENT_CHARACTER;\r\n        } else if (\r\n            cp === $.QUOTATION_MARK ||\r\n            cp === $.APOSTROPHE ||\r\n            cp === $.LESS_THAN_SIGN ||\r\n            cp === $.EQUALS_SIGN ||\r\n            cp === $.GRAVE_ACCENT\r\n        ) {\r\n            this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\r\n            this.currentAttr.value += toChar(cp);\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofInTag);\r\n            this._emitEOFToken();\r\n        } else {\r\n            this.currentAttr.value += toChar(cp);\r\n        }\r\n    }\r\n\r\n    // After attribute value (quoted) state\r\n    //------------------------------------------------------------------\r\n    [AFTER_ATTRIBUTE_VALUE_QUOTED_STATE](cp) {\r\n        if (isWhitespace(cp)) {\r\n            this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);\r\n        } else if (cp === $.SOLIDUS) {\r\n            this._leaveAttrValue(SELF_CLOSING_START_TAG_STATE);\r\n        } else if (cp === $.GREATER_THAN_SIGN) {\r\n            this._leaveAttrValue(DATA_STATE);\r\n            this._emitCurrentToken();\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofInTag);\r\n            this._emitEOFToken();\r\n        } else {\r\n            this._err(ERR.missingWhitespaceBetweenAttributes);\r\n            this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);\r\n        }\r\n    }\r\n\r\n    // Self-closing start tag state\r\n    //------------------------------------------------------------------\r\n    [SELF_CLOSING_START_TAG_STATE](cp) {\r\n        if (cp === $.GREATER_THAN_SIGN) {\r\n            this.currentToken.selfClosing = true;\r\n            this.state = DATA_STATE;\r\n            this._emitCurrentToken();\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofInTag);\r\n            this._emitEOFToken();\r\n        } else {\r\n            this._err(ERR.unexpectedSolidusInTag);\r\n            this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);\r\n        }\r\n    }\r\n\r\n    // Bogus comment state\r\n    //------------------------------------------------------------------\r\n    [BOGUS_COMMENT_STATE](cp) {\r\n        if (cp === $.GREATER_THAN_SIGN) {\r\n            this.state = DATA_STATE;\r\n            this._emitCurrentToken();\r\n        } else if (cp === $.EOF) {\r\n            this._emitCurrentToken();\r\n            this._emitEOFToken();\r\n        } else if (cp === $.NULL) {\r\n            this._err(ERR.unexpectedNullCharacter);\r\n            this.currentToken.data += unicode.REPLACEMENT_CHARACTER;\r\n        } else {\r\n            this.currentToken.data += toChar(cp);\r\n        }\r\n    }\r\n\r\n    // Markup declaration open state\r\n    //------------------------------------------------------------------\r\n    [MARKUP_DECLARATION_OPEN_STATE](cp) {\r\n        if (this._consumeSequenceIfMatch($$.DASH_DASH_STRING, cp, true)) {\r\n            this._createCommentToken();\r\n            this.state = COMMENT_START_STATE;\r\n        } else if (this._consumeSequenceIfMatch($$.DOCTYPE_STRING, cp, false)) {\r\n            this.state = DOCTYPE_STATE;\r\n        } else if (this._consumeSequenceIfMatch($$.CDATA_START_STRING, cp, true)) {\r\n            if (this.allowCDATA) {\r\n                this.state = CDATA_SECTION_STATE;\r\n            } else {\r\n                this._err(ERR.cdataInHtmlContent);\r\n                this._createCommentToken();\r\n                this.currentToken.data = '[CDATA[';\r\n                this.state = BOGUS_COMMENT_STATE;\r\n            }\r\n        }\r\n\r\n        //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\r\n        //results are no longer valid and we will need to start over.\r\n        else if (!this._ensureHibernation()) {\r\n            this._err(ERR.incorrectlyOpenedComment);\r\n            this._createCommentToken();\r\n            this._reconsumeInState(BOGUS_COMMENT_STATE);\r\n        }\r\n    }\r\n\r\n    // Comment start state\r\n    //------------------------------------------------------------------\r\n    [COMMENT_START_STATE](cp) {\r\n        if (cp === $.HYPHEN_MINUS) {\r\n            this.state = COMMENT_START_DASH_STATE;\r\n        } else if (cp === $.GREATER_THAN_SIGN) {\r\n            this._err(ERR.abruptClosingOfEmptyComment);\r\n            this.state = DATA_STATE;\r\n            this._emitCurrentToken();\r\n        } else {\r\n            this._reconsumeInState(COMMENT_STATE);\r\n        }\r\n    }\r\n\r\n    // Comment start dash state\r\n    //------------------------------------------------------------------\r\n    [COMMENT_START_DASH_STATE](cp) {\r\n        if (cp === $.HYPHEN_MINUS) {\r\n            this.state = COMMENT_END_STATE;\r\n        } else if (cp === $.GREATER_THAN_SIGN) {\r\n            this._err(ERR.abruptClosingOfEmptyComment);\r\n            this.state = DATA_STATE;\r\n            this._emitCurrentToken();\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofInComment);\r\n            this._emitCurrentToken();\r\n            this._emitEOFToken();\r\n        } else {\r\n            this.currentToken.data += '-';\r\n            this._reconsumeInState(COMMENT_STATE);\r\n        }\r\n    }\r\n\r\n    // Comment state\r\n    //------------------------------------------------------------------\r\n    [COMMENT_STATE](cp) {\r\n        if (cp === $.HYPHEN_MINUS) {\r\n            this.state = COMMENT_END_DASH_STATE;\r\n        } else if (cp === $.LESS_THAN_SIGN) {\r\n            this.currentToken.data += '<';\r\n            this.state = COMMENT_LESS_THAN_SIGN_STATE;\r\n        } else if (cp === $.NULL) {\r\n            this._err(ERR.unexpectedNullCharacter);\r\n            this.currentToken.data += unicode.REPLACEMENT_CHARACTER;\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofInComment);\r\n            this._emitCurrentToken();\r\n            this._emitEOFToken();\r\n        } else {\r\n            this.currentToken.data += toChar(cp);\r\n        }\r\n    }\r\n\r\n    // Comment less-than sign state\r\n    //------------------------------------------------------------------\r\n    [COMMENT_LESS_THAN_SIGN_STATE](cp) {\r\n        if (cp === $.EXCLAMATION_MARK) {\r\n            this.currentToken.data += '!';\r\n            this.state = COMMENT_LESS_THAN_SIGN_BANG_STATE;\r\n        } else if (cp === $.LESS_THAN_SIGN) {\r\n            this.currentToken.data += '!';\r\n        } else {\r\n            this._reconsumeInState(COMMENT_STATE);\r\n        }\r\n    }\r\n\r\n    // Comment less-than sign bang state\r\n    //------------------------------------------------------------------\r\n    [COMMENT_LESS_THAN_SIGN_BANG_STATE](cp) {\r\n        if (cp === $.HYPHEN_MINUS) {\r\n            this.state = COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE;\r\n        } else {\r\n            this._reconsumeInState(COMMENT_STATE);\r\n        }\r\n    }\r\n\r\n    // Comment less-than sign bang dash state\r\n    //------------------------------------------------------------------\r\n    [COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE](cp) {\r\n        if (cp === $.HYPHEN_MINUS) {\r\n            this.state = COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE;\r\n        } else {\r\n            this._reconsumeInState(COMMENT_END_DASH_STATE);\r\n        }\r\n    }\r\n\r\n    // Comment less-than sign bang dash dash state\r\n    //------------------------------------------------------------------\r\n    [COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE](cp) {\r\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\r\n            this._err(ERR.nestedComment);\r\n        }\r\n\r\n        this._reconsumeInState(COMMENT_END_STATE);\r\n    }\r\n\r\n    // Comment end dash state\r\n    //------------------------------------------------------------------\r\n    [COMMENT_END_DASH_STATE](cp) {\r\n        if (cp === $.HYPHEN_MINUS) {\r\n            this.state = COMMENT_END_STATE;\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofInComment);\r\n            this._emitCurrentToken();\r\n            this._emitEOFToken();\r\n        } else {\r\n            this.currentToken.data += '-';\r\n            this._reconsumeInState(COMMENT_STATE);\r\n        }\r\n    }\r\n\r\n    // Comment end state\r\n    //------------------------------------------------------------------\r\n    [COMMENT_END_STATE](cp) {\r\n        if (cp === $.GREATER_THAN_SIGN) {\r\n            this.state = DATA_STATE;\r\n            this._emitCurrentToken();\r\n        } else if (cp === $.EXCLAMATION_MARK) {\r\n            this.state = COMMENT_END_BANG_STATE;\r\n        } else if (cp === $.HYPHEN_MINUS) {\r\n            this.currentToken.data += '-';\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofInComment);\r\n            this._emitCurrentToken();\r\n            this._emitEOFToken();\r\n        } else {\r\n            this.currentToken.data += '--';\r\n            this._reconsumeInState(COMMENT_STATE);\r\n        }\r\n    }\r\n\r\n    // Comment end bang state\r\n    //------------------------------------------------------------------\r\n    [COMMENT_END_BANG_STATE](cp) {\r\n        if (cp === $.HYPHEN_MINUS) {\r\n            this.currentToken.data += '--!';\r\n            this.state = COMMENT_END_DASH_STATE;\r\n        } else if (cp === $.GREATER_THAN_SIGN) {\r\n            this._err(ERR.incorrectlyClosedComment);\r\n            this.state = DATA_STATE;\r\n            this._emitCurrentToken();\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofInComment);\r\n            this._emitCurrentToken();\r\n            this._emitEOFToken();\r\n        } else {\r\n            this.currentToken.data += '--!';\r\n            this._reconsumeInState(COMMENT_STATE);\r\n        }\r\n    }\r\n\r\n    // DOCTYPE state\r\n    //------------------------------------------------------------------\r\n    [DOCTYPE_STATE](cp) {\r\n        if (isWhitespace(cp)) {\r\n            this.state = BEFORE_DOCTYPE_NAME_STATE;\r\n        } else if (cp === $.GREATER_THAN_SIGN) {\r\n            this._reconsumeInState(BEFORE_DOCTYPE_NAME_STATE);\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofInDoctype);\r\n            this._createDoctypeToken(null);\r\n            this.currentToken.forceQuirks = true;\r\n            this._emitCurrentToken();\r\n            this._emitEOFToken();\r\n        } else {\r\n            this._err(ERR.missingWhitespaceBeforeDoctypeName);\r\n            this._reconsumeInState(BEFORE_DOCTYPE_NAME_STATE);\r\n        }\r\n    }\r\n\r\n    // Before DOCTYPE name state\r\n    //------------------------------------------------------------------\r\n    [BEFORE_DOCTYPE_NAME_STATE](cp) {\r\n        if (isWhitespace(cp)) {\r\n            return;\r\n        }\r\n\r\n        if (isAsciiUpper(cp)) {\r\n            this._createDoctypeToken(toAsciiLowerChar(cp));\r\n            this.state = DOCTYPE_NAME_STATE;\r\n        } else if (cp === $.NULL) {\r\n            this._err(ERR.unexpectedNullCharacter);\r\n            this._createDoctypeToken(unicode.REPLACEMENT_CHARACTER);\r\n            this.state = DOCTYPE_NAME_STATE;\r\n        } else if (cp === $.GREATER_THAN_SIGN) {\r\n            this._err(ERR.missingDoctypeName);\r\n            this._createDoctypeToken(null);\r\n            this.currentToken.forceQuirks = true;\r\n            this._emitCurrentToken();\r\n            this.state = DATA_STATE;\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofInDoctype);\r\n            this._createDoctypeToken(null);\r\n            this.currentToken.forceQuirks = true;\r\n            this._emitCurrentToken();\r\n            this._emitEOFToken();\r\n        } else {\r\n            this._createDoctypeToken(toChar(cp));\r\n            this.state = DOCTYPE_NAME_STATE;\r\n        }\r\n    }\r\n\r\n    // DOCTYPE name state\r\n    //------------------------------------------------------------------\r\n    [DOCTYPE_NAME_STATE](cp) {\r\n        if (isWhitespace(cp)) {\r\n            this.state = AFTER_DOCTYPE_NAME_STATE;\r\n        } else if (cp === $.GREATER_THAN_SIGN) {\r\n            this.state = DATA_STATE;\r\n            this._emitCurrentToken();\r\n        } else if (isAsciiUpper(cp)) {\r\n            this.currentToken.name += toAsciiLowerChar(cp);\r\n        } else if (cp === $.NULL) {\r\n            this._err(ERR.unexpectedNullCharacter);\r\n            this.currentToken.name += unicode.REPLACEMENT_CHARACTER;\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofInDoctype);\r\n            this.currentToken.forceQuirks = true;\r\n            this._emitCurrentToken();\r\n            this._emitEOFToken();\r\n        } else {\r\n            this.currentToken.name += toChar(cp);\r\n        }\r\n    }\r\n\r\n    // After DOCTYPE name state\r\n    //------------------------------------------------------------------\r\n    [AFTER_DOCTYPE_NAME_STATE](cp) {\r\n        if (isWhitespace(cp)) {\r\n            return;\r\n        }\r\n\r\n        if (cp === $.GREATER_THAN_SIGN) {\r\n            this.state = DATA_STATE;\r\n            this._emitCurrentToken();\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofInDoctype);\r\n            this.currentToken.forceQuirks = true;\r\n            this._emitCurrentToken();\r\n            this._emitEOFToken();\r\n        } else if (this._consumeSequenceIfMatch($$.PUBLIC_STRING, cp, false)) {\r\n            this.state = AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE;\r\n        } else if (this._consumeSequenceIfMatch($$.SYSTEM_STRING, cp, false)) {\r\n            this.state = AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE;\r\n        }\r\n        //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\r\n        //results are no longer valid and we will need to start over.\r\n        else if (!this._ensureHibernation()) {\r\n            this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\r\n            this.currentToken.forceQuirks = true;\r\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\r\n        }\r\n    }\r\n\r\n    // After DOCTYPE public keyword state\r\n    //------------------------------------------------------------------\r\n    [AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE](cp) {\r\n        if (isWhitespace(cp)) {\r\n            this.state = BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE;\r\n        } else if (cp === $.QUOTATION_MARK) {\r\n            this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\r\n            this.currentToken.publicId = '';\r\n            this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE;\r\n        } else if (cp === $.APOSTROPHE) {\r\n            this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\r\n            this.currentToken.publicId = '';\r\n            this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE;\r\n        } else if (cp === $.GREATER_THAN_SIGN) {\r\n            this._err(ERR.missingDoctypePublicIdentifier);\r\n            this.currentToken.forceQuirks = true;\r\n            this.state = DATA_STATE;\r\n            this._emitCurrentToken();\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofInDoctype);\r\n            this.currentToken.forceQuirks = true;\r\n            this._emitCurrentToken();\r\n            this._emitEOFToken();\r\n        } else {\r\n            this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\r\n            this.currentToken.forceQuirks = true;\r\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\r\n        }\r\n    }\r\n\r\n    // Before DOCTYPE public identifier state\r\n    //------------------------------------------------------------------\r\n    [BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE](cp) {\r\n        if (isWhitespace(cp)) {\r\n            return;\r\n        }\r\n\r\n        if (cp === $.QUOTATION_MARK) {\r\n            this.currentToken.publicId = '';\r\n            this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE;\r\n        } else if (cp === $.APOSTROPHE) {\r\n            this.currentToken.publicId = '';\r\n            this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE;\r\n        } else if (cp === $.GREATER_THAN_SIGN) {\r\n            this._err(ERR.missingDoctypePublicIdentifier);\r\n            this.currentToken.forceQuirks = true;\r\n            this.state = DATA_STATE;\r\n            this._emitCurrentToken();\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofInDoctype);\r\n            this.currentToken.forceQuirks = true;\r\n            this._emitCurrentToken();\r\n            this._emitEOFToken();\r\n        } else {\r\n            this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\r\n            this.currentToken.forceQuirks = true;\r\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\r\n        }\r\n    }\r\n\r\n    // DOCTYPE public identifier (double-quoted) state\r\n    //------------------------------------------------------------------\r\n    [DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE](cp) {\r\n        if (cp === $.QUOTATION_MARK) {\r\n            this.state = AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE;\r\n        } else if (cp === $.NULL) {\r\n            this._err(ERR.unexpectedNullCharacter);\r\n            this.currentToken.publicId += unicode.REPLACEMENT_CHARACTER;\r\n        } else if (cp === $.GREATER_THAN_SIGN) {\r\n            this._err(ERR.abruptDoctypePublicIdentifier);\r\n            this.currentToken.forceQuirks = true;\r\n            this._emitCurrentToken();\r\n            this.state = DATA_STATE;\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofInDoctype);\r\n            this.currentToken.forceQuirks = true;\r\n            this._emitCurrentToken();\r\n            this._emitEOFToken();\r\n        } else {\r\n            this.currentToken.publicId += toChar(cp);\r\n        }\r\n    }\r\n\r\n    // DOCTYPE public identifier (single-quoted) state\r\n    //------------------------------------------------------------------\r\n    [DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE](cp) {\r\n        if (cp === $.APOSTROPHE) {\r\n            this.state = AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE;\r\n        } else if (cp === $.NULL) {\r\n            this._err(ERR.unexpectedNullCharacter);\r\n            this.currentToken.publicId += unicode.REPLACEMENT_CHARACTER;\r\n        } else if (cp === $.GREATER_THAN_SIGN) {\r\n            this._err(ERR.abruptDoctypePublicIdentifier);\r\n            this.currentToken.forceQuirks = true;\r\n            this._emitCurrentToken();\r\n            this.state = DATA_STATE;\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofInDoctype);\r\n            this.currentToken.forceQuirks = true;\r\n            this._emitCurrentToken();\r\n            this._emitEOFToken();\r\n        } else {\r\n            this.currentToken.publicId += toChar(cp);\r\n        }\r\n    }\r\n\r\n    // After DOCTYPE public identifier state\r\n    //------------------------------------------------------------------\r\n    [AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE](cp) {\r\n        if (isWhitespace(cp)) {\r\n            this.state = BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE;\r\n        } else if (cp === $.GREATER_THAN_SIGN) {\r\n            this.state = DATA_STATE;\r\n            this._emitCurrentToken();\r\n        } else if (cp === $.QUOTATION_MARK) {\r\n            this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\r\n            this.currentToken.systemId = '';\r\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\r\n        } else if (cp === $.APOSTROPHE) {\r\n            this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\r\n            this.currentToken.systemId = '';\r\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofInDoctype);\r\n            this.currentToken.forceQuirks = true;\r\n            this._emitCurrentToken();\r\n            this._emitEOFToken();\r\n        } else {\r\n            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\r\n            this.currentToken.forceQuirks = true;\r\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\r\n        }\r\n    }\r\n\r\n    // Between DOCTYPE public and system identifiers state\r\n    //------------------------------------------------------------------\r\n    [BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE](cp) {\r\n        if (isWhitespace(cp)) {\r\n            return;\r\n        }\r\n\r\n        if (cp === $.GREATER_THAN_SIGN) {\r\n            this._emitCurrentToken();\r\n            this.state = DATA_STATE;\r\n        } else if (cp === $.QUOTATION_MARK) {\r\n            this.currentToken.systemId = '';\r\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\r\n        } else if (cp === $.APOSTROPHE) {\r\n            this.currentToken.systemId = '';\r\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofInDoctype);\r\n            this.currentToken.forceQuirks = true;\r\n            this._emitCurrentToken();\r\n            this._emitEOFToken();\r\n        } else {\r\n            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\r\n            this.currentToken.forceQuirks = true;\r\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\r\n        }\r\n    }\r\n\r\n    // After DOCTYPE system keyword state\r\n    //------------------------------------------------------------------\r\n    [AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE](cp) {\r\n        if (isWhitespace(cp)) {\r\n            this.state = BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE;\r\n        } else if (cp === $.QUOTATION_MARK) {\r\n            this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\r\n            this.currentToken.systemId = '';\r\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\r\n        } else if (cp === $.APOSTROPHE) {\r\n            this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\r\n            this.currentToken.systemId = '';\r\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\r\n        } else if (cp === $.GREATER_THAN_SIGN) {\r\n            this._err(ERR.missingDoctypeSystemIdentifier);\r\n            this.currentToken.forceQuirks = true;\r\n            this.state = DATA_STATE;\r\n            this._emitCurrentToken();\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofInDoctype);\r\n            this.currentToken.forceQuirks = true;\r\n            this._emitCurrentToken();\r\n            this._emitEOFToken();\r\n        } else {\r\n            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\r\n            this.currentToken.forceQuirks = true;\r\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\r\n        }\r\n    }\r\n\r\n    // Before DOCTYPE system identifier state\r\n    //------------------------------------------------------------------\r\n    [BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE](cp) {\r\n        if (isWhitespace(cp)) {\r\n            return;\r\n        }\r\n\r\n        if (cp === $.QUOTATION_MARK) {\r\n            this.currentToken.systemId = '';\r\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\r\n        } else if (cp === $.APOSTROPHE) {\r\n            this.currentToken.systemId = '';\r\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\r\n        } else if (cp === $.GREATER_THAN_SIGN) {\r\n            this._err(ERR.missingDoctypeSystemIdentifier);\r\n            this.currentToken.forceQuirks = true;\r\n            this.state = DATA_STATE;\r\n            this._emitCurrentToken();\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofInDoctype);\r\n            this.currentToken.forceQuirks = true;\r\n            this._emitCurrentToken();\r\n            this._emitEOFToken();\r\n        } else {\r\n            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\r\n            this.currentToken.forceQuirks = true;\r\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\r\n        }\r\n    }\r\n\r\n    // DOCTYPE system identifier (double-quoted) state\r\n    //------------------------------------------------------------------\r\n    [DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE](cp) {\r\n        if (cp === $.QUOTATION_MARK) {\r\n            this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;\r\n        } else if (cp === $.NULL) {\r\n            this._err(ERR.unexpectedNullCharacter);\r\n            this.currentToken.systemId += unicode.REPLACEMENT_CHARACTER;\r\n        } else if (cp === $.GREATER_THAN_SIGN) {\r\n            this._err(ERR.abruptDoctypeSystemIdentifier);\r\n            this.currentToken.forceQuirks = true;\r\n            this._emitCurrentToken();\r\n            this.state = DATA_STATE;\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofInDoctype);\r\n            this.currentToken.forceQuirks = true;\r\n            this._emitCurrentToken();\r\n            this._emitEOFToken();\r\n        } else {\r\n            this.currentToken.systemId += toChar(cp);\r\n        }\r\n    }\r\n\r\n    // DOCTYPE system identifier (single-quoted) state\r\n    //------------------------------------------------------------------\r\n    [DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE](cp) {\r\n        if (cp === $.APOSTROPHE) {\r\n            this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;\r\n        } else if (cp === $.NULL) {\r\n            this._err(ERR.unexpectedNullCharacter);\r\n            this.currentToken.systemId += unicode.REPLACEMENT_CHARACTER;\r\n        } else if (cp === $.GREATER_THAN_SIGN) {\r\n            this._err(ERR.abruptDoctypeSystemIdentifier);\r\n            this.currentToken.forceQuirks = true;\r\n            this._emitCurrentToken();\r\n            this.state = DATA_STATE;\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofInDoctype);\r\n            this.currentToken.forceQuirks = true;\r\n            this._emitCurrentToken();\r\n            this._emitEOFToken();\r\n        } else {\r\n            this.currentToken.systemId += toChar(cp);\r\n        }\r\n    }\r\n\r\n    // After DOCTYPE system identifier state\r\n    //------------------------------------------------------------------\r\n    [AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE](cp) {\r\n        if (isWhitespace(cp)) {\r\n            return;\r\n        }\r\n\r\n        if (cp === $.GREATER_THAN_SIGN) {\r\n            this._emitCurrentToken();\r\n            this.state = DATA_STATE;\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofInDoctype);\r\n            this.currentToken.forceQuirks = true;\r\n            this._emitCurrentToken();\r\n            this._emitEOFToken();\r\n        } else {\r\n            this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\r\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\r\n        }\r\n    }\r\n\r\n    // Bogus DOCTYPE state\r\n    //------------------------------------------------------------------\r\n    [BOGUS_DOCTYPE_STATE](cp) {\r\n        if (cp === $.GREATER_THAN_SIGN) {\r\n            this._emitCurrentToken();\r\n            this.state = DATA_STATE;\r\n        } else if (cp === $.NULL) {\r\n            this._err(ERR.unexpectedNullCharacter);\r\n        } else if (cp === $.EOF) {\r\n            this._emitCurrentToken();\r\n            this._emitEOFToken();\r\n        }\r\n    }\r\n\r\n    // CDATA section state\r\n    //------------------------------------------------------------------\r\n    [CDATA_SECTION_STATE](cp) {\r\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\r\n            this.state = CDATA_SECTION_BRACKET_STATE;\r\n        } else if (cp === $.EOF) {\r\n            this._err(ERR.eofInCdata);\r\n            this._emitEOFToken();\r\n        } else {\r\n            this._emitCodePoint(cp);\r\n        }\r\n    }\r\n\r\n    // CDATA section bracket state\r\n    //------------------------------------------------------------------\r\n    [CDATA_SECTION_BRACKET_STATE](cp) {\r\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\r\n            this.state = CDATA_SECTION_END_STATE;\r\n        } else {\r\n            this._emitChars(']');\r\n            this._reconsumeInState(CDATA_SECTION_STATE);\r\n        }\r\n    }\r\n\r\n    // CDATA section end state\r\n    //------------------------------------------------------------------\r\n    [CDATA_SECTION_END_STATE](cp) {\r\n        if (cp === $.GREATER_THAN_SIGN) {\r\n            this.state = DATA_STATE;\r\n        } else if (cp === $.RIGHT_SQUARE_BRACKET) {\r\n            this._emitChars(']');\r\n        } else {\r\n            this._emitChars(']]');\r\n            this._reconsumeInState(CDATA_SECTION_STATE);\r\n        }\r\n    }\r\n\r\n    // Character reference state\r\n    //------------------------------------------------------------------\r\n    [CHARACTER_REFERENCE_STATE](cp) {\r\n        this.tempBuff = [$.AMPERSAND];\r\n\r\n        if (cp === $.NUMBER_SIGN) {\r\n            this.tempBuff.push(cp);\r\n            this.state = NUMERIC_CHARACTER_REFERENCE_STATE;\r\n        } else if (isAsciiAlphaNumeric(cp)) {\r\n            this._reconsumeInState(NAMED_CHARACTER_REFERENCE_STATE);\r\n        } else {\r\n            this._flushCodePointsConsumedAsCharacterReference();\r\n            this._reconsumeInState(this.returnState);\r\n        }\r\n    }\r\n\r\n    // Named character reference state\r\n    //------------------------------------------------------------------\r\n    [NAMED_CHARACTER_REFERENCE_STATE](cp) {\r\n        const matchResult = this._matchNamedCharacterReference(cp);\r\n\r\n        //NOTE: matching can be abrupted by hibernation. In that case match\r\n        //results are no longer valid and we will need to start over.\r\n        if (this._ensureHibernation()) {\r\n            this.tempBuff = [$.AMPERSAND];\r\n        } else if (matchResult) {\r\n            const withSemicolon = this.tempBuff[this.tempBuff.length - 1] === $.SEMICOLON;\r\n\r\n            if (!this._isCharacterReferenceAttributeQuirk(withSemicolon)) {\r\n                if (!withSemicolon) {\r\n                    this._errOnNextCodePoint(ERR.missingSemicolonAfterCharacterReference);\r\n                }\r\n\r\n                this.tempBuff = matchResult;\r\n            }\r\n\r\n            this._flushCodePointsConsumedAsCharacterReference();\r\n            this.state = this.returnState;\r\n        } else {\r\n            this._flushCodePointsConsumedAsCharacterReference();\r\n            this.state = AMBIGUOUS_AMPERSAND_STATE;\r\n        }\r\n    }\r\n\r\n    // Ambiguos ampersand state\r\n    //------------------------------------------------------------------\r\n    [AMBIGUOUS_AMPERSAND_STATE](cp) {\r\n        if (isAsciiAlphaNumeric(cp)) {\r\n            if (this._isCharacterReferenceInAttribute()) {\r\n                this.currentAttr.value += toChar(cp);\r\n            } else {\r\n                this._emitCodePoint(cp);\r\n            }\r\n        } else {\r\n            if (cp === $.SEMICOLON) {\r\n                this._err(ERR.unknownNamedCharacterReference);\r\n            }\r\n\r\n            this._reconsumeInState(this.returnState);\r\n        }\r\n    }\r\n\r\n    // Numeric character reference state\r\n    //------------------------------------------------------------------\r\n    [NUMERIC_CHARACTER_REFERENCE_STATE](cp) {\r\n        this.charRefCode = 0;\r\n\r\n        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {\r\n            this.tempBuff.push(cp);\r\n            this.state = HEXADEMICAL_CHARACTER_REFERENCE_START_STATE;\r\n        } else {\r\n            this._reconsumeInState(DECIMAL_CHARACTER_REFERENCE_START_STATE);\r\n        }\r\n    }\r\n\r\n    // Hexademical character reference start state\r\n    //------------------------------------------------------------------\r\n    [HEXADEMICAL_CHARACTER_REFERENCE_START_STATE](cp) {\r\n        if (isAsciiHexDigit(cp)) {\r\n            this._reconsumeInState(HEXADEMICAL_CHARACTER_REFERENCE_STATE);\r\n        } else {\r\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\r\n            this._flushCodePointsConsumedAsCharacterReference();\r\n            this._reconsumeInState(this.returnState);\r\n        }\r\n    }\r\n\r\n    // Decimal character reference start state\r\n    //------------------------------------------------------------------\r\n    [DECIMAL_CHARACTER_REFERENCE_START_STATE](cp) {\r\n        if (isAsciiDigit(cp)) {\r\n            this._reconsumeInState(DECIMAL_CHARACTER_REFERENCE_STATE);\r\n        } else {\r\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\r\n            this._flushCodePointsConsumedAsCharacterReference();\r\n            this._reconsumeInState(this.returnState);\r\n        }\r\n    }\r\n\r\n    // Hexademical character reference state\r\n    //------------------------------------------------------------------\r\n    [HEXADEMICAL_CHARACTER_REFERENCE_STATE](cp) {\r\n        if (isAsciiUpperHexDigit(cp)) {\r\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\r\n        } else if (isAsciiLowerHexDigit(cp)) {\r\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\r\n        } else if (isAsciiDigit(cp)) {\r\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\r\n        } else if (cp === $.SEMICOLON) {\r\n            this.state = NUMERIC_CHARACTER_REFERENCE_END_STATE;\r\n        } else {\r\n            this._err(ERR.missingSemicolonAfterCharacterReference);\r\n            this._reconsumeInState(NUMERIC_CHARACTER_REFERENCE_END_STATE);\r\n        }\r\n    }\r\n\r\n    // Decimal character reference state\r\n    //------------------------------------------------------------------\r\n    [DECIMAL_CHARACTER_REFERENCE_STATE](cp) {\r\n        if (isAsciiDigit(cp)) {\r\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\r\n        } else if (cp === $.SEMICOLON) {\r\n            this.state = NUMERIC_CHARACTER_REFERENCE_END_STATE;\r\n        } else {\r\n            this._err(ERR.missingSemicolonAfterCharacterReference);\r\n            this._reconsumeInState(NUMERIC_CHARACTER_REFERENCE_END_STATE);\r\n        }\r\n    }\r\n\r\n    // Numeric character reference end state\r\n    //------------------------------------------------------------------\r\n    [NUMERIC_CHARACTER_REFERENCE_END_STATE]() {\r\n        if (this.charRefCode === $.NULL) {\r\n            this._err(ERR.nullCharacterReference);\r\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\r\n        } else if (this.charRefCode > 0x10ffff) {\r\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\r\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\r\n        } else if (unicode.isSurrogate(this.charRefCode)) {\r\n            this._err(ERR.surrogateCharacterReference);\r\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\r\n        } else if (unicode.isUndefinedCodePoint(this.charRefCode)) {\r\n            this._err(ERR.noncharacterCharacterReference);\r\n        } else if (unicode.isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {\r\n            this._err(ERR.controlCharacterReference);\r\n\r\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS[this.charRefCode];\r\n\r\n            if (replacement) {\r\n                this.charRefCode = replacement;\r\n            }\r\n        }\r\n\r\n        this.tempBuff = [this.charRefCode];\r\n\r\n        this._flushCodePointsConsumedAsCharacterReference();\r\n        this._reconsumeInState(this.returnState);\r\n    }\r\n}\r\n\r\n//Token types\r\nTokenizer.CHARACTER_TOKEN = 'CHARACTER_TOKEN';\r\nTokenizer.NULL_CHARACTER_TOKEN = 'NULL_CHARACTER_TOKEN';\r\nTokenizer.WHITESPACE_CHARACTER_TOKEN = 'WHITESPACE_CHARACTER_TOKEN';\r\nTokenizer.START_TAG_TOKEN = 'START_TAG_TOKEN';\r\nTokenizer.END_TAG_TOKEN = 'END_TAG_TOKEN';\r\nTokenizer.COMMENT_TOKEN = 'COMMENT_TOKEN';\r\nTokenizer.DOCTYPE_TOKEN = 'DOCTYPE_TOKEN';\r\nTokenizer.EOF_TOKEN = 'EOF_TOKEN';\r\nTokenizer.HIBERNATION_TOKEN = 'HIBERNATION_TOKEN';\r\n\r\n//Tokenizer initial states for different modes\r\nTokenizer.MODE = {\r\n    DATA: DATA_STATE,\r\n    RCDATA: RCDATA_STATE,\r\n    RAWTEXT: RAWTEXT_STATE,\r\n    SCRIPT_DATA: SCRIPT_DATA_STATE,\r\n    PLAINTEXT: PLAINTEXT_STATE\r\n};\r\n\r\n//Static\r\nTokenizer.getTokenAttr = function(token, attrName) {\r\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\r\n        if (token.attrs[i].name === attrName) {\r\n            return token.attrs[i].value;\r\n        }\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nmodule.exports = Tokenizer;\r\n", "'use strict';\r\n\r\nconst NS = (exports.NAMESPACES = {\r\n    HTML: 'http://www.w3.org/1999/xhtml',\r\n    MATHML: 'http://www.w3.org/1998/Math/MathML',\r\n    SVG: 'http://www.w3.org/2000/svg',\r\n    XLINK: 'http://www.w3.org/1999/xlink',\r\n    XML: 'http://www.w3.org/XML/1998/namespace',\r\n    XMLNS: 'http://www.w3.org/2000/xmlns/'\r\n});\r\n\r\nexports.ATTRS = {\r\n    TYPE: 'type',\r\n    ACTION: 'action',\r\n    ENCODING: 'encoding',\r\n    PROMPT: 'prompt',\r\n    NAME: 'name',\r\n    COLOR: 'color',\r\n    FACE: 'face',\r\n    SIZE: 'size'\r\n};\r\n\r\nexports.DOCUMENT_MODE = {\r\n    NO_QUIRKS: 'no-quirks',\r\n    QUIRKS: 'quirks',\r\n    LIMITED_QUIRKS: 'limited-quirks'\r\n};\r\n\r\nconst $ = (exports.TAG_NAMES = {\r\n    A: 'a',\r\n    ADDRESS: 'address',\r\n    ANNOTATION_XML: 'annotation-xml',\r\n    APPLET: 'applet',\r\n    AREA: 'area',\r\n    ARTICLE: 'article',\r\n    ASIDE: 'aside',\r\n\r\n    B: 'b',\r\n    BASE: 'base',\r\n    BASEFONT: 'basefont',\r\n    BGSOUND: 'bgsound',\r\n    BIG: 'big',\r\n    BLOCKQUOTE: 'blockquote',\r\n    BODY: 'body',\r\n    BR: 'br',\r\n    BUTTON: 'button',\r\n\r\n    CAPTION: 'caption',\r\n    CENTER: 'center',\r\n    CODE: 'code',\r\n    COL: 'col',\r\n    COLGROUP: 'colgroup',\r\n\r\n    DD: 'dd',\r\n    DESC: 'desc',\r\n    DETAILS: 'details',\r\n    DIALOG: 'dialog',\r\n    DIR: 'dir',\r\n    DIV: 'div',\r\n    DL: 'dl',\r\n    DT: 'dt',\r\n\r\n    EM: 'em',\r\n    EMBED: 'embed',\r\n\r\n    FIELDSET: 'fieldset',\r\n    FIGCAPTION: 'figcaption',\r\n    FIGURE: 'figure',\r\n    FONT: 'font',\r\n    FOOTER: 'footer',\r\n    FOREIGN_OBJECT: 'foreignObject',\r\n    FORM: 'form',\r\n    FRAME: 'frame',\r\n    FRAMESET: 'frameset',\r\n\r\n    H1: 'h1',\r\n    H2: 'h2',\r\n    H3: 'h3',\r\n    H4: 'h4',\r\n    H5: 'h5',\r\n    H6: 'h6',\r\n    HEAD: 'head',\r\n    HEADER: 'header',\r\n    HGROUP: 'hgroup',\r\n    HR: 'hr',\r\n    HTML: 'html',\r\n\r\n    I: 'i',\r\n    IMG: 'img',\r\n    IMAGE: 'image',\r\n    INPUT: 'input',\r\n    IFRAME: 'iframe',\r\n\r\n    KEYGEN: 'keygen',\r\n\r\n    LABEL: 'label',\r\n    LI: 'li',\r\n    LINK: 'link',\r\n    LISTING: 'listing',\r\n\r\n    MAIN: 'main',\r\n    MALIGNMARK: 'malignmark',\r\n    MARQUEE: 'marquee',\r\n    MATH: 'math',\r\n    MENU: 'menu',\r\n    META: 'meta',\r\n    MGLYPH: 'mglyph',\r\n    MI: 'mi',\r\n    MO: 'mo',\r\n    MN: 'mn',\r\n    MS: 'ms',\r\n    MTEXT: 'mtext',\r\n\r\n    NAV: 'nav',\r\n    NOBR: 'nobr',\r\n    NOFRAMES: 'noframes',\r\n    NOEMBED: 'noembed',\r\n    NOSCRIPT: 'noscript',\r\n\r\n    OBJECT: 'object',\r\n    OL: 'ol',\r\n    OPTGROUP: 'optgroup',\r\n    OPTION: 'option',\r\n\r\n    P: 'p',\r\n    PARAM: 'param',\r\n    PLAINTEXT: 'plaintext',\r\n    PRE: 'pre',\r\n\r\n    RB: 'rb',\r\n    RP: 'rp',\r\n    RT: 'rt',\r\n    RTC: 'rtc',\r\n    RUBY: 'ruby',\r\n\r\n    S: 's',\r\n    SCRIPT: 'script',\r\n    SECTION: 'section',\r\n    SELECT: 'select',\r\n    SOURCE: 'source',\r\n    SMALL: 'small',\r\n    SPAN: 'span',\r\n    STRIKE: 'strike',\r\n    STRONG: 'strong',\r\n    STYLE: 'style',\r\n    SUB: 'sub',\r\n    SUMMARY: 'summary',\r\n    SUP: 'sup',\r\n\r\n    TABLE: 'table',\r\n    TBODY: 'tbody',\r\n    TEMPLATE: 'template',\r\n    TEXTAREA: 'textarea',\r\n    TFOOT: 'tfoot',\r\n    TD: 'td',\r\n    TH: 'th',\r\n    THEAD: 'thead',\r\n    TITLE: 'title',\r\n    TR: 'tr',\r\n    TRACK: 'track',\r\n    TT: 'tt',\r\n\r\n    U: 'u',\r\n    UL: 'ul',\r\n\r\n    SVG: 'svg',\r\n\r\n    VAR: 'var',\r\n\r\n    WBR: 'wbr',\r\n\r\n    XMP: 'xmp'\r\n});\r\n\r\nexports.SPECIAL_ELEMENTS = {\r\n    [NS.HTML]: {\r\n        [$.ADDRESS]: true,\r\n        [$.APPLET]: true,\r\n        [$.AREA]: true,\r\n        [$.ARTICLE]: true,\r\n        [$.ASIDE]: true,\r\n        [$.BASE]: true,\r\n        [$.BASEFONT]: true,\r\n        [$.BGSOUND]: true,\r\n        [$.BLOCKQUOTE]: true,\r\n        [$.BODY]: true,\r\n        [$.BR]: true,\r\n        [$.BUTTON]: true,\r\n        [$.CAPTION]: true,\r\n        [$.CENTER]: true,\r\n        [$.COL]: true,\r\n        [$.COLGROUP]: true,\r\n        [$.DD]: true,\r\n        [$.DETAILS]: true,\r\n        [$.DIR]: true,\r\n        [$.DIV]: true,\r\n        [$.DL]: true,\r\n        [$.DT]: true,\r\n        [$.EMBED]: true,\r\n        [$.FIELDSET]: true,\r\n        [$.FIGCAPTION]: true,\r\n        [$.FIGURE]: true,\r\n        [$.FOOTER]: true,\r\n        [$.FORM]: true,\r\n        [$.FRAME]: true,\r\n        [$.FRAMESET]: true,\r\n        [$.H1]: true,\r\n        [$.H2]: true,\r\n        [$.H3]: true,\r\n        [$.H4]: true,\r\n        [$.H5]: true,\r\n        [$.H6]: true,\r\n        [$.HEAD]: true,\r\n        [$.HEADER]: true,\r\n        [$.HGROUP]: true,\r\n        [$.HR]: true,\r\n        [$.HTML]: true,\r\n        [$.IFRAME]: true,\r\n        [$.IMG]: true,\r\n        [$.INPUT]: true,\r\n        [$.LI]: true,\r\n        [$.LINK]: true,\r\n        [$.LISTING]: true,\r\n        [$.MAIN]: true,\r\n        [$.MARQUEE]: true,\r\n        [$.MENU]: true,\r\n        [$.META]: true,\r\n        [$.NAV]: true,\r\n        [$.NOEMBED]: true,\r\n        [$.NOFRAMES]: true,\r\n        [$.NOSCRIPT]: true,\r\n        [$.OBJECT]: true,\r\n        [$.OL]: true,\r\n        [$.P]: true,\r\n        [$.PARAM]: true,\r\n        [$.PLAINTEXT]: true,\r\n        [$.PRE]: true,\r\n        [$.SCRIPT]: true,\r\n        [$.SECTION]: true,\r\n        [$.SELECT]: true,\r\n        [$.SOURCE]: true,\r\n        [$.STYLE]: true,\r\n        [$.SUMMARY]: true,\r\n        [$.TABLE]: true,\r\n        [$.TBODY]: true,\r\n        [$.TD]: true,\r\n        [$.TEMPLATE]: true,\r\n        [$.TEXTAREA]: true,\r\n        [$.TFOOT]: true,\r\n        [$.TH]: true,\r\n        [$.THEAD]: true,\r\n        [$.TITLE]: true,\r\n        [$.TR]: true,\r\n        [$.TRACK]: true,\r\n        [$.UL]: true,\r\n        [$.WBR]: true,\r\n        [$.XMP]: true\r\n    },\r\n    [NS.MATHML]: {\r\n        [$.MI]: true,\r\n        [$.MO]: true,\r\n        [$.MN]: true,\r\n        [$.MS]: true,\r\n        [$.MTEXT]: true,\r\n        [$.ANNOTATION_XML]: true\r\n    },\r\n    [NS.SVG]: {\r\n        [$.TITLE]: true,\r\n        [$.FOREIGN_OBJECT]: true,\r\n        [$.DESC]: true\r\n    }\r\n};\r\n", "'use strict';\r\n\r\nconst HTML = require('../common/html');\r\n\r\n//Aliases\r\nconst $ = HTML.TAG_NAMES;\r\nconst NS = HTML.NAMESPACES;\r\n\r\n//Element utils\r\n\r\n//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.\r\n//It's faster than using dictionary.\r\nfunction isImpliedEndTagRequired(tn) {\r\n    switch (tn.length) {\r\n        case 1:\r\n            return tn === $.P;\r\n\r\n        case 2:\r\n            return tn === $.RB || tn === $.RP || tn === $.RT || tn === $.DD || tn === $.DT || tn === $.LI;\r\n\r\n        case 3:\r\n            return tn === $.RTC;\r\n\r\n        case 6:\r\n            return tn === $.OPTION;\r\n\r\n        case 8:\r\n            return tn === $.OPTGROUP;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction isImpliedEndTagRequiredThoroughly(tn) {\r\n    switch (tn.length) {\r\n        case 1:\r\n            return tn === $.P;\r\n\r\n        case 2:\r\n            return (\r\n                tn === $.RB ||\r\n                tn === $.RP ||\r\n                tn === $.RT ||\r\n                tn === $.DD ||\r\n                tn === $.DT ||\r\n                tn === $.LI ||\r\n                tn === $.TD ||\r\n                tn === $.TH ||\r\n                tn === $.TR\r\n            );\r\n\r\n        case 3:\r\n            return tn === $.RTC;\r\n\r\n        case 5:\r\n            return tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD;\r\n\r\n        case 6:\r\n            return tn === $.OPTION;\r\n\r\n        case 7:\r\n            return tn === $.CAPTION;\r\n\r\n        case 8:\r\n            return tn === $.OPTGROUP || tn === $.COLGROUP;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction isScopingElement(tn, ns) {\r\n    switch (tn.length) {\r\n        case 2:\r\n            if (tn === $.TD || tn === $.TH) {\r\n                return ns === NS.HTML;\r\n            } else if (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS) {\r\n                return ns === NS.MATHML;\r\n            }\r\n\r\n            break;\r\n\r\n        case 4:\r\n            if (tn === $.HTML) {\r\n                return ns === NS.HTML;\r\n            } else if (tn === $.DESC) {\r\n                return ns === NS.SVG;\r\n            }\r\n\r\n            break;\r\n\r\n        case 5:\r\n            if (tn === $.TABLE) {\r\n                return ns === NS.HTML;\r\n            } else if (tn === $.MTEXT) {\r\n                return ns === NS.MATHML;\r\n            } else if (tn === $.TITLE) {\r\n                return ns === NS.SVG;\r\n            }\r\n\r\n            break;\r\n\r\n        case 6:\r\n            return (tn === $.APPLET || tn === $.OBJECT) && ns === NS.HTML;\r\n\r\n        case 7:\r\n            return (tn === $.CAPTION || tn === $.MARQUEE) && ns === NS.HTML;\r\n\r\n        case 8:\r\n            return tn === $.TEMPLATE && ns === NS.HTML;\r\n\r\n        case 13:\r\n            return tn === $.FOREIGN_OBJECT && ns === NS.SVG;\r\n\r\n        case 14:\r\n            return tn === $.ANNOTATION_XML && ns === NS.MATHML;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n//Stack of open elements\r\nclass OpenElementStack {\r\n    constructor(document, treeAdapter) {\r\n        this.stackTop = -1;\r\n        this.items = [];\r\n        this.current = document;\r\n        this.currentTagName = null;\r\n        this.currentTmplContent = null;\r\n        this.tmplCount = 0;\r\n        this.treeAdapter = treeAdapter;\r\n    }\r\n\r\n    //Index of element\r\n    _indexOf(element) {\r\n        let idx = -1;\r\n\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            if (this.items[i] === element) {\r\n                idx = i;\r\n                break;\r\n            }\r\n        }\r\n        return idx;\r\n    }\r\n\r\n    //Update current element\r\n    _isInTemplate() {\r\n        return this.currentTagName === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\r\n    }\r\n\r\n    _updateCurrentElement() {\r\n        this.current = this.items[this.stackTop];\r\n        this.currentTagName = this.current && this.treeAdapter.getTagName(this.current);\r\n\r\n        this.currentTmplContent = this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : null;\r\n    }\r\n\r\n    //Mutations\r\n    push(element) {\r\n        this.items[++this.stackTop] = element;\r\n        this._updateCurrentElement();\r\n\r\n        if (this._isInTemplate()) {\r\n            this.tmplCount++;\r\n        }\r\n    }\r\n\r\n    pop() {\r\n        this.stackTop--;\r\n\r\n        if (this.tmplCount > 0 && this._isInTemplate()) {\r\n            this.tmplCount--;\r\n        }\r\n\r\n        this._updateCurrentElement();\r\n    }\r\n\r\n    replace(oldElement, newElement) {\r\n        const idx = this._indexOf(oldElement);\r\n\r\n        this.items[idx] = newElement;\r\n\r\n        if (idx === this.stackTop) {\r\n            this._updateCurrentElement();\r\n        }\r\n    }\r\n\r\n    insertAfter(referenceElement, newElement) {\r\n        const insertionIdx = this._indexOf(referenceElement) + 1;\r\n\r\n        this.items.splice(insertionIdx, 0, newElement);\r\n\r\n        if (insertionIdx === ++this.stackTop) {\r\n            this._updateCurrentElement();\r\n        }\r\n    }\r\n\r\n    popUntilTagNamePopped(tagName) {\r\n        while (this.stackTop > -1) {\r\n            const tn = this.currentTagName;\r\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\r\n\r\n            this.pop();\r\n\r\n            if (tn === tagName && ns === NS.HTML) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    popUntilElementPopped(element) {\r\n        while (this.stackTop > -1) {\r\n            const poppedElement = this.current;\r\n\r\n            this.pop();\r\n\r\n            if (poppedElement === element) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    popUntilNumberedHeaderPopped() {\r\n        while (this.stackTop > -1) {\r\n            const tn = this.currentTagName;\r\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\r\n\r\n            this.pop();\r\n\r\n            if (\r\n                tn === $.H1 ||\r\n                tn === $.H2 ||\r\n                tn === $.H3 ||\r\n                tn === $.H4 ||\r\n                tn === $.H5 ||\r\n                (tn === $.H6 && ns === NS.HTML)\r\n            ) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    popUntilTableCellPopped() {\r\n        while (this.stackTop > -1) {\r\n            const tn = this.currentTagName;\r\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\r\n\r\n            this.pop();\r\n\r\n            if (tn === $.TD || (tn === $.TH && ns === NS.HTML)) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    popAllUpToHtmlElement() {\r\n        //NOTE: here we assume that root <html> element is always first in the open element stack, so\r\n        //we perform this fast stack clean up.\r\n        this.stackTop = 0;\r\n        this._updateCurrentElement();\r\n    }\r\n\r\n    clearBackToTableContext() {\r\n        while (\r\n            (this.currentTagName !== $.TABLE && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML) ||\r\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\r\n        ) {\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    clearBackToTableBodyContext() {\r\n        while (\r\n            (this.currentTagName !== $.TBODY &&\r\n                this.currentTagName !== $.TFOOT &&\r\n                this.currentTagName !== $.THEAD &&\r\n                this.currentTagName !== $.TEMPLATE &&\r\n                this.currentTagName !== $.HTML) ||\r\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\r\n        ) {\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    clearBackToTableRowContext() {\r\n        while (\r\n            (this.currentTagName !== $.TR && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML) ||\r\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\r\n        ) {\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    remove(element) {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            if (this.items[i] === element) {\r\n                this.items.splice(i, 1);\r\n                this.stackTop--;\r\n                this._updateCurrentElement();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    //Search\r\n    tryPeekProperlyNestedBodyElement() {\r\n        //Properly nested <body> element (should be second element in stack).\r\n        const element = this.items[1];\r\n\r\n        return element && this.treeAdapter.getTagName(element) === $.BODY ? element : null;\r\n    }\r\n\r\n    contains(element) {\r\n        return this._indexOf(element) > -1;\r\n    }\r\n\r\n    getCommonAncestor(element) {\r\n        let elementIdx = this._indexOf(element);\r\n\r\n        return --elementIdx >= 0 ? this.items[elementIdx] : null;\r\n    }\r\n\r\n    isRootHtmlElementCurrent() {\r\n        return this.stackTop === 0 && this.currentTagName === $.HTML;\r\n    }\r\n\r\n    //Element in scope\r\n    hasInScope(tagName) {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            const tn = this.treeAdapter.getTagName(this.items[i]);\r\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\r\n\r\n            if (tn === tagName && ns === NS.HTML) {\r\n                return true;\r\n            }\r\n\r\n            if (isScopingElement(tn, ns)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    hasNumberedHeaderInScope() {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            const tn = this.treeAdapter.getTagName(this.items[i]);\r\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\r\n\r\n            if (\r\n                (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) &&\r\n                ns === NS.HTML\r\n            ) {\r\n                return true;\r\n            }\r\n\r\n            if (isScopingElement(tn, ns)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    hasInListItemScope(tagName) {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            const tn = this.treeAdapter.getTagName(this.items[i]);\r\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\r\n\r\n            if (tn === tagName && ns === NS.HTML) {\r\n                return true;\r\n            }\r\n\r\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || isScopingElement(tn, ns)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    hasInButtonScope(tagName) {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            const tn = this.treeAdapter.getTagName(this.items[i]);\r\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\r\n\r\n            if (tn === tagName && ns === NS.HTML) {\r\n                return true;\r\n            }\r\n\r\n            if ((tn === $.BUTTON && ns === NS.HTML) || isScopingElement(tn, ns)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    hasInTableScope(tagName) {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            const tn = this.treeAdapter.getTagName(this.items[i]);\r\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\r\n\r\n            if (ns !== NS.HTML) {\r\n                continue;\r\n            }\r\n\r\n            if (tn === tagName) {\r\n                return true;\r\n            }\r\n\r\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    hasTableBodyContextInTableScope() {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            const tn = this.treeAdapter.getTagName(this.items[i]);\r\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\r\n\r\n            if (ns !== NS.HTML) {\r\n                continue;\r\n            }\r\n\r\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\r\n                return true;\r\n            }\r\n\r\n            if (tn === $.TABLE || tn === $.HTML) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    hasInSelectScope(tagName) {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            const tn = this.treeAdapter.getTagName(this.items[i]);\r\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\r\n\r\n            if (ns !== NS.HTML) {\r\n                continue;\r\n            }\r\n\r\n            if (tn === tagName) {\r\n                return true;\r\n            }\r\n\r\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    //Implied end tags\r\n    generateImpliedEndTags() {\r\n        while (isImpliedEndTagRequired(this.currentTagName)) {\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    generateImpliedEndTagsThoroughly() {\r\n        while (isImpliedEndTagRequiredThoroughly(this.currentTagName)) {\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    generateImpliedEndTagsWithExclusion(exclusionTagName) {\r\n        while (isImpliedEndTagRequired(this.currentTagName) && this.currentTagName !== exclusionTagName) {\r\n            this.pop();\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = OpenElementStack;\r\n", "'use strict';\r\n\r\n//Const\r\nconst NOAH_ARK_CAPACITY = 3;\r\n\r\n//List of formatting elements\r\nclass FormattingElementList {\r\n    constructor(treeAdapter) {\r\n        this.length = 0;\r\n        this.entries = [];\r\n        this.treeAdapter = treeAdapter;\r\n        this.bookmark = null;\r\n    }\r\n\r\n    //Noah Ark's condition\r\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\r\n    //lightweight heuristics without thorough attributes check.\r\n    _getNoahArkConditionCandidates(newElement) {\r\n        const candidates = [];\r\n\r\n        if (this.length >= NOAH_ARK_CAPACITY) {\r\n            const neAttrsLength = this.treeAdapter.getAttrList(newElement).length;\r\n            const neTagName = this.treeAdapter.getTagName(newElement);\r\n            const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\r\n\r\n            for (let i = this.length - 1; i >= 0; i--) {\r\n                const entry = this.entries[i];\r\n\r\n                if (entry.type === FormattingElementList.MARKER_ENTRY) {\r\n                    break;\r\n                }\r\n\r\n                const element = entry.element;\r\n                const elementAttrs = this.treeAdapter.getAttrList(element);\r\n\r\n                const isCandidate =\r\n                    this.treeAdapter.getTagName(element) === neTagName &&\r\n                    this.treeAdapter.getNamespaceURI(element) === neNamespaceURI &&\r\n                    elementAttrs.length === neAttrsLength;\r\n\r\n                if (isCandidate) {\r\n                    candidates.push({ idx: i, attrs: elementAttrs });\r\n                }\r\n            }\r\n        }\r\n\r\n        return candidates.length < NOAH_ARK_CAPACITY ? [] : candidates;\r\n    }\r\n\r\n    _ensureNoahArkCondition(newElement) {\r\n        const candidates = this._getNoahArkConditionCandidates(newElement);\r\n        let cLength = candidates.length;\r\n\r\n        if (cLength) {\r\n            const neAttrs = this.treeAdapter.getAttrList(newElement);\r\n            const neAttrsLength = neAttrs.length;\r\n            const neAttrsMap = Object.create(null);\r\n\r\n            //NOTE: build attrs map for the new element so we can perform fast lookups\r\n            for (let i = 0; i < neAttrsLength; i++) {\r\n                const neAttr = neAttrs[i];\r\n\r\n                neAttrsMap[neAttr.name] = neAttr.value;\r\n            }\r\n\r\n            for (let i = 0; i < neAttrsLength; i++) {\r\n                for (let j = 0; j < cLength; j++) {\r\n                    const cAttr = candidates[j].attrs[i];\r\n\r\n                    if (neAttrsMap[cAttr.name] !== cAttr.value) {\r\n                        candidates.splice(j, 1);\r\n                        cLength--;\r\n                    }\r\n\r\n                    if (candidates.length < NOAH_ARK_CAPACITY) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            //NOTE: remove bottommost candidates until Noah's Ark condition will not be met\r\n            for (let i = cLength - 1; i >= NOAH_ARK_CAPACITY - 1; i--) {\r\n                this.entries.splice(candidates[i].idx, 1);\r\n                this.length--;\r\n            }\r\n        }\r\n    }\r\n\r\n    //Mutations\r\n    insertMarker() {\r\n        this.entries.push({ type: FormattingElementList.MARKER_ENTRY });\r\n        this.length++;\r\n    }\r\n\r\n    pushElement(element, token) {\r\n        this._ensureNoahArkCondition(element);\r\n\r\n        this.entries.push({\r\n            type: FormattingElementList.ELEMENT_ENTRY,\r\n            element: element,\r\n            token: token\r\n        });\r\n\r\n        this.length++;\r\n    }\r\n\r\n    insertElementAfterBookmark(element, token) {\r\n        let bookmarkIdx = this.length - 1;\r\n\r\n        for (; bookmarkIdx >= 0; bookmarkIdx--) {\r\n            if (this.entries[bookmarkIdx] === this.bookmark) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.entries.splice(bookmarkIdx + 1, 0, {\r\n            type: FormattingElementList.ELEMENT_ENTRY,\r\n            element: element,\r\n            token: token\r\n        });\r\n\r\n        this.length++;\r\n    }\r\n\r\n    removeEntry(entry) {\r\n        for (let i = this.length - 1; i >= 0; i--) {\r\n            if (this.entries[i] === entry) {\r\n                this.entries.splice(i, 1);\r\n                this.length--;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    clearToLastMarker() {\r\n        while (this.length) {\r\n            const entry = this.entries.pop();\r\n\r\n            this.length--;\r\n\r\n            if (entry.type === FormattingElementList.MARKER_ENTRY) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    //Search\r\n    getElementEntryInScopeWithTagName(tagName) {\r\n        for (let i = this.length - 1; i >= 0; i--) {\r\n            const entry = this.entries[i];\r\n\r\n            if (entry.type === FormattingElementList.MARKER_ENTRY) {\r\n                return null;\r\n            }\r\n\r\n            if (this.treeAdapter.getTagName(entry.element) === tagName) {\r\n                return entry;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getElementEntry(element) {\r\n        for (let i = this.length - 1; i >= 0; i--) {\r\n            const entry = this.entries[i];\r\n\r\n            if (entry.type === FormattingElementList.ELEMENT_ENTRY && entry.element === element) {\r\n                return entry;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\n//Entry types\r\nFormattingElementList.MARKER_ENTRY = 'MARKER_ENTRY';\r\nFormattingElementList.ELEMENT_ENTRY = 'ELEMENT_ENTRY';\r\n\r\nmodule.exports = FormattingElementList;\r\n", "'use strict';\r\n\r\nclass Mixin {\r\n    constructor(host) {\r\n        const originalMethods = {};\r\n        const overriddenMethods = this._getOverriddenMethods(this, originalMethods);\r\n\r\n        for (const key of Object.keys(overriddenMethods)) {\r\n            if (typeof overriddenMethods[key] === 'function') {\r\n                originalMethods[key] = host[key];\r\n                host[key] = overriddenMethods[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    _getOverriddenMethods() {\r\n        throw new Error('Not implemented');\r\n    }\r\n}\r\n\r\nMixin.install = function(host, Ctor, opts) {\r\n    if (!host.__mixins) {\r\n        host.__mixins = [];\r\n    }\r\n\r\n    for (let i = 0; i < host.__mixins.length; i++) {\r\n        if (host.__mixins[i].constructor === Ctor) {\r\n            return host.__mixins[i];\r\n        }\r\n    }\r\n\r\n    const mixin = new Ctor(host, opts);\r\n\r\n    host.__mixins.push(mixin);\r\n\r\n    return mixin;\r\n};\r\n\r\nmodule.exports = Mixin;\r\n", "'use strict';\r\n\r\nconst Mixin = require('../../utils/mixin');\r\n\r\nclass PositionTrackingPreprocessorMixin extends Mixin {\r\n    constructor(preprocessor) {\r\n        super(preprocessor);\r\n\r\n        this.preprocessor = preprocessor;\r\n        this.isEol = false;\r\n        this.lineStartPos = 0;\r\n        this.droppedBufferSize = 0;\r\n\r\n        this.offset = 0;\r\n        this.col = 0;\r\n        this.line = 1;\r\n    }\r\n\r\n    _getOverriddenMethods(mxn, orig) {\r\n        return {\r\n            advance() {\r\n                const pos = this.pos + 1;\r\n                const ch = this.html[pos];\r\n\r\n                //NOTE: LF should be in the last column of the line\r\n                if (mxn.isEol) {\r\n                    mxn.isEol = false;\r\n                    mxn.line++;\r\n                    mxn.lineStartPos = pos;\r\n                }\r\n\r\n                if (ch === '\\n' || (ch === '\\r' && this.html[pos + 1] !== '\\n')) {\r\n                    mxn.isEol = true;\r\n                }\r\n\r\n                mxn.col = pos - mxn.lineStartPos + 1;\r\n                mxn.offset = mxn.droppedBufferSize + pos;\r\n\r\n                return orig.advance.call(this);\r\n            },\r\n\r\n            retreat() {\r\n                orig.retreat.call(this);\r\n\r\n                mxn.isEol = false;\r\n                mxn.col = this.pos - mxn.lineStartPos + 1;\r\n            },\r\n\r\n            dropParsedChunk() {\r\n                const prevPos = this.pos;\r\n\r\n                orig.dropParsedChunk.call(this);\r\n\r\n                const reduction = prevPos - this.pos;\r\n\r\n                mxn.lineStartPos -= reduction;\r\n                mxn.droppedBufferSize += reduction;\r\n                mxn.offset = mxn.droppedBufferSize + this.pos;\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\nmodule.exports = PositionTrackingPreprocessorMixin;\r\n", "'use strict';\r\n\r\nconst Mixin = require('../../utils/mixin');\r\nconst Tokenizer = require('../../tokenizer');\r\nconst PositionTrackingPreprocessorMixin = require('../position-tracking/preprocessor-mixin');\r\n\r\nclass LocationInfoTokenizerMixin extends Mixin {\r\n    constructor(tokenizer) {\r\n        super(tokenizer);\r\n\r\n        this.tokenizer = tokenizer;\r\n        this.posTracker = Mixin.install(tokenizer.preprocessor, PositionTrackingPreprocessorMixin);\r\n        this.currentAttrLocation = null;\r\n        this.ctLoc = null;\r\n    }\r\n\r\n    _getCurrentLocation() {\r\n        return {\r\n            startLine: this.posTracker.line,\r\n            startCol: this.posTracker.col,\r\n            startOffset: this.posTracker.offset,\r\n            endLine: -1,\r\n            endCol: -1,\r\n            endOffset: -1\r\n        };\r\n    }\r\n\r\n    _attachCurrentAttrLocationInfo() {\r\n        this.currentAttrLocation.endLine = this.posTracker.line;\r\n        this.currentAttrLocation.endCol = this.posTracker.col;\r\n        this.currentAttrLocation.endOffset = this.posTracker.offset;\r\n\r\n        const currentToken = this.tokenizer.currentToken;\r\n        const currentAttr = this.tokenizer.currentAttr;\r\n\r\n        if (!currentToken.location.attrs) {\r\n            currentToken.location.attrs = Object.create(null);\r\n        }\r\n\r\n        currentToken.location.attrs[currentAttr.name] = this.currentAttrLocation;\r\n    }\r\n\r\n    _getOverriddenMethods(mxn, orig) {\r\n        const methods = {\r\n            _createStartTagToken() {\r\n                orig._createStartTagToken.call(this);\r\n                this.currentToken.location = mxn.ctLoc;\r\n            },\r\n\r\n            _createEndTagToken() {\r\n                orig._createEndTagToken.call(this);\r\n                this.currentToken.location = mxn.ctLoc;\r\n            },\r\n\r\n            _createCommentToken() {\r\n                orig._createCommentToken.call(this);\r\n                this.currentToken.location = mxn.ctLoc;\r\n            },\r\n\r\n            _createDoctypeToken(initialName) {\r\n                orig._createDoctypeToken.call(this, initialName);\r\n                this.currentToken.location = mxn.ctLoc;\r\n            },\r\n\r\n            _createCharacterToken(type, ch) {\r\n                orig._createCharacterToken.call(this, type, ch);\r\n                this.currentCharacterToken.location = mxn.ctLoc;\r\n            },\r\n\r\n            _createEOFToken() {\r\n                orig._createEOFToken.call(this);\r\n                this.currentToken.location = mxn._getCurrentLocation();\r\n            },\r\n\r\n            _createAttr(attrNameFirstCh) {\r\n                orig._createAttr.call(this, attrNameFirstCh);\r\n                mxn.currentAttrLocation = mxn._getCurrentLocation();\r\n            },\r\n\r\n            _leaveAttrName(toState) {\r\n                orig._leaveAttrName.call(this, toState);\r\n                mxn._attachCurrentAttrLocationInfo();\r\n            },\r\n\r\n            _leaveAttrValue(toState) {\r\n                orig._leaveAttrValue.call(this, toState);\r\n                mxn._attachCurrentAttrLocationInfo();\r\n            },\r\n\r\n            _emitCurrentToken() {\r\n                const ctLoc = this.currentToken.location;\r\n\r\n                //NOTE: if we have pending character token make it's end location equal to the\r\n                //current token's start location.\r\n                if (this.currentCharacterToken) {\r\n                    this.currentCharacterToken.location.endLine = ctLoc.startLine;\r\n                    this.currentCharacterToken.location.endCol = ctLoc.startCol;\r\n                    this.currentCharacterToken.location.endOffset = ctLoc.startOffset;\r\n                }\r\n\r\n                if (this.currentToken.type === Tokenizer.EOF_TOKEN) {\r\n                    ctLoc.endLine = ctLoc.startLine;\r\n                    ctLoc.endCol = ctLoc.startCol;\r\n                    ctLoc.endOffset = ctLoc.startOffset;\r\n                } else {\r\n                    ctLoc.endLine = mxn.posTracker.line;\r\n                    ctLoc.endCol = mxn.posTracker.col + 1;\r\n                    ctLoc.endOffset = mxn.posTracker.offset + 1;\r\n                }\r\n\r\n                orig._emitCurrentToken.call(this);\r\n            },\r\n\r\n            _emitCurrentCharacterToken() {\r\n                const ctLoc = this.currentCharacterToken && this.currentCharacterToken.location;\r\n\r\n                //NOTE: if we have character token and it's location wasn't set in the _emitCurrentToken(),\r\n                //then set it's location at the current preprocessor position.\r\n                //We don't need to increment preprocessor position, since character token\r\n                //emission is always forced by the start of the next character token here.\r\n                //So, we already have advanced position.\r\n                if (ctLoc && ctLoc.endOffset === -1) {\r\n                    ctLoc.endLine = mxn.posTracker.line;\r\n                    ctLoc.endCol = mxn.posTracker.col;\r\n                    ctLoc.endOffset = mxn.posTracker.offset;\r\n                }\r\n\r\n                orig._emitCurrentCharacterToken.call(this);\r\n            }\r\n        };\r\n\r\n        //NOTE: patch initial states for each mode to obtain token start position\r\n        Object.keys(Tokenizer.MODE).forEach(modeName => {\r\n            const state = Tokenizer.MODE[modeName];\r\n\r\n            methods[state] = function(cp) {\r\n                mxn.ctLoc = mxn._getCurrentLocation();\r\n                orig[state].call(this, cp);\r\n            };\r\n        });\r\n\r\n        return methods;\r\n    }\r\n}\r\n\r\nmodule.exports = LocationInfoTokenizerMixin;\r\n", "'use strict';\r\n\r\nconst Mixin = require('../../utils/mixin');\r\n\r\nclass LocationInfoOpenElementStackMixin extends Mixin {\r\n    constructor(stack, opts) {\r\n        super(stack);\r\n\r\n        this.onItemPop = opts.onItemPop;\r\n    }\r\n\r\n    _getOverriddenMethods(mxn, orig) {\r\n        return {\r\n            pop() {\r\n                mxn.onItemPop(this.current);\r\n                orig.pop.call(this);\r\n            },\r\n\r\n            popAllUpToHtmlElement() {\r\n                for (let i = this.stackTop; i > 0; i--) {\r\n                    mxn.onItemPop(this.items[i]);\r\n                }\r\n\r\n                orig.popAllUpToHtmlElement.call(this);\r\n            },\r\n\r\n            remove(element) {\r\n                mxn.onItemPop(this.current);\r\n                orig.remove.call(this, element);\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\nmodule.exports = LocationInfoOpenElementStackMixin;\r\n", "'use strict';\r\n\r\nconst Mixin = require('../../utils/mixin');\r\nconst Tokenizer = require('../../tokenizer');\r\nconst LocationInfoTokenizerMixin = require('./tokenizer-mixin');\r\nconst LocationInfoOpenElementStackMixin = require('./open-element-stack-mixin');\r\nconst HTML = require('../../common/html');\r\n\r\n//Aliases\r\nconst $ = HTML.TAG_NAMES;\r\n\r\nclass LocationInfoParserMixin extends Mixin {\r\n    constructor(parser) {\r\n        super(parser);\r\n\r\n        this.parser = parser;\r\n        this.treeAdapter = this.parser.treeAdapter;\r\n        this.posTracker = null;\r\n        this.lastStartTagToken = null;\r\n        this.lastFosterParentingLocation = null;\r\n        this.currentToken = null;\r\n    }\r\n\r\n    _setStartLocation(element) {\r\n        let loc = null;\r\n\r\n        if (this.lastStartTagToken) {\r\n            loc = Object.assign({}, this.lastStartTagToken.location);\r\n            loc.startTag = this.lastStartTagToken.location;\r\n        }\r\n\r\n        this.treeAdapter.setNodeSourceCodeLocation(element, loc);\r\n    }\r\n\r\n    _setEndLocation(element, closingToken) {\r\n        const loc = this.treeAdapter.getNodeSourceCodeLocation(element);\r\n\r\n        if (loc) {\r\n            if (closingToken.location) {\r\n                const ctLoc = closingToken.location;\r\n                const tn = this.treeAdapter.getTagName(element);\r\n\r\n                // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\r\n                // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\r\n                const isClosingEndTag = closingToken.type === Tokenizer.END_TAG_TOKEN && tn === closingToken.tagName;\r\n                const endLoc = {};\r\n                if (isClosingEndTag) {\r\n                    endLoc.endTag = Object.assign({}, ctLoc);\r\n                    endLoc.endLine = ctLoc.endLine;\r\n                    endLoc.endCol = ctLoc.endCol;\r\n                    endLoc.endOffset = ctLoc.endOffset;\r\n                } else {\r\n                    endLoc.endLine = ctLoc.startLine;\r\n                    endLoc.endCol = ctLoc.startCol;\r\n                    endLoc.endOffset = ctLoc.startOffset;\r\n                }\r\n\r\n                this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\r\n            }\r\n        }\r\n    }\r\n\r\n    _getOverriddenMethods(mxn, orig) {\r\n        return {\r\n            _bootstrap(document, fragmentContext) {\r\n                orig._bootstrap.call(this, document, fragmentContext);\r\n\r\n                mxn.lastStartTagToken = null;\r\n                mxn.lastFosterParentingLocation = null;\r\n                mxn.currentToken = null;\r\n\r\n                const tokenizerMixin = Mixin.install(this.tokenizer, LocationInfoTokenizerMixin);\r\n\r\n                mxn.posTracker = tokenizerMixin.posTracker;\r\n\r\n                Mixin.install(this.openElements, LocationInfoOpenElementStackMixin, {\r\n                    onItemPop: function(element) {\r\n                        mxn._setEndLocation(element, mxn.currentToken);\r\n                    }\r\n                });\r\n            },\r\n\r\n            _runParsingLoop(scriptHandler) {\r\n                orig._runParsingLoop.call(this, scriptHandler);\r\n\r\n                // NOTE: generate location info for elements\r\n                // that remains on open element stack\r\n                for (let i = this.openElements.stackTop; i >= 0; i--) {\r\n                    mxn._setEndLocation(this.openElements.items[i], mxn.currentToken);\r\n                }\r\n            },\r\n\r\n            //Token processing\r\n            _processTokenInForeignContent(token) {\r\n                mxn.currentToken = token;\r\n                orig._processTokenInForeignContent.call(this, token);\r\n            },\r\n\r\n            _processToken(token) {\r\n                mxn.currentToken = token;\r\n                orig._processToken.call(this, token);\r\n\r\n                //NOTE: <body> and <html> are never popped from the stack, so we need to updated\r\n                //their end location explicitly.\r\n                const requireExplicitUpdate =\r\n                    token.type === Tokenizer.END_TAG_TOKEN &&\r\n                    (token.tagName === $.HTML || (token.tagName === $.BODY && this.openElements.hasInScope($.BODY)));\r\n\r\n                if (requireExplicitUpdate) {\r\n                    for (let i = this.openElements.stackTop; i >= 0; i--) {\r\n                        const element = this.openElements.items[i];\r\n\r\n                        if (this.treeAdapter.getTagName(element) === token.tagName) {\r\n                            mxn._setEndLocation(element, token);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n\r\n            //Doctype\r\n            _setDocumentType(token) {\r\n                orig._setDocumentType.call(this, token);\r\n\r\n                const documentChildren = this.treeAdapter.getChildNodes(this.document);\r\n                const cnLength = documentChildren.length;\r\n\r\n                for (let i = 0; i < cnLength; i++) {\r\n                    const node = documentChildren[i];\r\n\r\n                    if (this.treeAdapter.isDocumentTypeNode(node)) {\r\n                        this.treeAdapter.setNodeSourceCodeLocation(node, token.location);\r\n                        break;\r\n                    }\r\n                }\r\n            },\r\n\r\n            //Elements\r\n            _attachElementToTree(element) {\r\n                //NOTE: _attachElementToTree is called from _appendElement, _insertElement and _insertTemplate methods.\r\n                //So we will use token location stored in this methods for the element.\r\n                mxn._setStartLocation(element);\r\n                mxn.lastStartTagToken = null;\r\n                orig._attachElementToTree.call(this, element);\r\n            },\r\n\r\n            _appendElement(token, namespaceURI) {\r\n                mxn.lastStartTagToken = token;\r\n                orig._appendElement.call(this, token, namespaceURI);\r\n            },\r\n\r\n            _insertElement(token, namespaceURI) {\r\n                mxn.lastStartTagToken = token;\r\n                orig._insertElement.call(this, token, namespaceURI);\r\n            },\r\n\r\n            _insertTemplate(token) {\r\n                mxn.lastStartTagToken = token;\r\n                orig._insertTemplate.call(this, token);\r\n\r\n                const tmplContent = this.treeAdapter.getTemplateContent(this.openElements.current);\r\n\r\n                this.treeAdapter.setNodeSourceCodeLocation(tmplContent, null);\r\n            },\r\n\r\n            _insertFakeRootElement() {\r\n                orig._insertFakeRootElement.call(this);\r\n                this.treeAdapter.setNodeSourceCodeLocation(this.openElements.current, null);\r\n            },\r\n\r\n            //Comments\r\n            _appendCommentNode(token, parent) {\r\n                orig._appendCommentNode.call(this, token, parent);\r\n\r\n                const children = this.treeAdapter.getChildNodes(parent);\r\n                const commentNode = children[children.length - 1];\r\n\r\n                this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\r\n            },\r\n\r\n            //Text\r\n            _findFosterParentingLocation() {\r\n                //NOTE: store last foster parenting location, so we will be able to find inserted text\r\n                //in case of foster parenting\r\n                mxn.lastFosterParentingLocation = orig._findFosterParentingLocation.call(this);\r\n\r\n                return mxn.lastFosterParentingLocation;\r\n            },\r\n\r\n            _insertCharacters(token) {\r\n                orig._insertCharacters.call(this, token);\r\n\r\n                const hasFosterParent = this._shouldFosterParentOnInsertion();\r\n\r\n                const parent =\r\n                    (hasFosterParent && mxn.lastFosterParentingLocation.parent) ||\r\n                    this.openElements.currentTmplContent ||\r\n                    this.openElements.current;\r\n\r\n                const siblings = this.treeAdapter.getChildNodes(parent);\r\n\r\n                const textNodeIdx =\r\n                    hasFosterParent && mxn.lastFosterParentingLocation.beforeElement\r\n                        ? siblings.indexOf(mxn.lastFosterParentingLocation.beforeElement) - 1\r\n                        : siblings.length - 1;\r\n\r\n                const textNode = siblings[textNodeIdx];\r\n\r\n                //NOTE: if we have location assigned by another token, then just update end position\r\n                const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\r\n\r\n                if (tnLoc) {\r\n                    const { endLine, endCol, endOffset } = token.location;\r\n                    this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\r\n                } else {\r\n                    this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\nmodule.exports = LocationInfoParserMixin;\r\n", "'use strict';\r\n\r\nconst Mixin = require('../../utils/mixin');\r\n\r\nclass ErrorReportingMixinBase extends Mixin {\r\n    constructor(host, opts) {\r\n        super(host);\r\n\r\n        this.posTracker = null;\r\n        this.onParseError = opts.onParseError;\r\n    }\r\n\r\n    _setErrorLocation(err) {\r\n        err.startLine = err.endLine = this.posTracker.line;\r\n        err.startCol = err.endCol = this.posTracker.col;\r\n        err.startOffset = err.endOffset = this.posTracker.offset;\r\n    }\r\n\r\n    _reportError(code) {\r\n        const err = {\r\n            code: code,\r\n            startLine: -1,\r\n            startCol: -1,\r\n            startOffset: -1,\r\n            endLine: -1,\r\n            endCol: -1,\r\n            endOffset: -1\r\n        };\r\n\r\n        this._setErrorLocation(err);\r\n        this.onParseError(err);\r\n    }\r\n\r\n    _getOverriddenMethods(mxn) {\r\n        return {\r\n            _err(code) {\r\n                mxn._reportError(code);\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\nmodule.exports = ErrorReportingMixinBase;\r\n", "'use strict';\r\n\r\nconst ErrorReportingMixinBase = require('./mixin-base');\r\nconst PositionTrackingPreprocessorMixin = require('../position-tracking/preprocessor-mixin');\r\nconst Mixin = require('../../utils/mixin');\r\n\r\nclass ErrorReportingPreprocessorMixin extends ErrorReportingMixinBase {\r\n    constructor(preprocessor, opts) {\r\n        super(preprocessor, opts);\r\n\r\n        this.posTracker = Mixin.install(preprocessor, PositionTrackingPreprocessorMixin);\r\n        this.lastErrOffset = -1;\r\n    }\r\n\r\n    _reportError(code) {\r\n        //NOTE: avoid reporting error twice on advance/retreat\r\n        if (this.lastErrOffset !== this.posTracker.offset) {\r\n            this.lastErrOffset = this.posTracker.offset;\r\n            super._reportError(code);\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = ErrorReportingPreprocessorMixin;\r\n", "'use strict';\r\n\r\nconst ErrorReportingMixinBase = require('./mixin-base');\r\nconst ErrorReportingPreprocessorMixin = require('./preprocessor-mixin');\r\nconst Mixin = require('../../utils/mixin');\r\n\r\nclass ErrorReportingTokenizerMixin extends ErrorReportingMixinBase {\r\n    constructor(tokenizer, opts) {\r\n        super(tokenizer, opts);\r\n\r\n        const preprocessorMixin = Mixin.install(tokenizer.preprocessor, ErrorReportingPreprocessorMixin, opts);\r\n\r\n        this.posTracker = preprocessorMixin.posTracker;\r\n    }\r\n}\r\n\r\nmodule.exports = ErrorReportingTokenizerMixin;\r\n", "'use strict';\r\n\r\nconst ErrorReportingMixinBase = require('./mixin-base');\r\nconst ErrorReportingTokenizerMixin = require('./tokenizer-mixin');\r\nconst LocationInfoTokenizerMixin = require('../location-info/tokenizer-mixin');\r\nconst Mixin = require('../../utils/mixin');\r\n\r\nclass ErrorReportingParserMixin extends ErrorReportingMixinBase {\r\n    constructor(parser, opts) {\r\n        super(parser, opts);\r\n\r\n        this.opts = opts;\r\n        this.ctLoc = null;\r\n        this.locBeforeToken = false;\r\n    }\r\n\r\n    _setErrorLocation(err) {\r\n        if (this.ctLoc) {\r\n            err.startLine = this.ctLoc.startLine;\r\n            err.startCol = this.ctLoc.startCol;\r\n            err.startOffset = this.ctLoc.startOffset;\r\n\r\n            err.endLine = this.locBeforeToken ? this.ctLoc.startLine : this.ctLoc.endLine;\r\n            err.endCol = this.locBeforeToken ? this.ctLoc.startCol : this.ctLoc.endCol;\r\n            err.endOffset = this.locBeforeToken ? this.ctLoc.startOffset : this.ctLoc.endOffset;\r\n        }\r\n    }\r\n\r\n    _getOverriddenMethods(mxn, orig) {\r\n        return {\r\n            _bootstrap(document, fragmentContext) {\r\n                orig._bootstrap.call(this, document, fragmentContext);\r\n\r\n                Mixin.install(this.tokenizer, ErrorReportingTokenizerMixin, mxn.opts);\r\n                Mixin.install(this.tokenizer, LocationInfoTokenizerMixin);\r\n            },\r\n\r\n            _processInputToken(token) {\r\n                mxn.ctLoc = token.location;\r\n\r\n                orig._processInputToken.call(this, token);\r\n            },\r\n\r\n            _err(code, options) {\r\n                mxn.locBeforeToken = options && options.beforeToken;\r\n                mxn._reportError(code);\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\nmodule.exports = ErrorReportingParserMixin;\r\n", "'use strict';\r\n\r\nconst { DOCUMENT_MODE } = require('../common/html');\r\n\r\n//Node construction\r\nexports.createDocument = function() {\r\n    return {\r\n        nodeName: '#document',\r\n        mode: DOCUMENT_MODE.NO_QUIRKS,\r\n        childNodes: []\r\n    };\r\n};\r\n\r\nexports.createDocumentFragment = function() {\r\n    return {\r\n        nodeName: '#document-fragment',\r\n        childNodes: []\r\n    };\r\n};\r\n\r\nexports.createElement = function(tagName, namespaceURI, attrs) {\r\n    return {\r\n        nodeName: tagName,\r\n        tagName: tagName,\r\n        attrs: attrs,\r\n        namespaceURI: namespaceURI,\r\n        childNodes: [],\r\n        parentNode: null\r\n    };\r\n};\r\n\r\nexports.createCommentNode = function(data) {\r\n    return {\r\n        nodeName: '#comment',\r\n        data: data,\r\n        parentNode: null\r\n    };\r\n};\r\n\r\nconst createTextNode = function(value) {\r\n    return {\r\n        nodeName: '#text',\r\n        value: value,\r\n        parentNode: null\r\n    };\r\n};\r\n\r\n//Tree mutation\r\nconst appendChild = (exports.appendChild = function(parentNode, newNode) {\r\n    parentNode.childNodes.push(newNode);\r\n    newNode.parentNode = parentNode;\r\n});\r\n\r\nconst insertBefore = (exports.insertBefore = function(parentNode, newNode, referenceNode) {\r\n    const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\r\n\r\n    parentNode.childNodes.splice(insertionIdx, 0, newNode);\r\n    newNode.parentNode = parentNode;\r\n});\r\n\r\nexports.setTemplateContent = function(templateElement, contentElement) {\r\n    templateElement.content = contentElement;\r\n};\r\n\r\nexports.getTemplateContent = function(templateElement) {\r\n    return templateElement.content;\r\n};\r\n\r\nexports.setDocumentType = function(document, name, publicId, systemId) {\r\n    let doctypeNode = null;\r\n\r\n    for (let i = 0; i < document.childNodes.length; i++) {\r\n        if (document.childNodes[i].nodeName === '#documentType') {\r\n            doctypeNode = document.childNodes[i];\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (doctypeNode) {\r\n        doctypeNode.name = name;\r\n        doctypeNode.publicId = publicId;\r\n        doctypeNode.systemId = systemId;\r\n    } else {\r\n        appendChild(document, {\r\n            nodeName: '#documentType',\r\n            name: name,\r\n            publicId: publicId,\r\n            systemId: systemId\r\n        });\r\n    }\r\n};\r\n\r\nexports.setDocumentMode = function(document, mode) {\r\n    document.mode = mode;\r\n};\r\n\r\nexports.getDocumentMode = function(document) {\r\n    return document.mode;\r\n};\r\n\r\nexports.detachNode = function(node) {\r\n    if (node.parentNode) {\r\n        const idx = node.parentNode.childNodes.indexOf(node);\r\n\r\n        node.parentNode.childNodes.splice(idx, 1);\r\n        node.parentNode = null;\r\n    }\r\n};\r\n\r\nexports.insertText = function(parentNode, text) {\r\n    if (parentNode.childNodes.length) {\r\n        const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\r\n\r\n        if (prevNode.nodeName === '#text') {\r\n            prevNode.value += text;\r\n            return;\r\n        }\r\n    }\r\n\r\n    appendChild(parentNode, createTextNode(text));\r\n};\r\n\r\nexports.insertTextBefore = function(parentNode, text, referenceNode) {\r\n    const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\r\n\r\n    if (prevNode && prevNode.nodeName === '#text') {\r\n        prevNode.value += text;\r\n    } else {\r\n        insertBefore(parentNode, createTextNode(text), referenceNode);\r\n    }\r\n};\r\n\r\nexports.adoptAttributes = function(recipient, attrs) {\r\n    const recipientAttrsMap = [];\r\n\r\n    for (let i = 0; i < recipient.attrs.length; i++) {\r\n        recipientAttrsMap.push(recipient.attrs[i].name);\r\n    }\r\n\r\n    for (let j = 0; j < attrs.length; j++) {\r\n        if (recipientAttrsMap.indexOf(attrs[j].name) === -1) {\r\n            recipient.attrs.push(attrs[j]);\r\n        }\r\n    }\r\n};\r\n\r\n//Tree traversing\r\nexports.getFirstChild = function(node) {\r\n    return node.childNodes[0];\r\n};\r\n\r\nexports.getChildNodes = function(node) {\r\n    return node.childNodes;\r\n};\r\n\r\nexports.getParentNode = function(node) {\r\n    return node.parentNode;\r\n};\r\n\r\nexports.getAttrList = function(element) {\r\n    return element.attrs;\r\n};\r\n\r\n//Node data\r\nexports.getTagName = function(element) {\r\n    return element.tagName;\r\n};\r\n\r\nexports.getNamespaceURI = function(element) {\r\n    return element.namespaceURI;\r\n};\r\n\r\nexports.getTextNodeContent = function(textNode) {\r\n    return textNode.value;\r\n};\r\n\r\nexports.getCommentNodeContent = function(commentNode) {\r\n    return commentNode.data;\r\n};\r\n\r\nexports.getDocumentTypeNodeName = function(doctypeNode) {\r\n    return doctypeNode.name;\r\n};\r\n\r\nexports.getDocumentTypeNodePublicId = function(doctypeNode) {\r\n    return doctypeNode.publicId;\r\n};\r\n\r\nexports.getDocumentTypeNodeSystemId = function(doctypeNode) {\r\n    return doctypeNode.systemId;\r\n};\r\n\r\n//Node types\r\nexports.isTextNode = function(node) {\r\n    return node.nodeName === '#text';\r\n};\r\n\r\nexports.isCommentNode = function(node) {\r\n    return node.nodeName === '#comment';\r\n};\r\n\r\nexports.isDocumentTypeNode = function(node) {\r\n    return node.nodeName === '#documentType';\r\n};\r\n\r\nexports.isElementNode = function(node) {\r\n    return !!node.tagName;\r\n};\r\n\r\n// Source code location\r\nexports.setNodeSourceCodeLocation = function(node, location) {\r\n    node.sourceCodeLocation = location;\r\n};\r\n\r\nexports.getNodeSourceCodeLocation = function(node) {\r\n    return node.sourceCodeLocation;\r\n};\r\n\r\nexports.updateNodeSourceCodeLocation = function(node, endLocation) {\r\n    node.sourceCodeLocation = Object.assign(node.sourceCodeLocation, endLocation);\r\n};\r\n", "'use strict';\r\n\r\nmodule.exports = function mergeOptions(defaults, options) {\r\n    options = options || Object.create(null);\r\n\r\n    return [defaults, options].reduce((merged, optObj) => {\r\n        Object.keys(optObj).forEach(key => {\r\n            merged[key] = optObj[key];\r\n        });\r\n\r\n        return merged;\r\n    }, Object.create(null));\r\n};\r\n", "'use strict';\r\n\r\nconst { DOCUMENT_MODE } = require('./html');\r\n\r\n//Const\r\nconst VALID_DOCTYPE_NAME = 'html';\r\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\r\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\r\n\r\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\r\n    '+//silmaril//dtd html pro v0r11 19970101//',\r\n    '-//as//dtd html 3.0 aswedit + extensions//',\r\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\r\n    '-//ietf//dtd html 2.0 level 1//',\r\n    '-//ietf//dtd html 2.0 level 2//',\r\n    '-//ietf//dtd html 2.0 strict level 1//',\r\n    '-//ietf//dtd html 2.0 strict level 2//',\r\n    '-//ietf//dtd html 2.0 strict//',\r\n    '-//ietf//dtd html 2.0//',\r\n    '-//ietf//dtd html 2.1e//',\r\n    '-//ietf//dtd html 3.0//',\r\n    '-//ietf//dtd html 3.2 final//',\r\n    '-//ietf//dtd html 3.2//',\r\n    '-//ietf//dtd html 3//',\r\n    '-//ietf//dtd html level 0//',\r\n    '-//ietf//dtd html level 1//',\r\n    '-//ietf//dtd html level 2//',\r\n    '-//ietf//dtd html level 3//',\r\n    '-//ietf//dtd html strict level 0//',\r\n    '-//ietf//dtd html strict level 1//',\r\n    '-//ietf//dtd html strict level 2//',\r\n    '-//ietf//dtd html strict level 3//',\r\n    '-//ietf//dtd html strict//',\r\n    '-//ietf//dtd html//',\r\n    '-//metrius//dtd metrius presentational//',\r\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\r\n    '-//microsoft//dtd internet explorer 2.0 html//',\r\n    '-//microsoft//dtd internet explorer 2.0 tables//',\r\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\r\n    '-//microsoft//dtd internet explorer 3.0 html//',\r\n    '-//microsoft//dtd internet explorer 3.0 tables//',\r\n    '-//netscape comm. corp.//dtd html//',\r\n    '-//netscape comm. corp.//dtd strict html//',\r\n    \"-//o'reilly and associates//dtd html 2.0//\",\r\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\r\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\r\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\r\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\r\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\r\n    '-//spyglass//dtd html 2.0 extended//',\r\n    '-//sun microsystems corp.//dtd hotjava html//',\r\n    '-//sun microsystems corp.//dtd hotjava strict html//',\r\n    '-//w3c//dtd html 3 1995-03-24//',\r\n    '-//w3c//dtd html 3.2 draft//',\r\n    '-//w3c//dtd html 3.2 final//',\r\n    '-//w3c//dtd html 3.2//',\r\n    '-//w3c//dtd html 3.2s draft//',\r\n    '-//w3c//dtd html 4.0 frameset//',\r\n    '-//w3c//dtd html 4.0 transitional//',\r\n    '-//w3c//dtd html experimental 19960712//',\r\n    '-//w3c//dtd html experimental 970421//',\r\n    '-//w3c//dtd w3 html//',\r\n    '-//w3o//dtd w3 html 3.0//',\r\n    '-//webtechs//dtd mozilla html 2.0//',\r\n    '-//webtechs//dtd mozilla html//'\r\n];\r\n\r\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = QUIRKS_MODE_PUBLIC_ID_PREFIXES.concat([\r\n    '-//w3c//dtd html 4.01 frameset//',\r\n    '-//w3c//dtd html 4.01 transitional//'\r\n]);\r\n\r\nconst QUIRKS_MODE_PUBLIC_IDS = ['-//w3o//dtd w3 html strict 3.0//en//', '-/w3c/dtd html 4.0 transitional/en', 'html'];\r\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\r\n\r\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = LIMITED_QUIRKS_PUBLIC_ID_PREFIXES.concat([\r\n    '-//w3c//dtd html 4.01 frameset//',\r\n    '-//w3c//dtd html 4.01 transitional//'\r\n]);\r\n\r\n//Utils\r\nfunction enquoteDoctypeId(id) {\r\n    const quote = id.indexOf('\"') !== -1 ? \"'\" : '\"';\r\n\r\n    return quote + id + quote;\r\n}\r\n\r\nfunction hasPrefix(publicId, prefixes) {\r\n    for (let i = 0; i < prefixes.length; i++) {\r\n        if (publicId.indexOf(prefixes[i]) === 0) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n//API\r\nexports.isConforming = function(token) {\r\n    return (\r\n        token.name === VALID_DOCTYPE_NAME &&\r\n        token.publicId === null &&\r\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID)\r\n    );\r\n};\r\n\r\nexports.getDocumentMode = function(token) {\r\n    if (token.name !== VALID_DOCTYPE_NAME) {\r\n        return DOCUMENT_MODE.QUIRKS;\r\n    }\r\n\r\n    const systemId = token.systemId;\r\n\r\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\r\n        return DOCUMENT_MODE.QUIRKS;\r\n    }\r\n\r\n    let publicId = token.publicId;\r\n\r\n    if (publicId !== null) {\r\n        publicId = publicId.toLowerCase();\r\n\r\n        if (QUIRKS_MODE_PUBLIC_IDS.indexOf(publicId) > -1) {\r\n            return DOCUMENT_MODE.QUIRKS;\r\n        }\r\n\r\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\r\n\r\n        if (hasPrefix(publicId, prefixes)) {\r\n            return DOCUMENT_MODE.QUIRKS;\r\n        }\r\n\r\n        prefixes =\r\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\r\n\r\n        if (hasPrefix(publicId, prefixes)) {\r\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\r\n        }\r\n    }\r\n\r\n    return DOCUMENT_MODE.NO_QUIRKS;\r\n};\r\n\r\nexports.serializeContent = function(name, publicId, systemId) {\r\n    let str = '!DOCTYPE ';\r\n\r\n    if (name) {\r\n        str += name;\r\n    }\r\n\r\n    if (publicId) {\r\n        str += ' PUBLIC ' + enquoteDoctypeId(publicId);\r\n    } else if (systemId) {\r\n        str += ' SYSTEM';\r\n    }\r\n\r\n    if (systemId !== null) {\r\n        str += ' ' + enquoteDoctypeId(systemId);\r\n    }\r\n\r\n    return str;\r\n};\r\n", "'use strict';\r\n\r\nconst Tokenizer = require('../tokenizer');\r\nconst HTML = require('./html');\r\n\r\n//Aliases\r\nconst $ = HTML.TAG_NAMES;\r\nconst NS = HTML.NAMESPACES;\r\nconst ATTRS = HTML.ATTRS;\r\n\r\n//MIME types\r\nconst MIME_TYPES = {\r\n    TEXT_HTML: 'text/html',\r\n    APPLICATION_XML: 'application/xhtml+xml'\r\n};\r\n\r\n//Attributes\r\nconst DEFINITION_URL_ATTR = 'definitionurl';\r\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\r\nconst SVG_ATTRS_ADJUSTMENT_MAP = {\r\n    attributename: 'attributeName',\r\n    attributetype: 'attributeType',\r\n    basefrequency: 'baseFrequency',\r\n    baseprofile: 'baseProfile',\r\n    calcmode: 'calcMode',\r\n    clippathunits: 'clipPathUnits',\r\n    diffuseconstant: 'diffuseConstant',\r\n    edgemode: 'edgeMode',\r\n    filterunits: 'filterUnits',\r\n    glyphref: 'glyphRef',\r\n    gradienttransform: 'gradientTransform',\r\n    gradientunits: 'gradientUnits',\r\n    kernelmatrix: 'kernelMatrix',\r\n    kernelunitlength: 'kernelUnitLength',\r\n    keypoints: 'keyPoints',\r\n    keysplines: 'keySplines',\r\n    keytimes: 'keyTimes',\r\n    lengthadjust: 'lengthAdjust',\r\n    limitingconeangle: 'limitingConeAngle',\r\n    markerheight: 'markerHeight',\r\n    markerunits: 'markerUnits',\r\n    markerwidth: 'markerWidth',\r\n    maskcontentunits: 'maskContentUnits',\r\n    maskunits: 'maskUnits',\r\n    numoctaves: 'numOctaves',\r\n    pathlength: 'pathLength',\r\n    patterncontentunits: 'patternContentUnits',\r\n    patterntransform: 'patternTransform',\r\n    patternunits: 'patternUnits',\r\n    pointsatx: 'pointsAtX',\r\n    pointsaty: 'pointsAtY',\r\n    pointsatz: 'pointsAtZ',\r\n    preservealpha: 'preserveAlpha',\r\n    preserveaspectratio: 'preserveAspectRatio',\r\n    primitiveunits: 'primitiveUnits',\r\n    refx: 'refX',\r\n    refy: 'refY',\r\n    repeatcount: 'repeatCount',\r\n    repeatdur: 'repeatDur',\r\n    requiredextensions: 'requiredExtensions',\r\n    requiredfeatures: 'requiredFeatures',\r\n    specularconstant: 'specularConstant',\r\n    specularexponent: 'specularExponent',\r\n    spreadmethod: 'spreadMethod',\r\n    startoffset: 'startOffset',\r\n    stddeviation: 'stdDeviation',\r\n    stitchtiles: 'stitchTiles',\r\n    surfacescale: 'surfaceScale',\r\n    systemlanguage: 'systemLanguage',\r\n    tablevalues: 'tableValues',\r\n    targetx: 'targetX',\r\n    targety: 'targetY',\r\n    textlength: 'textLength',\r\n    viewbox: 'viewBox',\r\n    viewtarget: 'viewTarget',\r\n    xchannelselector: 'xChannelSelector',\r\n    ychannelselector: 'yChannelSelector',\r\n    zoomandpan: 'zoomAndPan'\r\n};\r\n\r\nconst XML_ATTRS_ADJUSTMENT_MAP = {\r\n    'xlink:actuate': { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK },\r\n    'xlink:arcrole': { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK },\r\n    'xlink:href': { prefix: 'xlink', name: 'href', namespace: NS.XLINK },\r\n    'xlink:role': { prefix: 'xlink', name: 'role', namespace: NS.XLINK },\r\n    'xlink:show': { prefix: 'xlink', name: 'show', namespace: NS.XLINK },\r\n    'xlink:title': { prefix: 'xlink', name: 'title', namespace: NS.XLINK },\r\n    'xlink:type': { prefix: 'xlink', name: 'type', namespace: NS.XLINK },\r\n    'xml:base': { prefix: 'xml', name: 'base', namespace: NS.XML },\r\n    'xml:lang': { prefix: 'xml', name: 'lang', namespace: NS.XML },\r\n    'xml:space': { prefix: 'xml', name: 'space', namespace: NS.XML },\r\n    xmlns: { prefix: '', name: 'xmlns', namespace: NS.XMLNS },\r\n    'xmlns:xlink': { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }\r\n};\r\n\r\n//SVG tag names adjustment map\r\nconst SVG_TAG_NAMES_ADJUSTMENT_MAP = (exports.SVG_TAG_NAMES_ADJUSTMENT_MAP = {\r\n    altglyph: 'altGlyph',\r\n    altglyphdef: 'altGlyphDef',\r\n    altglyphitem: 'altGlyphItem',\r\n    animatecolor: 'animateColor',\r\n    animatemotion: 'animateMotion',\r\n    animatetransform: 'animateTransform',\r\n    clippath: 'clipPath',\r\n    feblend: 'feBlend',\r\n    fecolormatrix: 'feColorMatrix',\r\n    fecomponenttransfer: 'feComponentTransfer',\r\n    fecomposite: 'feComposite',\r\n    feconvolvematrix: 'feConvolveMatrix',\r\n    fediffuselighting: 'feDiffuseLighting',\r\n    fedisplacementmap: 'feDisplacementMap',\r\n    fedistantlight: 'feDistantLight',\r\n    feflood: 'feFlood',\r\n    fefunca: 'feFuncA',\r\n    fefuncb: 'feFuncB',\r\n    fefuncg: 'feFuncG',\r\n    fefuncr: 'feFuncR',\r\n    fegaussianblur: 'feGaussianBlur',\r\n    feimage: 'feImage',\r\n    femerge: 'feMerge',\r\n    femergenode: 'feMergeNode',\r\n    femorphology: 'feMorphology',\r\n    feoffset: 'feOffset',\r\n    fepointlight: 'fePointLight',\r\n    fespecularlighting: 'feSpecularLighting',\r\n    fespotlight: 'feSpotLight',\r\n    fetile: 'feTile',\r\n    feturbulence: 'feTurbulence',\r\n    foreignobject: 'foreignObject',\r\n    glyphref: 'glyphRef',\r\n    lineargradient: 'linearGradient',\r\n    radialgradient: 'radialGradient',\r\n    textpath: 'textPath'\r\n});\r\n\r\n//Tags that causes exit from foreign content\r\nconst EXITS_FOREIGN_CONTENT = {\r\n    [$.B]: true,\r\n    [$.BIG]: true,\r\n    [$.BLOCKQUOTE]: true,\r\n    [$.BODY]: true,\r\n    [$.BR]: true,\r\n    [$.CENTER]: true,\r\n    [$.CODE]: true,\r\n    [$.DD]: true,\r\n    [$.DIV]: true,\r\n    [$.DL]: true,\r\n    [$.DT]: true,\r\n    [$.EM]: true,\r\n    [$.EMBED]: true,\r\n    [$.H1]: true,\r\n    [$.H2]: true,\r\n    [$.H3]: true,\r\n    [$.H4]: true,\r\n    [$.H5]: true,\r\n    [$.H6]: true,\r\n    [$.HEAD]: true,\r\n    [$.HR]: true,\r\n    [$.I]: true,\r\n    [$.IMG]: true,\r\n    [$.LI]: true,\r\n    [$.LISTING]: true,\r\n    [$.MENU]: true,\r\n    [$.META]: true,\r\n    [$.NOBR]: true,\r\n    [$.OL]: true,\r\n    [$.P]: true,\r\n    [$.PRE]: true,\r\n    [$.RUBY]: true,\r\n    [$.S]: true,\r\n    [$.SMALL]: true,\r\n    [$.SPAN]: true,\r\n    [$.STRONG]: true,\r\n    [$.STRIKE]: true,\r\n    [$.SUB]: true,\r\n    [$.SUP]: true,\r\n    [$.TABLE]: true,\r\n    [$.TT]: true,\r\n    [$.U]: true,\r\n    [$.UL]: true,\r\n    [$.VAR]: true\r\n};\r\n\r\n//Check exit from foreign content\r\nexports.causesExit = function(startTagToken) {\r\n    const tn = startTagToken.tagName;\r\n    const isFontWithAttrs =\r\n        tn === $.FONT &&\r\n        (Tokenizer.getTokenAttr(startTagToken, ATTRS.COLOR) !== null ||\r\n            Tokenizer.getTokenAttr(startTagToken, ATTRS.SIZE) !== null ||\r\n            Tokenizer.getTokenAttr(startTagToken, ATTRS.FACE) !== null);\r\n\r\n    return isFontWithAttrs ? true : EXITS_FOREIGN_CONTENT[tn];\r\n};\r\n\r\n//Token adjustments\r\nexports.adjustTokenMathMLAttrs = function(token) {\r\n    for (let i = 0; i < token.attrs.length; i++) {\r\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\r\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\r\n            break;\r\n        }\r\n    }\r\n};\r\n\r\nexports.adjustTokenSVGAttrs = function(token) {\r\n    for (let i = 0; i < token.attrs.length; i++) {\r\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP[token.attrs[i].name];\r\n\r\n        if (adjustedAttrName) {\r\n            token.attrs[i].name = adjustedAttrName;\r\n        }\r\n    }\r\n};\r\n\r\nexports.adjustTokenXMLAttrs = function(token) {\r\n    for (let i = 0; i < token.attrs.length; i++) {\r\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP[token.attrs[i].name];\r\n\r\n        if (adjustedAttrEntry) {\r\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\r\n            token.attrs[i].name = adjustedAttrEntry.name;\r\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\r\n        }\r\n    }\r\n};\r\n\r\nexports.adjustTokenSVGTagName = function(token) {\r\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP[token.tagName];\r\n\r\n    if (adjustedTagName) {\r\n        token.tagName = adjustedTagName;\r\n    }\r\n};\r\n\r\n//Integration points\r\nfunction isMathMLTextIntegrationPoint(tn, ns) {\r\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\r\n}\r\n\r\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\r\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\r\n        for (let i = 0; i < attrs.length; i++) {\r\n            if (attrs[i].name === ATTRS.ENCODING) {\r\n                const value = attrs[i].value.toLowerCase();\r\n\r\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\r\n            }\r\n        }\r\n    }\r\n\r\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\r\n}\r\n\r\nexports.isIntegrationPoint = function(tn, ns, attrs, foreignNS) {\r\n    if ((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) {\r\n        return true;\r\n    }\r\n\r\n    if ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n};\r\n", "'use strict';\r\n\r\nconst Tokenizer = require('../tokenizer');\r\nconst OpenElementStack = require('./open-element-stack');\r\nconst FormattingElementList = require('./formatting-element-list');\r\nconst LocationInfoParserMixin = require('../extensions/location-info/parser-mixin');\r\nconst ErrorReportingParserMixin = require('../extensions/error-reporting/parser-mixin');\r\nconst Mixin = require('../utils/mixin');\r\nconst defaultTreeAdapter = require('../tree-adapters/default');\r\nconst mergeOptions = require('../utils/merge-options');\r\nconst doctype = require('../common/doctype');\r\nconst foreignContent = require('../common/foreign-content');\r\nconst ERR = require('../common/error-codes');\r\nconst unicode = require('../common/unicode');\r\nconst HTML = require('../common/html');\r\n\r\n//Aliases\r\nconst $ = HTML.TAG_NAMES;\r\nconst NS = HTML.NAMESPACES;\r\nconst ATTRS = HTML.ATTRS;\r\n\r\nconst DEFAULT_OPTIONS = {\r\n    scriptingEnabled: true,\r\n    sourceCodeLocationInfo: false,\r\n    onParseError: null,\r\n    treeAdapter: defaultTreeAdapter\r\n};\r\n\r\n//Misc constants\r\nconst HIDDEN_INPUT_TYPE = 'hidden';\r\n\r\n//Adoption agency loops iteration count\r\nconst AA_OUTER_LOOP_ITER = 8;\r\nconst AA_INNER_LOOP_ITER = 3;\r\n\r\n//Insertion modes\r\nconst INITIAL_MODE = 'INITIAL_MODE';\r\nconst BEFORE_HTML_MODE = 'BEFORE_HTML_MODE';\r\nconst BEFORE_HEAD_MODE = 'BEFORE_HEAD_MODE';\r\nconst IN_HEAD_MODE = 'IN_HEAD_MODE';\r\nconst IN_HEAD_NO_SCRIPT_MODE = 'IN_HEAD_NO_SCRIPT_MODE';\r\nconst AFTER_HEAD_MODE = 'AFTER_HEAD_MODE';\r\nconst IN_BODY_MODE = 'IN_BODY_MODE';\r\nconst TEXT_MODE = 'TEXT_MODE';\r\nconst IN_TABLE_MODE = 'IN_TABLE_MODE';\r\nconst IN_TABLE_TEXT_MODE = 'IN_TABLE_TEXT_MODE';\r\nconst IN_CAPTION_MODE = 'IN_CAPTION_MODE';\r\nconst IN_COLUMN_GROUP_MODE = 'IN_COLUMN_GROUP_MODE';\r\nconst IN_TABLE_BODY_MODE = 'IN_TABLE_BODY_MODE';\r\nconst IN_ROW_MODE = 'IN_ROW_MODE';\r\nconst IN_CELL_MODE = 'IN_CELL_MODE';\r\nconst IN_SELECT_MODE = 'IN_SELECT_MODE';\r\nconst IN_SELECT_IN_TABLE_MODE = 'IN_SELECT_IN_TABLE_MODE';\r\nconst IN_TEMPLATE_MODE = 'IN_TEMPLATE_MODE';\r\nconst AFTER_BODY_MODE = 'AFTER_BODY_MODE';\r\nconst IN_FRAMESET_MODE = 'IN_FRAMESET_MODE';\r\nconst AFTER_FRAMESET_MODE = 'AFTER_FRAMESET_MODE';\r\nconst AFTER_AFTER_BODY_MODE = 'AFTER_AFTER_BODY_MODE';\r\nconst AFTER_AFTER_FRAMESET_MODE = 'AFTER_AFTER_FRAMESET_MODE';\r\n\r\n//Insertion mode reset map\r\nconst INSERTION_MODE_RESET_MAP = {\r\n    [$.TR]: IN_ROW_MODE,\r\n    [$.TBODY]: IN_TABLE_BODY_MODE,\r\n    [$.THEAD]: IN_TABLE_BODY_MODE,\r\n    [$.TFOOT]: IN_TABLE_BODY_MODE,\r\n    [$.CAPTION]: IN_CAPTION_MODE,\r\n    [$.COLGROUP]: IN_COLUMN_GROUP_MODE,\r\n    [$.TABLE]: IN_TABLE_MODE,\r\n    [$.BODY]: IN_BODY_MODE,\r\n    [$.FRAMESET]: IN_FRAMESET_MODE\r\n};\r\n\r\n//Template insertion mode switch map\r\nconst TEMPLATE_INSERTION_MODE_SWITCH_MAP = {\r\n    [$.CAPTION]: IN_TABLE_MODE,\r\n    [$.COLGROUP]: IN_TABLE_MODE,\r\n    [$.TBODY]: IN_TABLE_MODE,\r\n    [$.TFOOT]: IN_TABLE_MODE,\r\n    [$.THEAD]: IN_TABLE_MODE,\r\n    [$.COL]: IN_COLUMN_GROUP_MODE,\r\n    [$.TR]: IN_TABLE_BODY_MODE,\r\n    [$.TD]: IN_ROW_MODE,\r\n    [$.TH]: IN_ROW_MODE\r\n};\r\n\r\n//Token handlers map for insertion modes\r\nconst TOKEN_HANDLERS = {\r\n    [INITIAL_MODE]: {\r\n        [Tokenizer.CHARACTER_TOKEN]: tokenInInitialMode,\r\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInInitialMode,\r\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: ignoreToken,\r\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\r\n        [Tokenizer.DOCTYPE_TOKEN]: doctypeInInitialMode,\r\n        [Tokenizer.START_TAG_TOKEN]: tokenInInitialMode,\r\n        [Tokenizer.END_TAG_TOKEN]: tokenInInitialMode,\r\n        [Tokenizer.EOF_TOKEN]: tokenInInitialMode\r\n    },\r\n    [BEFORE_HTML_MODE]: {\r\n        [Tokenizer.CHARACTER_TOKEN]: tokenBeforeHtml,\r\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenBeforeHtml,\r\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: ignoreToken,\r\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\r\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\r\n        [Tokenizer.START_TAG_TOKEN]: startTagBeforeHtml,\r\n        [Tokenizer.END_TAG_TOKEN]: endTagBeforeHtml,\r\n        [Tokenizer.EOF_TOKEN]: tokenBeforeHtml\r\n    },\r\n    [BEFORE_HEAD_MODE]: {\r\n        [Tokenizer.CHARACTER_TOKEN]: tokenBeforeHead,\r\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenBeforeHead,\r\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: ignoreToken,\r\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\r\n        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,\r\n        [Tokenizer.START_TAG_TOKEN]: startTagBeforeHead,\r\n        [Tokenizer.END_TAG_TOKEN]: endTagBeforeHead,\r\n        [Tokenizer.EOF_TOKEN]: tokenBeforeHead\r\n    },\r\n    [IN_HEAD_MODE]: {\r\n        [Tokenizer.CHARACTER_TOKEN]: tokenInHead,\r\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInHead,\r\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\r\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\r\n        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,\r\n        [Tokenizer.START_TAG_TOKEN]: startTagInHead,\r\n        [Tokenizer.END_TAG_TOKEN]: endTagInHead,\r\n        [Tokenizer.EOF_TOKEN]: tokenInHead\r\n    },\r\n    [IN_HEAD_NO_SCRIPT_MODE]: {\r\n        [Tokenizer.CHARACTER_TOKEN]: tokenInHeadNoScript,\r\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInHeadNoScript,\r\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\r\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\r\n        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,\r\n        [Tokenizer.START_TAG_TOKEN]: startTagInHeadNoScript,\r\n        [Tokenizer.END_TAG_TOKEN]: endTagInHeadNoScript,\r\n        [Tokenizer.EOF_TOKEN]: tokenInHeadNoScript\r\n    },\r\n    [AFTER_HEAD_MODE]: {\r\n        [Tokenizer.CHARACTER_TOKEN]: tokenAfterHead,\r\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenAfterHead,\r\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\r\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\r\n        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,\r\n        [Tokenizer.START_TAG_TOKEN]: startTagAfterHead,\r\n        [Tokenizer.END_TAG_TOKEN]: endTagAfterHead,\r\n        [Tokenizer.EOF_TOKEN]: tokenAfterHead\r\n    },\r\n    [IN_BODY_MODE]: {\r\n        [Tokenizer.CHARACTER_TOKEN]: characterInBody,\r\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\r\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\r\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\r\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\r\n        [Tokenizer.START_TAG_TOKEN]: startTagInBody,\r\n        [Tokenizer.END_TAG_TOKEN]: endTagInBody,\r\n        [Tokenizer.EOF_TOKEN]: eofInBody\r\n    },\r\n    [TEXT_MODE]: {\r\n        [Tokenizer.CHARACTER_TOKEN]: insertCharacters,\r\n        [Tokenizer.NULL_CHARACTER_TOKEN]: insertCharacters,\r\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\r\n        [Tokenizer.COMMENT_TOKEN]: ignoreToken,\r\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\r\n        [Tokenizer.START_TAG_TOKEN]: ignoreToken,\r\n        [Tokenizer.END_TAG_TOKEN]: endTagInText,\r\n        [Tokenizer.EOF_TOKEN]: eofInText\r\n    },\r\n    [IN_TABLE_MODE]: {\r\n        [Tokenizer.CHARACTER_TOKEN]: characterInTable,\r\n        [Tokenizer.NULL_CHARACTER_TOKEN]: characterInTable,\r\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: characterInTable,\r\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\r\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\r\n        [Tokenizer.START_TAG_TOKEN]: startTagInTable,\r\n        [Tokenizer.END_TAG_TOKEN]: endTagInTable,\r\n        [Tokenizer.EOF_TOKEN]: eofInBody\r\n    },\r\n    [IN_TABLE_TEXT_MODE]: {\r\n        [Tokenizer.CHARACTER_TOKEN]: characterInTableText,\r\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\r\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInTableText,\r\n        [Tokenizer.COMMENT_TOKEN]: tokenInTableText,\r\n        [Tokenizer.DOCTYPE_TOKEN]: tokenInTableText,\r\n        [Tokenizer.START_TAG_TOKEN]: tokenInTableText,\r\n        [Tokenizer.END_TAG_TOKEN]: tokenInTableText,\r\n        [Tokenizer.EOF_TOKEN]: tokenInTableText\r\n    },\r\n    [IN_CAPTION_MODE]: {\r\n        [Tokenizer.CHARACTER_TOKEN]: characterInBody,\r\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\r\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\r\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\r\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\r\n        [Tokenizer.START_TAG_TOKEN]: startTagInCaption,\r\n        [Tokenizer.END_TAG_TOKEN]: endTagInCaption,\r\n        [Tokenizer.EOF_TOKEN]: eofInBody\r\n    },\r\n    [IN_COLUMN_GROUP_MODE]: {\r\n        [Tokenizer.CHARACTER_TOKEN]: tokenInColumnGroup,\r\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInColumnGroup,\r\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\r\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\r\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\r\n        [Tokenizer.START_TAG_TOKEN]: startTagInColumnGroup,\r\n        [Tokenizer.END_TAG_TOKEN]: endTagInColumnGroup,\r\n        [Tokenizer.EOF_TOKEN]: eofInBody\r\n    },\r\n    [IN_TABLE_BODY_MODE]: {\r\n        [Tokenizer.CHARACTER_TOKEN]: characterInTable,\r\n        [Tokenizer.NULL_CHARACTER_TOKEN]: characterInTable,\r\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: characterInTable,\r\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\r\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\r\n        [Tokenizer.START_TAG_TOKEN]: startTagInTableBody,\r\n        [Tokenizer.END_TAG_TOKEN]: endTagInTableBody,\r\n        [Tokenizer.EOF_TOKEN]: eofInBody\r\n    },\r\n    [IN_ROW_MODE]: {\r\n        [Tokenizer.CHARACTER_TOKEN]: characterInTable,\r\n        [Tokenizer.NULL_CHARACTER_TOKEN]: characterInTable,\r\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: characterInTable,\r\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\r\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\r\n        [Tokenizer.START_TAG_TOKEN]: startTagInRow,\r\n        [Tokenizer.END_TAG_TOKEN]: endTagInRow,\r\n        [Tokenizer.EOF_TOKEN]: eofInBody\r\n    },\r\n    [IN_CELL_MODE]: {\r\n        [Tokenizer.CHARACTER_TOKEN]: characterInBody,\r\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\r\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\r\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\r\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\r\n        [Tokenizer.START_TAG_TOKEN]: startTagInCell,\r\n        [Tokenizer.END_TAG_TOKEN]: endTagInCell,\r\n        [Tokenizer.EOF_TOKEN]: eofInBody\r\n    },\r\n    [IN_SELECT_MODE]: {\r\n        [Tokenizer.CHARACTER_TOKEN]: insertCharacters,\r\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\r\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\r\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\r\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\r\n        [Tokenizer.START_TAG_TOKEN]: startTagInSelect,\r\n        [Tokenizer.END_TAG_TOKEN]: endTagInSelect,\r\n        [Tokenizer.EOF_TOKEN]: eofInBody\r\n    },\r\n    [IN_SELECT_IN_TABLE_MODE]: {\r\n        [Tokenizer.CHARACTER_TOKEN]: insertCharacters,\r\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\r\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\r\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\r\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\r\n        [Tokenizer.START_TAG_TOKEN]: startTagInSelectInTable,\r\n        [Tokenizer.END_TAG_TOKEN]: endTagInSelectInTable,\r\n        [Tokenizer.EOF_TOKEN]: eofInBody\r\n    },\r\n    [IN_TEMPLATE_MODE]: {\r\n        [Tokenizer.CHARACTER_TOKEN]: characterInBody,\r\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\r\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\r\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\r\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\r\n        [Tokenizer.START_TAG_TOKEN]: startTagInTemplate,\r\n        [Tokenizer.END_TAG_TOKEN]: endTagInTemplate,\r\n        [Tokenizer.EOF_TOKEN]: eofInTemplate\r\n    },\r\n    [AFTER_BODY_MODE]: {\r\n        [Tokenizer.CHARACTER_TOKEN]: tokenAfterBody,\r\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenAfterBody,\r\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\r\n        [Tokenizer.COMMENT_TOKEN]: appendCommentToRootHtmlElement,\r\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\r\n        [Tokenizer.START_TAG_TOKEN]: startTagAfterBody,\r\n        [Tokenizer.END_TAG_TOKEN]: endTagAfterBody,\r\n        [Tokenizer.EOF_TOKEN]: stopParsing\r\n    },\r\n    [IN_FRAMESET_MODE]: {\r\n        [Tokenizer.CHARACTER_TOKEN]: ignoreToken,\r\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\r\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\r\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\r\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\r\n        [Tokenizer.START_TAG_TOKEN]: startTagInFrameset,\r\n        [Tokenizer.END_TAG_TOKEN]: endTagInFrameset,\r\n        [Tokenizer.EOF_TOKEN]: stopParsing\r\n    },\r\n    [AFTER_FRAMESET_MODE]: {\r\n        [Tokenizer.CHARACTER_TOKEN]: ignoreToken,\r\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\r\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\r\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\r\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\r\n        [Tokenizer.START_TAG_TOKEN]: startTagAfterFrameset,\r\n        [Tokenizer.END_TAG_TOKEN]: endTagAfterFrameset,\r\n        [Tokenizer.EOF_TOKEN]: stopParsing\r\n    },\r\n    [AFTER_AFTER_BODY_MODE]: {\r\n        [Tokenizer.CHARACTER_TOKEN]: tokenAfterAfterBody,\r\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenAfterAfterBody,\r\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\r\n        [Tokenizer.COMMENT_TOKEN]: appendCommentToDocument,\r\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\r\n        [Tokenizer.START_TAG_TOKEN]: startTagAfterAfterBody,\r\n        [Tokenizer.END_TAG_TOKEN]: tokenAfterAfterBody,\r\n        [Tokenizer.EOF_TOKEN]: stopParsing\r\n    },\r\n    [AFTER_AFTER_FRAMESET_MODE]: {\r\n        [Tokenizer.CHARACTER_TOKEN]: ignoreToken,\r\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\r\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\r\n        [Tokenizer.COMMENT_TOKEN]: appendCommentToDocument,\r\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\r\n        [Tokenizer.START_TAG_TOKEN]: startTagAfterAfterFrameset,\r\n        [Tokenizer.END_TAG_TOKEN]: ignoreToken,\r\n        [Tokenizer.EOF_TOKEN]: stopParsing\r\n    }\r\n};\r\n\r\n//Parser\r\nclass Parser {\r\n    constructor(options) {\r\n        this.options = mergeOptions(DEFAULT_OPTIONS, options);\r\n\r\n        this.treeAdapter = this.options.treeAdapter;\r\n        this.pendingScript = null;\r\n\r\n        if (this.options.sourceCodeLocationInfo) {\r\n            Mixin.install(this, LocationInfoParserMixin);\r\n        }\r\n\r\n        if (this.options.onParseError) {\r\n            Mixin.install(this, ErrorReportingParserMixin, { onParseError: this.options.onParseError });\r\n        }\r\n    }\r\n\r\n    // API\r\n    parse(html) {\r\n        const document = this.treeAdapter.createDocument();\r\n\r\n        this._bootstrap(document, null);\r\n        this.tokenizer.write(html, true);\r\n        this._runParsingLoop(null);\r\n\r\n        return document;\r\n    }\r\n\r\n    parseFragment(html, fragmentContext) {\r\n        //NOTE: use <template> element as a fragment context if context element was not provided,\r\n        //so we will parse in \"forgiving\" manner\r\n        if (!fragmentContext) {\r\n            fragmentContext = this.treeAdapter.createElement($.TEMPLATE, NS.HTML, []);\r\n        }\r\n\r\n        //NOTE: create fake element which will be used as 'document' for fragment parsing.\r\n        //This is important for jsdom there 'document' can't be recreated, therefore\r\n        //fragment parsing causes messing of the main `document`.\r\n        const documentMock = this.treeAdapter.createElement('documentmock', NS.HTML, []);\r\n\r\n        this._bootstrap(documentMock, fragmentContext);\r\n\r\n        if (this.treeAdapter.getTagName(fragmentContext) === $.TEMPLATE) {\r\n            this._pushTmplInsertionMode(IN_TEMPLATE_MODE);\r\n        }\r\n\r\n        this._initTokenizerForFragmentParsing();\r\n        this._insertFakeRootElement();\r\n        this._resetInsertionMode();\r\n        this._findFormInFragmentContext();\r\n        this.tokenizer.write(html, true);\r\n        this._runParsingLoop(null);\r\n\r\n        const rootElement = this.treeAdapter.getFirstChild(documentMock);\r\n        const fragment = this.treeAdapter.createDocumentFragment();\r\n\r\n        this._adoptNodes(rootElement, fragment);\r\n\r\n        return fragment;\r\n    }\r\n\r\n    //Bootstrap parser\r\n    _bootstrap(document, fragmentContext) {\r\n        this.tokenizer = new Tokenizer(this.options);\r\n\r\n        this.stopped = false;\r\n\r\n        this.insertionMode = INITIAL_MODE;\r\n        this.originalInsertionMode = '';\r\n\r\n        this.document = document;\r\n        this.fragmentContext = fragmentContext;\r\n\r\n        this.headElement = null;\r\n        this.formElement = null;\r\n\r\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter);\r\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\r\n\r\n        this.tmplInsertionModeStack = [];\r\n        this.tmplInsertionModeStackTop = -1;\r\n        this.currentTmplInsertionMode = null;\r\n\r\n        this.pendingCharacterTokens = [];\r\n        this.hasNonWhitespacePendingCharacterToken = false;\r\n\r\n        this.framesetOk = true;\r\n        this.skipNextNewLine = false;\r\n        this.fosterParentingEnabled = false;\r\n    }\r\n\r\n    //Errors\r\n    _err() {\r\n        // NOTE: err reporting is noop by default. Enabled by mixin.\r\n    }\r\n\r\n    //Parsing loop\r\n    _runParsingLoop(scriptHandler) {\r\n        while (!this.stopped) {\r\n            this._setupTokenizerCDATAMode();\r\n\r\n            const token = this.tokenizer.getNextToken();\r\n\r\n            if (token.type === Tokenizer.HIBERNATION_TOKEN) {\r\n                break;\r\n            }\r\n\r\n            if (this.skipNextNewLine) {\r\n                this.skipNextNewLine = false;\r\n\r\n                if (token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN && token.chars[0] === '\\n') {\r\n                    if (token.chars.length === 1) {\r\n                        continue;\r\n                    }\r\n\r\n                    token.chars = token.chars.substr(1);\r\n                }\r\n            }\r\n\r\n            this._processInputToken(token);\r\n\r\n            if (scriptHandler && this.pendingScript) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    runParsingLoopForCurrentChunk(writeCallback, scriptHandler) {\r\n        this._runParsingLoop(scriptHandler);\r\n\r\n        if (scriptHandler && this.pendingScript) {\r\n            const script = this.pendingScript;\r\n\r\n            this.pendingScript = null;\r\n\r\n            scriptHandler(script);\r\n\r\n            return;\r\n        }\r\n\r\n        if (writeCallback) {\r\n            writeCallback();\r\n        }\r\n    }\r\n\r\n    //Text parsing\r\n    _setupTokenizerCDATAMode() {\r\n        const current = this._getAdjustedCurrentElement();\r\n\r\n        this.tokenizer.allowCDATA =\r\n            current &&\r\n            current !== this.document &&\r\n            this.treeAdapter.getNamespaceURI(current) !== NS.HTML &&\r\n            !this._isIntegrationPoint(current);\r\n    }\r\n\r\n    _switchToTextParsing(currentToken, nextTokenizerState) {\r\n        this._insertElement(currentToken, NS.HTML);\r\n        this.tokenizer.state = nextTokenizerState;\r\n        this.originalInsertionMode = this.insertionMode;\r\n        this.insertionMode = TEXT_MODE;\r\n    }\r\n\r\n    switchToPlaintextParsing() {\r\n        this.insertionMode = TEXT_MODE;\r\n        this.originalInsertionMode = IN_BODY_MODE;\r\n        this.tokenizer.state = Tokenizer.MODE.PLAINTEXT;\r\n    }\r\n\r\n    //Fragment parsing\r\n    _getAdjustedCurrentElement() {\r\n        return this.openElements.stackTop === 0 && this.fragmentContext\r\n            ? this.fragmentContext\r\n            : this.openElements.current;\r\n    }\r\n\r\n    _findFormInFragmentContext() {\r\n        let node = this.fragmentContext;\r\n\r\n        do {\r\n            if (this.treeAdapter.getTagName(node) === $.FORM) {\r\n                this.formElement = node;\r\n                break;\r\n            }\r\n\r\n            node = this.treeAdapter.getParentNode(node);\r\n        } while (node);\r\n    }\r\n\r\n    _initTokenizerForFragmentParsing() {\r\n        if (this.treeAdapter.getNamespaceURI(this.fragmentContext) === NS.HTML) {\r\n            const tn = this.treeAdapter.getTagName(this.fragmentContext);\r\n\r\n            if (tn === $.TITLE || tn === $.TEXTAREA) {\r\n                this.tokenizer.state = Tokenizer.MODE.RCDATA;\r\n            } else if (\r\n                tn === $.STYLE ||\r\n                tn === $.XMP ||\r\n                tn === $.IFRAME ||\r\n                tn === $.NOEMBED ||\r\n                tn === $.NOFRAMES ||\r\n                tn === $.NOSCRIPT\r\n            ) {\r\n                this.tokenizer.state = Tokenizer.MODE.RAWTEXT;\r\n            } else if (tn === $.SCRIPT) {\r\n                this.tokenizer.state = Tokenizer.MODE.SCRIPT_DATA;\r\n            } else if (tn === $.PLAINTEXT) {\r\n                this.tokenizer.state = Tokenizer.MODE.PLAINTEXT;\r\n            }\r\n        }\r\n    }\r\n\r\n    //Tree mutation\r\n    _setDocumentType(token) {\r\n        const name = token.name || '';\r\n        const publicId = token.publicId || '';\r\n        const systemId = token.systemId || '';\r\n\r\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\r\n    }\r\n\r\n    _attachElementToTree(element) {\r\n        if (this._shouldFosterParentOnInsertion()) {\r\n            this._fosterParentElement(element);\r\n        } else {\r\n            const parent = this.openElements.currentTmplContent || this.openElements.current;\r\n\r\n            this.treeAdapter.appendChild(parent, element);\r\n        }\r\n    }\r\n\r\n    _appendElement(token, namespaceURI) {\r\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\r\n\r\n        this._attachElementToTree(element);\r\n    }\r\n\r\n    _insertElement(token, namespaceURI) {\r\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\r\n\r\n        this._attachElementToTree(element);\r\n        this.openElements.push(element);\r\n    }\r\n\r\n    _insertFakeElement(tagName) {\r\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\r\n\r\n        this._attachElementToTree(element);\r\n        this.openElements.push(element);\r\n    }\r\n\r\n    _insertTemplate(token) {\r\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\r\n        const content = this.treeAdapter.createDocumentFragment();\r\n\r\n        this.treeAdapter.setTemplateContent(tmpl, content);\r\n        this._attachElementToTree(tmpl);\r\n        this.openElements.push(tmpl);\r\n    }\r\n\r\n    _insertFakeRootElement() {\r\n        const element = this.treeAdapter.createElement($.HTML, NS.HTML, []);\r\n\r\n        this.treeAdapter.appendChild(this.openElements.current, element);\r\n        this.openElements.push(element);\r\n    }\r\n\r\n    _appendCommentNode(token, parent) {\r\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\r\n\r\n        this.treeAdapter.appendChild(parent, commentNode);\r\n    }\r\n\r\n    _insertCharacters(token) {\r\n        if (this._shouldFosterParentOnInsertion()) {\r\n            this._fosterParentText(token.chars);\r\n        } else {\r\n            const parent = this.openElements.currentTmplContent || this.openElements.current;\r\n\r\n            this.treeAdapter.insertText(parent, token.chars);\r\n        }\r\n    }\r\n\r\n    _adoptNodes(donor, recipient) {\r\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\r\n            this.treeAdapter.detachNode(child);\r\n            this.treeAdapter.appendChild(recipient, child);\r\n        }\r\n    }\r\n\r\n    //Token processing\r\n    _shouldProcessTokenInForeignContent(token) {\r\n        const current = this._getAdjustedCurrentElement();\r\n\r\n        if (!current || current === this.document) {\r\n            return false;\r\n        }\r\n\r\n        const ns = this.treeAdapter.getNamespaceURI(current);\r\n\r\n        if (ns === NS.HTML) {\r\n            return false;\r\n        }\r\n\r\n        if (\r\n            this.treeAdapter.getTagName(current) === $.ANNOTATION_XML &&\r\n            ns === NS.MATHML &&\r\n            token.type === Tokenizer.START_TAG_TOKEN &&\r\n            token.tagName === $.SVG\r\n        ) {\r\n            return false;\r\n        }\r\n\r\n        const isCharacterToken =\r\n            token.type === Tokenizer.CHARACTER_TOKEN ||\r\n            token.type === Tokenizer.NULL_CHARACTER_TOKEN ||\r\n            token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN;\r\n\r\n        const isMathMLTextStartTag =\r\n            token.type === Tokenizer.START_TAG_TOKEN && token.tagName !== $.MGLYPH && token.tagName !== $.MALIGNMARK;\r\n\r\n        if ((isMathMLTextStartTag || isCharacterToken) && this._isIntegrationPoint(current, NS.MATHML)) {\r\n            return false;\r\n        }\r\n\r\n        if (\r\n            (token.type === Tokenizer.START_TAG_TOKEN || isCharacterToken) &&\r\n            this._isIntegrationPoint(current, NS.HTML)\r\n        ) {\r\n            return false;\r\n        }\r\n\r\n        return token.type !== Tokenizer.EOF_TOKEN;\r\n    }\r\n\r\n    _processToken(token) {\r\n        TOKEN_HANDLERS[this.insertionMode][token.type](this, token);\r\n    }\r\n\r\n    _processTokenInBodyMode(token) {\r\n        TOKEN_HANDLERS[IN_BODY_MODE][token.type](this, token);\r\n    }\r\n\r\n    _processTokenInForeignContent(token) {\r\n        if (token.type === Tokenizer.CHARACTER_TOKEN) {\r\n            characterInForeignContent(this, token);\r\n        } else if (token.type === Tokenizer.NULL_CHARACTER_TOKEN) {\r\n            nullCharacterInForeignContent(this, token);\r\n        } else if (token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN) {\r\n            insertCharacters(this, token);\r\n        } else if (token.type === Tokenizer.COMMENT_TOKEN) {\r\n            appendComment(this, token);\r\n        } else if (token.type === Tokenizer.START_TAG_TOKEN) {\r\n            startTagInForeignContent(this, token);\r\n        } else if (token.type === Tokenizer.END_TAG_TOKEN) {\r\n            endTagInForeignContent(this, token);\r\n        }\r\n    }\r\n\r\n    _processInputToken(token) {\r\n        if (this._shouldProcessTokenInForeignContent(token)) {\r\n            this._processTokenInForeignContent(token);\r\n        } else {\r\n            this._processToken(token);\r\n        }\r\n\r\n        if (token.type === Tokenizer.START_TAG_TOKEN && token.selfClosing && !token.ackSelfClosing) {\r\n            this._err(ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\r\n        }\r\n    }\r\n\r\n    //Integration points\r\n    _isIntegrationPoint(element, foreignNS) {\r\n        const tn = this.treeAdapter.getTagName(element);\r\n        const ns = this.treeAdapter.getNamespaceURI(element);\r\n        const attrs = this.treeAdapter.getAttrList(element);\r\n\r\n        return foreignContent.isIntegrationPoint(tn, ns, attrs, foreignNS);\r\n    }\r\n\r\n    //Active formatting elements reconstruction\r\n    _reconstructActiveFormattingElements() {\r\n        const listLength = this.activeFormattingElements.length;\r\n\r\n        if (listLength) {\r\n            let unopenIdx = listLength;\r\n            let entry = null;\r\n\r\n            do {\r\n                unopenIdx--;\r\n                entry = this.activeFormattingElements.entries[unopenIdx];\r\n\r\n                if (entry.type === FormattingElementList.MARKER_ENTRY || this.openElements.contains(entry.element)) {\r\n                    unopenIdx++;\r\n                    break;\r\n                }\r\n            } while (unopenIdx > 0);\r\n\r\n            for (let i = unopenIdx; i < listLength; i++) {\r\n                entry = this.activeFormattingElements.entries[i];\r\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\r\n                entry.element = this.openElements.current;\r\n            }\r\n        }\r\n    }\r\n\r\n    //Close elements\r\n    _closeTableCell() {\r\n        this.openElements.generateImpliedEndTags();\r\n        this.openElements.popUntilTableCellPopped();\r\n        this.activeFormattingElements.clearToLastMarker();\r\n        this.insertionMode = IN_ROW_MODE;\r\n    }\r\n\r\n    _closePElement() {\r\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\r\n        this.openElements.popUntilTagNamePopped($.P);\r\n    }\r\n\r\n    //Insertion modes\r\n    _resetInsertionMode() {\r\n        for (let i = this.openElements.stackTop, last = false; i >= 0; i--) {\r\n            let element = this.openElements.items[i];\r\n\r\n            if (i === 0) {\r\n                last = true;\r\n\r\n                if (this.fragmentContext) {\r\n                    element = this.fragmentContext;\r\n                }\r\n            }\r\n\r\n            const tn = this.treeAdapter.getTagName(element);\r\n            const newInsertionMode = INSERTION_MODE_RESET_MAP[tn];\r\n\r\n            if (newInsertionMode) {\r\n                this.insertionMode = newInsertionMode;\r\n                break;\r\n            } else if (!last && (tn === $.TD || tn === $.TH)) {\r\n                this.insertionMode = IN_CELL_MODE;\r\n                break;\r\n            } else if (!last && tn === $.HEAD) {\r\n                this.insertionMode = IN_HEAD_MODE;\r\n                break;\r\n            } else if (tn === $.SELECT) {\r\n                this._resetInsertionModeForSelect(i);\r\n                break;\r\n            } else if (tn === $.TEMPLATE) {\r\n                this.insertionMode = this.currentTmplInsertionMode;\r\n                break;\r\n            } else if (tn === $.HTML) {\r\n                this.insertionMode = this.headElement ? AFTER_HEAD_MODE : BEFORE_HEAD_MODE;\r\n                break;\r\n            } else if (last) {\r\n                this.insertionMode = IN_BODY_MODE;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    _resetInsertionModeForSelect(selectIdx) {\r\n        if (selectIdx > 0) {\r\n            for (let i = selectIdx - 1; i > 0; i--) {\r\n                const ancestor = this.openElements.items[i];\r\n                const tn = this.treeAdapter.getTagName(ancestor);\r\n\r\n                if (tn === $.TEMPLATE) {\r\n                    break;\r\n                } else if (tn === $.TABLE) {\r\n                    this.insertionMode = IN_SELECT_IN_TABLE_MODE;\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.insertionMode = IN_SELECT_MODE;\r\n    }\r\n\r\n    _pushTmplInsertionMode(mode) {\r\n        this.tmplInsertionModeStack.push(mode);\r\n        this.tmplInsertionModeStackTop++;\r\n        this.currentTmplInsertionMode = mode;\r\n    }\r\n\r\n    _popTmplInsertionMode() {\r\n        this.tmplInsertionModeStack.pop();\r\n        this.tmplInsertionModeStackTop--;\r\n        this.currentTmplInsertionMode = this.tmplInsertionModeStack[this.tmplInsertionModeStackTop];\r\n    }\r\n\r\n    //Foster parenting\r\n    _isElementCausesFosterParenting(element) {\r\n        const tn = this.treeAdapter.getTagName(element);\r\n\r\n        return tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD || tn === $.TR;\r\n    }\r\n\r\n    _shouldFosterParentOnInsertion() {\r\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.current);\r\n    }\r\n\r\n    _findFosterParentingLocation() {\r\n        const location = {\r\n            parent: null,\r\n            beforeElement: null\r\n        };\r\n\r\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\r\n            const openElement = this.openElements.items[i];\r\n            const tn = this.treeAdapter.getTagName(openElement);\r\n            const ns = this.treeAdapter.getNamespaceURI(openElement);\r\n\r\n            if (tn === $.TEMPLATE && ns === NS.HTML) {\r\n                location.parent = this.treeAdapter.getTemplateContent(openElement);\r\n                break;\r\n            } else if (tn === $.TABLE) {\r\n                location.parent = this.treeAdapter.getParentNode(openElement);\r\n\r\n                if (location.parent) {\r\n                    location.beforeElement = openElement;\r\n                } else {\r\n                    location.parent = this.openElements.items[i - 1];\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!location.parent) {\r\n            location.parent = this.openElements.items[0];\r\n        }\r\n\r\n        return location;\r\n    }\r\n\r\n    _fosterParentElement(element) {\r\n        const location = this._findFosterParentingLocation();\r\n\r\n        if (location.beforeElement) {\r\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\r\n        } else {\r\n            this.treeAdapter.appendChild(location.parent, element);\r\n        }\r\n    }\r\n\r\n    _fosterParentText(chars) {\r\n        const location = this._findFosterParentingLocation();\r\n\r\n        if (location.beforeElement) {\r\n            this.treeAdapter.insertTextBefore(location.parent, chars, location.beforeElement);\r\n        } else {\r\n            this.treeAdapter.insertText(location.parent, chars);\r\n        }\r\n    }\r\n\r\n    //Special elements\r\n    _isSpecialElement(element) {\r\n        const tn = this.treeAdapter.getTagName(element);\r\n        const ns = this.treeAdapter.getNamespaceURI(element);\r\n\r\n        return HTML.SPECIAL_ELEMENTS[ns][tn];\r\n    }\r\n}\r\n\r\nmodule.exports = Parser;\r\n\r\n//Adoption agency algorithm\r\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\r\n//------------------------------------------------------------------\r\n\r\n//Steps 5-8 of the algorithm\r\nfunction aaObtainFormattingElementEntry(p, token) {\r\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\r\n\r\n    if (formattingElementEntry) {\r\n        if (!p.openElements.contains(formattingElementEntry.element)) {\r\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\r\n            formattingElementEntry = null;\r\n        } else if (!p.openElements.hasInScope(token.tagName)) {\r\n            formattingElementEntry = null;\r\n        }\r\n    } else {\r\n        genericEndTagInBody(p, token);\r\n    }\r\n\r\n    return formattingElementEntry;\r\n}\r\n\r\n//Steps 9 and 10 of the algorithm\r\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\r\n    let furthestBlock = null;\r\n\r\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\r\n        const element = p.openElements.items[i];\r\n\r\n        if (element === formattingElementEntry.element) {\r\n            break;\r\n        }\r\n\r\n        if (p._isSpecialElement(element)) {\r\n            furthestBlock = element;\r\n        }\r\n    }\r\n\r\n    if (!furthestBlock) {\r\n        p.openElements.popUntilElementPopped(formattingElementEntry.element);\r\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\r\n    }\r\n\r\n    return furthestBlock;\r\n}\r\n\r\n//Step 13 of the algorithm\r\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\r\n    let lastElement = furthestBlock;\r\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\r\n\r\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\r\n        //NOTE: store next element for the next loop iteration (it may be deleted from the stack by step 9.5)\r\n        nextElement = p.openElements.getCommonAncestor(element);\r\n\r\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\r\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\r\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\r\n\r\n        if (shouldRemoveFromOpenElements) {\r\n            if (counterOverflow) {\r\n                p.activeFormattingElements.removeEntry(elementEntry);\r\n            }\r\n\r\n            p.openElements.remove(element);\r\n        } else {\r\n            element = aaRecreateElementFromEntry(p, elementEntry);\r\n\r\n            if (lastElement === furthestBlock) {\r\n                p.activeFormattingElements.bookmark = elementEntry;\r\n            }\r\n\r\n            p.treeAdapter.detachNode(lastElement);\r\n            p.treeAdapter.appendChild(element, lastElement);\r\n            lastElement = element;\r\n        }\r\n    }\r\n\r\n    return lastElement;\r\n}\r\n\r\n//Step 13.7 of the algorithm\r\nfunction aaRecreateElementFromEntry(p, elementEntry) {\r\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\r\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\r\n\r\n    p.openElements.replace(elementEntry.element, newElement);\r\n    elementEntry.element = newElement;\r\n\r\n    return newElement;\r\n}\r\n\r\n//Step 14 of the algorithm\r\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\r\n    if (p._isElementCausesFosterParenting(commonAncestor)) {\r\n        p._fosterParentElement(lastElement);\r\n    } else {\r\n        const tn = p.treeAdapter.getTagName(commonAncestor);\r\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\r\n\r\n        if (tn === $.TEMPLATE && ns === NS.HTML) {\r\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\r\n        }\r\n\r\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\r\n    }\r\n}\r\n\r\n//Steps 15-19 of the algorithm\r\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\r\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\r\n    const token = formattingElementEntry.token;\r\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\r\n\r\n    p._adoptNodes(furthestBlock, newElement);\r\n    p.treeAdapter.appendChild(furthestBlock, newElement);\r\n\r\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, formattingElementEntry.token);\r\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\r\n\r\n    p.openElements.remove(formattingElementEntry.element);\r\n    p.openElements.insertAfter(furthestBlock, newElement);\r\n}\r\n\r\n//Algorithm entry point\r\nfunction callAdoptionAgency(p, token) {\r\n    let formattingElementEntry;\r\n\r\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\r\n        formattingElementEntry = aaObtainFormattingElementEntry(p, token, formattingElementEntry);\r\n\r\n        if (!formattingElementEntry) {\r\n            break;\r\n        }\r\n\r\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\r\n\r\n        if (!furthestBlock) {\r\n            break;\r\n        }\r\n\r\n        p.activeFormattingElements.bookmark = formattingElementEntry;\r\n\r\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\r\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\r\n\r\n        p.treeAdapter.detachNode(lastElement);\r\n        aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\r\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\r\n    }\r\n}\r\n\r\n//Generic token handlers\r\n//------------------------------------------------------------------\r\nfunction ignoreToken() {\r\n    //NOTE: do nothing =)\r\n}\r\n\r\nfunction misplacedDoctype(p) {\r\n    p._err(ERR.misplacedDoctype);\r\n}\r\n\r\nfunction appendComment(p, token) {\r\n    p._appendCommentNode(token, p.openElements.currentTmplContent || p.openElements.current);\r\n}\r\n\r\nfunction appendCommentToRootHtmlElement(p, token) {\r\n    p._appendCommentNode(token, p.openElements.items[0]);\r\n}\r\n\r\nfunction appendCommentToDocument(p, token) {\r\n    p._appendCommentNode(token, p.document);\r\n}\r\n\r\nfunction insertCharacters(p, token) {\r\n    p._insertCharacters(token);\r\n}\r\n\r\nfunction stopParsing(p) {\r\n    p.stopped = true;\r\n}\r\n\r\n// The \"initial\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction doctypeInInitialMode(p, token) {\r\n    p._setDocumentType(token);\r\n\r\n    const mode = token.forceQuirks ? HTML.DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\r\n\r\n    if (!doctype.isConforming(token)) {\r\n        p._err(ERR.nonConformingDoctype);\r\n    }\r\n\r\n    p.treeAdapter.setDocumentMode(p.document, mode);\r\n\r\n    p.insertionMode = BEFORE_HTML_MODE;\r\n}\r\n\r\nfunction tokenInInitialMode(p, token) {\r\n    p._err(ERR.missingDoctype, { beforeToken: true });\r\n    p.treeAdapter.setDocumentMode(p.document, HTML.DOCUMENT_MODE.QUIRKS);\r\n    p.insertionMode = BEFORE_HTML_MODE;\r\n    p._processToken(token);\r\n}\r\n\r\n// The \"before html\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagBeforeHtml(p, token) {\r\n    if (token.tagName === $.HTML) {\r\n        p._insertElement(token, NS.HTML);\r\n        p.insertionMode = BEFORE_HEAD_MODE;\r\n    } else {\r\n        tokenBeforeHtml(p, token);\r\n    }\r\n}\r\n\r\nfunction endTagBeforeHtml(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\r\n        tokenBeforeHtml(p, token);\r\n    }\r\n}\r\n\r\nfunction tokenBeforeHtml(p, token) {\r\n    p._insertFakeRootElement();\r\n    p.insertionMode = BEFORE_HEAD_MODE;\r\n    p._processToken(token);\r\n}\r\n\r\n// The \"before head\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagBeforeHead(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    if (tn === $.HTML) {\r\n        startTagInBody(p, token);\r\n    } else if (tn === $.HEAD) {\r\n        p._insertElement(token, NS.HTML);\r\n        p.headElement = p.openElements.current;\r\n        p.insertionMode = IN_HEAD_MODE;\r\n    } else {\r\n        tokenBeforeHead(p, token);\r\n    }\r\n}\r\n\r\nfunction endTagBeforeHead(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\r\n        tokenBeforeHead(p, token);\r\n    } else {\r\n        p._err(ERR.endTagWithoutMatchingOpenElement);\r\n    }\r\n}\r\n\r\nfunction tokenBeforeHead(p, token) {\r\n    p._insertFakeElement($.HEAD);\r\n    p.headElement = p.openElements.current;\r\n    p.insertionMode = IN_HEAD_MODE;\r\n    p._processToken(token);\r\n}\r\n\r\n// The \"in head\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInHead(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    if (tn === $.HTML) {\r\n        startTagInBody(p, token);\r\n    } else if (tn === $.BASE || tn === $.BASEFONT || tn === $.BGSOUND || tn === $.LINK || tn === $.META) {\r\n        p._appendElement(token, NS.HTML);\r\n        token.ackSelfClosing = true;\r\n    } else if (tn === $.TITLE) {\r\n        p._switchToTextParsing(token, Tokenizer.MODE.RCDATA);\r\n    } else if (tn === $.NOSCRIPT) {\r\n        if (p.options.scriptingEnabled) {\r\n            p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);\r\n        } else {\r\n            p._insertElement(token, NS.HTML);\r\n            p.insertionMode = IN_HEAD_NO_SCRIPT_MODE;\r\n        }\r\n    } else if (tn === $.NOFRAMES || tn === $.STYLE) {\r\n        p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);\r\n    } else if (tn === $.SCRIPT) {\r\n        p._switchToTextParsing(token, Tokenizer.MODE.SCRIPT_DATA);\r\n    } else if (tn === $.TEMPLATE) {\r\n        p._insertTemplate(token, NS.HTML);\r\n        p.activeFormattingElements.insertMarker();\r\n        p.framesetOk = false;\r\n        p.insertionMode = IN_TEMPLATE_MODE;\r\n        p._pushTmplInsertionMode(IN_TEMPLATE_MODE);\r\n    } else if (tn === $.HEAD) {\r\n        p._err(ERR.misplacedStartTagForHeadElement);\r\n    } else {\r\n        tokenInHead(p, token);\r\n    }\r\n}\r\n\r\nfunction endTagInHead(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    if (tn === $.HEAD) {\r\n        p.openElements.pop();\r\n        p.insertionMode = AFTER_HEAD_MODE;\r\n    } else if (tn === $.BODY || tn === $.BR || tn === $.HTML) {\r\n        tokenInHead(p, token);\r\n    } else if (tn === $.TEMPLATE) {\r\n        if (p.openElements.tmplCount > 0) {\r\n            p.openElements.generateImpliedEndTagsThoroughly();\r\n\r\n            if (p.openElements.currentTagName !== $.TEMPLATE) {\r\n                p._err(ERR.closingOfElementWithOpenChildElements);\r\n            }\r\n\r\n            p.openElements.popUntilTagNamePopped($.TEMPLATE);\r\n            p.activeFormattingElements.clearToLastMarker();\r\n            p._popTmplInsertionMode();\r\n            p._resetInsertionMode();\r\n        } else {\r\n            p._err(ERR.endTagWithoutMatchingOpenElement);\r\n        }\r\n    } else {\r\n        p._err(ERR.endTagWithoutMatchingOpenElement);\r\n    }\r\n}\r\n\r\nfunction tokenInHead(p, token) {\r\n    p.openElements.pop();\r\n    p.insertionMode = AFTER_HEAD_MODE;\r\n    p._processToken(token);\r\n}\r\n\r\n// The \"in head no script\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInHeadNoScript(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    if (tn === $.HTML) {\r\n        startTagInBody(p, token);\r\n    } else if (\r\n        tn === $.BASEFONT ||\r\n        tn === $.BGSOUND ||\r\n        tn === $.HEAD ||\r\n        tn === $.LINK ||\r\n        tn === $.META ||\r\n        tn === $.NOFRAMES ||\r\n        tn === $.STYLE\r\n    ) {\r\n        startTagInHead(p, token);\r\n    } else if (tn === $.NOSCRIPT) {\r\n        p._err(ERR.nestedNoscriptInHead);\r\n    } else {\r\n        tokenInHeadNoScript(p, token);\r\n    }\r\n}\r\n\r\nfunction endTagInHeadNoScript(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    if (tn === $.NOSCRIPT) {\r\n        p.openElements.pop();\r\n        p.insertionMode = IN_HEAD_MODE;\r\n    } else if (tn === $.BR) {\r\n        tokenInHeadNoScript(p, token);\r\n    } else {\r\n        p._err(ERR.endTagWithoutMatchingOpenElement);\r\n    }\r\n}\r\n\r\nfunction tokenInHeadNoScript(p, token) {\r\n    const errCode =\r\n        token.type === Tokenizer.EOF_TOKEN ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\r\n\r\n    p._err(errCode);\r\n    p.openElements.pop();\r\n    p.insertionMode = IN_HEAD_MODE;\r\n    p._processToken(token);\r\n}\r\n\r\n// The \"after head\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagAfterHead(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    if (tn === $.HTML) {\r\n        startTagInBody(p, token);\r\n    } else if (tn === $.BODY) {\r\n        p._insertElement(token, NS.HTML);\r\n        p.framesetOk = false;\r\n        p.insertionMode = IN_BODY_MODE;\r\n    } else if (tn === $.FRAMESET) {\r\n        p._insertElement(token, NS.HTML);\r\n        p.insertionMode = IN_FRAMESET_MODE;\r\n    } else if (\r\n        tn === $.BASE ||\r\n        tn === $.BASEFONT ||\r\n        tn === $.BGSOUND ||\r\n        tn === $.LINK ||\r\n        tn === $.META ||\r\n        tn === $.NOFRAMES ||\r\n        tn === $.SCRIPT ||\r\n        tn === $.STYLE ||\r\n        tn === $.TEMPLATE ||\r\n        tn === $.TITLE\r\n    ) {\r\n        p._err(ERR.abandonedHeadElementChild);\r\n        p.openElements.push(p.headElement);\r\n        startTagInHead(p, token);\r\n        p.openElements.remove(p.headElement);\r\n    } else if (tn === $.HEAD) {\r\n        p._err(ERR.misplacedStartTagForHeadElement);\r\n    } else {\r\n        tokenAfterHead(p, token);\r\n    }\r\n}\r\n\r\nfunction endTagAfterHead(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    if (tn === $.BODY || tn === $.HTML || tn === $.BR) {\r\n        tokenAfterHead(p, token);\r\n    } else if (tn === $.TEMPLATE) {\r\n        endTagInHead(p, token);\r\n    } else {\r\n        p._err(ERR.endTagWithoutMatchingOpenElement);\r\n    }\r\n}\r\n\r\nfunction tokenAfterHead(p, token) {\r\n    p._insertFakeElement($.BODY);\r\n    p.insertionMode = IN_BODY_MODE;\r\n    p._processToken(token);\r\n}\r\n\r\n// The \"in body\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction whitespaceCharacterInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertCharacters(token);\r\n}\r\n\r\nfunction characterInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertCharacters(token);\r\n    p.framesetOk = false;\r\n}\r\n\r\nfunction htmlStartTagInBody(p, token) {\r\n    if (p.openElements.tmplCount === 0) {\r\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\r\n    }\r\n}\r\n\r\nfunction bodyStartTagInBody(p, token) {\r\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\r\n\r\n    if (bodyElement && p.openElements.tmplCount === 0) {\r\n        p.framesetOk = false;\r\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\r\n    }\r\n}\r\n\r\nfunction framesetStartTagInBody(p, token) {\r\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\r\n\r\n    if (p.framesetOk && bodyElement) {\r\n        p.treeAdapter.detachNode(bodyElement);\r\n        p.openElements.popAllUpToHtmlElement();\r\n        p._insertElement(token, NS.HTML);\r\n        p.insertionMode = IN_FRAMESET_MODE;\r\n    }\r\n}\r\n\r\nfunction addressStartTagInBody(p, token) {\r\n    if (p.openElements.hasInButtonScope($.P)) {\r\n        p._closePElement();\r\n    }\r\n\r\n    p._insertElement(token, NS.HTML);\r\n}\r\n\r\nfunction numberedHeaderStartTagInBody(p, token) {\r\n    if (p.openElements.hasInButtonScope($.P)) {\r\n        p._closePElement();\r\n    }\r\n\r\n    const tn = p.openElements.currentTagName;\r\n\r\n    if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) {\r\n        p.openElements.pop();\r\n    }\r\n\r\n    p._insertElement(token, NS.HTML);\r\n}\r\n\r\nfunction preStartTagInBody(p, token) {\r\n    if (p.openElements.hasInButtonScope($.P)) {\r\n        p._closePElement();\r\n    }\r\n\r\n    p._insertElement(token, NS.HTML);\r\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\r\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\r\n    p.skipNextNewLine = true;\r\n    p.framesetOk = false;\r\n}\r\n\r\nfunction formStartTagInBody(p, token) {\r\n    const inTemplate = p.openElements.tmplCount > 0;\r\n\r\n    if (!p.formElement || inTemplate) {\r\n        if (p.openElements.hasInButtonScope($.P)) {\r\n            p._closePElement();\r\n        }\r\n\r\n        p._insertElement(token, NS.HTML);\r\n\r\n        if (!inTemplate) {\r\n            p.formElement = p.openElements.current;\r\n        }\r\n    }\r\n}\r\n\r\nfunction listItemStartTagInBody(p, token) {\r\n    p.framesetOk = false;\r\n\r\n    const tn = token.tagName;\r\n\r\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\r\n        const element = p.openElements.items[i];\r\n        const elementTn = p.treeAdapter.getTagName(element);\r\n        let closeTn = null;\r\n\r\n        if (tn === $.LI && elementTn === $.LI) {\r\n            closeTn = $.LI;\r\n        } else if ((tn === $.DD || tn === $.DT) && (elementTn === $.DD || elementTn === $.DT)) {\r\n            closeTn = elementTn;\r\n        }\r\n\r\n        if (closeTn) {\r\n            p.openElements.generateImpliedEndTagsWithExclusion(closeTn);\r\n            p.openElements.popUntilTagNamePopped(closeTn);\r\n            break;\r\n        }\r\n\r\n        if (elementTn !== $.ADDRESS && elementTn !== $.DIV && elementTn !== $.P && p._isSpecialElement(element)) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (p.openElements.hasInButtonScope($.P)) {\r\n        p._closePElement();\r\n    }\r\n\r\n    p._insertElement(token, NS.HTML);\r\n}\r\n\r\nfunction plaintextStartTagInBody(p, token) {\r\n    if (p.openElements.hasInButtonScope($.P)) {\r\n        p._closePElement();\r\n    }\r\n\r\n    p._insertElement(token, NS.HTML);\r\n    p.tokenizer.state = Tokenizer.MODE.PLAINTEXT;\r\n}\r\n\r\nfunction buttonStartTagInBody(p, token) {\r\n    if (p.openElements.hasInScope($.BUTTON)) {\r\n        p.openElements.generateImpliedEndTags();\r\n        p.openElements.popUntilTagNamePopped($.BUTTON);\r\n    }\r\n\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n    p.framesetOk = false;\r\n}\r\n\r\nfunction aStartTagInBody(p, token) {\r\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName($.A);\r\n\r\n    if (activeElementEntry) {\r\n        callAdoptionAgency(p, token);\r\n        p.openElements.remove(activeElementEntry.element);\r\n        p.activeFormattingElements.removeEntry(activeElementEntry);\r\n    }\r\n\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\r\n}\r\n\r\nfunction bStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\r\n}\r\n\r\nfunction nobrStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n\r\n    if (p.openElements.hasInScope($.NOBR)) {\r\n        callAdoptionAgency(p, token);\r\n        p._reconstructActiveFormattingElements();\r\n    }\r\n\r\n    p._insertElement(token, NS.HTML);\r\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\r\n}\r\n\r\nfunction appletStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n    p.activeFormattingElements.insertMarker();\r\n    p.framesetOk = false;\r\n}\r\n\r\nfunction tableStartTagInBody(p, token) {\r\n    if (\r\n        p.treeAdapter.getDocumentMode(p.document) !== HTML.DOCUMENT_MODE.QUIRKS &&\r\n        p.openElements.hasInButtonScope($.P)\r\n    ) {\r\n        p._closePElement();\r\n    }\r\n\r\n    p._insertElement(token, NS.HTML);\r\n    p.framesetOk = false;\r\n    p.insertionMode = IN_TABLE_MODE;\r\n}\r\n\r\nfunction areaStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._appendElement(token, NS.HTML);\r\n    p.framesetOk = false;\r\n    token.ackSelfClosing = true;\r\n}\r\n\r\nfunction inputStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._appendElement(token, NS.HTML);\r\n\r\n    const inputType = Tokenizer.getTokenAttr(token, ATTRS.TYPE);\r\n\r\n    if (!inputType || inputType.toLowerCase() !== HIDDEN_INPUT_TYPE) {\r\n        p.framesetOk = false;\r\n    }\r\n\r\n    token.ackSelfClosing = true;\r\n}\r\n\r\nfunction paramStartTagInBody(p, token) {\r\n    p._appendElement(token, NS.HTML);\r\n    token.ackSelfClosing = true;\r\n}\r\n\r\nfunction hrStartTagInBody(p, token) {\r\n    if (p.openElements.hasInButtonScope($.P)) {\r\n        p._closePElement();\r\n    }\r\n\r\n    p._appendElement(token, NS.HTML);\r\n    p.framesetOk = false;\r\n    token.ackSelfClosing = true;\r\n}\r\n\r\nfunction imageStartTagInBody(p, token) {\r\n    token.tagName = $.IMG;\r\n    areaStartTagInBody(p, token);\r\n}\r\n\r\nfunction textareaStartTagInBody(p, token) {\r\n    p._insertElement(token, NS.HTML);\r\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\r\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\r\n    p.skipNextNewLine = true;\r\n    p.tokenizer.state = Tokenizer.MODE.RCDATA;\r\n    p.originalInsertionMode = p.insertionMode;\r\n    p.framesetOk = false;\r\n    p.insertionMode = TEXT_MODE;\r\n}\r\n\r\nfunction xmpStartTagInBody(p, token) {\r\n    if (p.openElements.hasInButtonScope($.P)) {\r\n        p._closePElement();\r\n    }\r\n\r\n    p._reconstructActiveFormattingElements();\r\n    p.framesetOk = false;\r\n    p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);\r\n}\r\n\r\nfunction iframeStartTagInBody(p, token) {\r\n    p.framesetOk = false;\r\n    p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);\r\n}\r\n\r\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\r\n//<noembed> as a rawtext.\r\nfunction noembedStartTagInBody(p, token) {\r\n    p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);\r\n}\r\n\r\nfunction selectStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n    p.framesetOk = false;\r\n\r\n    if (\r\n        p.insertionMode === IN_TABLE_MODE ||\r\n        p.insertionMode === IN_CAPTION_MODE ||\r\n        p.insertionMode === IN_TABLE_BODY_MODE ||\r\n        p.insertionMode === IN_ROW_MODE ||\r\n        p.insertionMode === IN_CELL_MODE\r\n    ) {\r\n        p.insertionMode = IN_SELECT_IN_TABLE_MODE;\r\n    } else {\r\n        p.insertionMode = IN_SELECT_MODE;\r\n    }\r\n}\r\n\r\nfunction optgroupStartTagInBody(p, token) {\r\n    if (p.openElements.currentTagName === $.OPTION) {\r\n        p.openElements.pop();\r\n    }\r\n\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n}\r\n\r\nfunction rbStartTagInBody(p, token) {\r\n    if (p.openElements.hasInScope($.RUBY)) {\r\n        p.openElements.generateImpliedEndTags();\r\n    }\r\n\r\n    p._insertElement(token, NS.HTML);\r\n}\r\n\r\nfunction rtStartTagInBody(p, token) {\r\n    if (p.openElements.hasInScope($.RUBY)) {\r\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\r\n    }\r\n\r\n    p._insertElement(token, NS.HTML);\r\n}\r\n\r\nfunction menuStartTagInBody(p, token) {\r\n    if (p.openElements.hasInButtonScope($.P)) {\r\n        p._closePElement();\r\n    }\r\n\r\n    p._insertElement(token, NS.HTML);\r\n}\r\n\r\nfunction mathStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n\r\n    foreignContent.adjustTokenMathMLAttrs(token);\r\n    foreignContent.adjustTokenXMLAttrs(token);\r\n\r\n    if (token.selfClosing) {\r\n        p._appendElement(token, NS.MATHML);\r\n    } else {\r\n        p._insertElement(token, NS.MATHML);\r\n    }\r\n\r\n    token.ackSelfClosing = true;\r\n}\r\n\r\nfunction svgStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n\r\n    foreignContent.adjustTokenSVGAttrs(token);\r\n    foreignContent.adjustTokenXMLAttrs(token);\r\n\r\n    if (token.selfClosing) {\r\n        p._appendElement(token, NS.SVG);\r\n    } else {\r\n        p._insertElement(token, NS.SVG);\r\n    }\r\n\r\n    token.ackSelfClosing = true;\r\n}\r\n\r\nfunction genericStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n}\r\n\r\n//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.\r\n//It's faster than using dictionary.\r\nfunction startTagInBody(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    switch (tn.length) {\r\n        case 1:\r\n            if (tn === $.I || tn === $.S || tn === $.B || tn === $.U) {\r\n                bStartTagInBody(p, token);\r\n            } else if (tn === $.P) {\r\n                addressStartTagInBody(p, token);\r\n            } else if (tn === $.A) {\r\n                aStartTagInBody(p, token);\r\n            } else {\r\n                genericStartTagInBody(p, token);\r\n            }\r\n\r\n            break;\r\n\r\n        case 2:\r\n            if (tn === $.DL || tn === $.OL || tn === $.UL) {\r\n                addressStartTagInBody(p, token);\r\n            } else if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) {\r\n                numberedHeaderStartTagInBody(p, token);\r\n            } else if (tn === $.LI || tn === $.DD || tn === $.DT) {\r\n                listItemStartTagInBody(p, token);\r\n            } else if (tn === $.EM || tn === $.TT) {\r\n                bStartTagInBody(p, token);\r\n            } else if (tn === $.BR) {\r\n                areaStartTagInBody(p, token);\r\n            } else if (tn === $.HR) {\r\n                hrStartTagInBody(p, token);\r\n            } else if (tn === $.RB) {\r\n                rbStartTagInBody(p, token);\r\n            } else if (tn === $.RT || tn === $.RP) {\r\n                rtStartTagInBody(p, token);\r\n            } else if (tn !== $.TH && tn !== $.TD && tn !== $.TR) {\r\n                genericStartTagInBody(p, token);\r\n            }\r\n\r\n            break;\r\n\r\n        case 3:\r\n            if (tn === $.DIV || tn === $.DIR || tn === $.NAV) {\r\n                addressStartTagInBody(p, token);\r\n            } else if (tn === $.PRE) {\r\n                preStartTagInBody(p, token);\r\n            } else if (tn === $.BIG) {\r\n                bStartTagInBody(p, token);\r\n            } else if (tn === $.IMG || tn === $.WBR) {\r\n                areaStartTagInBody(p, token);\r\n            } else if (tn === $.XMP) {\r\n                xmpStartTagInBody(p, token);\r\n            } else if (tn === $.SVG) {\r\n                svgStartTagInBody(p, token);\r\n            } else if (tn === $.RTC) {\r\n                rbStartTagInBody(p, token);\r\n            } else if (tn !== $.COL) {\r\n                genericStartTagInBody(p, token);\r\n            }\r\n\r\n            break;\r\n\r\n        case 4:\r\n            if (tn === $.HTML) {\r\n                htmlStartTagInBody(p, token);\r\n            } else if (tn === $.BASE || tn === $.LINK || tn === $.META) {\r\n                startTagInHead(p, token);\r\n            } else if (tn === $.BODY) {\r\n                bodyStartTagInBody(p, token);\r\n            } else if (tn === $.MAIN || tn === $.MENU) {\r\n                addressStartTagInBody(p, token);\r\n            } else if (tn === $.FORM) {\r\n                formStartTagInBody(p, token);\r\n            } else if (tn === $.CODE || tn === $.FONT) {\r\n                bStartTagInBody(p, token);\r\n            } else if (tn === $.NOBR) {\r\n                nobrStartTagInBody(p, token);\r\n            } else if (tn === $.AREA) {\r\n                areaStartTagInBody(p, token);\r\n            } else if (tn === $.MATH) {\r\n                mathStartTagInBody(p, token);\r\n            } else if (tn === $.MENU) {\r\n                menuStartTagInBody(p, token);\r\n            } else if (tn !== $.HEAD) {\r\n                genericStartTagInBody(p, token);\r\n            }\r\n\r\n            break;\r\n\r\n        case 5:\r\n            if (tn === $.STYLE || tn === $.TITLE) {\r\n                startTagInHead(p, token);\r\n            } else if (tn === $.ASIDE) {\r\n                addressStartTagInBody(p, token);\r\n            } else if (tn === $.SMALL) {\r\n                bStartTagInBody(p, token);\r\n            } else if (tn === $.TABLE) {\r\n                tableStartTagInBody(p, token);\r\n            } else if (tn === $.EMBED) {\r\n                areaStartTagInBody(p, token);\r\n            } else if (tn === $.INPUT) {\r\n                inputStartTagInBody(p, token);\r\n            } else if (tn === $.PARAM || tn === $.TRACK) {\r\n                paramStartTagInBody(p, token);\r\n            } else if (tn === $.IMAGE) {\r\n                imageStartTagInBody(p, token);\r\n            } else if (tn !== $.FRAME && tn !== $.TBODY && tn !== $.TFOOT && tn !== $.THEAD) {\r\n                genericStartTagInBody(p, token);\r\n            }\r\n\r\n            break;\r\n\r\n        case 6:\r\n            if (tn === $.SCRIPT) {\r\n                startTagInHead(p, token);\r\n            } else if (\r\n                tn === $.CENTER ||\r\n                tn === $.FIGURE ||\r\n                tn === $.FOOTER ||\r\n                tn === $.HEADER ||\r\n                tn === $.HGROUP ||\r\n                tn === $.DIALOG\r\n            ) {\r\n                addressStartTagInBody(p, token);\r\n            } else if (tn === $.BUTTON) {\r\n                buttonStartTagInBody(p, token);\r\n            } else if (tn === $.STRIKE || tn === $.STRONG) {\r\n                bStartTagInBody(p, token);\r\n            } else if (tn === $.APPLET || tn === $.OBJECT) {\r\n                appletStartTagInBody(p, token);\r\n            } else if (tn === $.KEYGEN) {\r\n                areaStartTagInBody(p, token);\r\n            } else if (tn === $.SOURCE) {\r\n                paramStartTagInBody(p, token);\r\n            } else if (tn === $.IFRAME) {\r\n                iframeStartTagInBody(p, token);\r\n            } else if (tn === $.SELECT) {\r\n                selectStartTagInBody(p, token);\r\n            } else if (tn === $.OPTION) {\r\n                optgroupStartTagInBody(p, token);\r\n            } else {\r\n                genericStartTagInBody(p, token);\r\n            }\r\n\r\n            break;\r\n\r\n        case 7:\r\n            if (tn === $.BGSOUND) {\r\n                startTagInHead(p, token);\r\n            } else if (\r\n                tn === $.DETAILS ||\r\n                tn === $.ADDRESS ||\r\n                tn === $.ARTICLE ||\r\n                tn === $.SECTION ||\r\n                tn === $.SUMMARY\r\n            ) {\r\n                addressStartTagInBody(p, token);\r\n            } else if (tn === $.LISTING) {\r\n                preStartTagInBody(p, token);\r\n            } else if (tn === $.MARQUEE) {\r\n                appletStartTagInBody(p, token);\r\n            } else if (tn === $.NOEMBED) {\r\n                noembedStartTagInBody(p, token);\r\n            } else if (tn !== $.CAPTION) {\r\n                genericStartTagInBody(p, token);\r\n            }\r\n\r\n            break;\r\n\r\n        case 8:\r\n            if (tn === $.BASEFONT) {\r\n                startTagInHead(p, token);\r\n            } else if (tn === $.FRAMESET) {\r\n                framesetStartTagInBody(p, token);\r\n            } else if (tn === $.FIELDSET) {\r\n                addressStartTagInBody(p, token);\r\n            } else if (tn === $.TEXTAREA) {\r\n                textareaStartTagInBody(p, token);\r\n            } else if (tn === $.TEMPLATE) {\r\n                startTagInHead(p, token);\r\n            } else if (tn === $.NOSCRIPT) {\r\n                if (p.options.scriptingEnabled) {\r\n                    noembedStartTagInBody(p, token);\r\n                } else {\r\n                    genericStartTagInBody(p, token);\r\n                }\r\n            } else if (tn === $.OPTGROUP) {\r\n                optgroupStartTagInBody(p, token);\r\n            } else if (tn !== $.COLGROUP) {\r\n                genericStartTagInBody(p, token);\r\n            }\r\n\r\n            break;\r\n\r\n        case 9:\r\n            if (tn === $.PLAINTEXT) {\r\n                plaintextStartTagInBody(p, token);\r\n            } else {\r\n                genericStartTagInBody(p, token);\r\n            }\r\n\r\n            break;\r\n\r\n        case 10:\r\n            if (tn === $.BLOCKQUOTE || tn === $.FIGCAPTION) {\r\n                addressStartTagInBody(p, token);\r\n            } else {\r\n                genericStartTagInBody(p, token);\r\n            }\r\n\r\n            break;\r\n\r\n        default:\r\n            genericStartTagInBody(p, token);\r\n    }\r\n}\r\n\r\nfunction bodyEndTagInBody(p) {\r\n    if (p.openElements.hasInScope($.BODY)) {\r\n        p.insertionMode = AFTER_BODY_MODE;\r\n    }\r\n}\r\n\r\nfunction htmlEndTagInBody(p, token) {\r\n    if (p.openElements.hasInScope($.BODY)) {\r\n        p.insertionMode = AFTER_BODY_MODE;\r\n        p._processToken(token);\r\n    }\r\n}\r\n\r\nfunction addressEndTagInBody(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    if (p.openElements.hasInScope(tn)) {\r\n        p.openElements.generateImpliedEndTags();\r\n        p.openElements.popUntilTagNamePopped(tn);\r\n    }\r\n}\r\n\r\nfunction formEndTagInBody(p) {\r\n    const inTemplate = p.openElements.tmplCount > 0;\r\n    const formElement = p.formElement;\r\n\r\n    if (!inTemplate) {\r\n        p.formElement = null;\r\n    }\r\n\r\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\r\n        p.openElements.generateImpliedEndTags();\r\n\r\n        if (inTemplate) {\r\n            p.openElements.popUntilTagNamePopped($.FORM);\r\n        } else {\r\n            p.openElements.remove(formElement);\r\n        }\r\n    }\r\n}\r\n\r\nfunction pEndTagInBody(p) {\r\n    if (!p.openElements.hasInButtonScope($.P)) {\r\n        p._insertFakeElement($.P);\r\n    }\r\n\r\n    p._closePElement();\r\n}\r\n\r\nfunction liEndTagInBody(p) {\r\n    if (p.openElements.hasInListItemScope($.LI)) {\r\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\r\n        p.openElements.popUntilTagNamePopped($.LI);\r\n    }\r\n}\r\n\r\nfunction ddEndTagInBody(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    if (p.openElements.hasInScope(tn)) {\r\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\r\n        p.openElements.popUntilTagNamePopped(tn);\r\n    }\r\n}\r\n\r\nfunction numberedHeaderEndTagInBody(p) {\r\n    if (p.openElements.hasNumberedHeaderInScope()) {\r\n        p.openElements.generateImpliedEndTags();\r\n        p.openElements.popUntilNumberedHeaderPopped();\r\n    }\r\n}\r\n\r\nfunction appletEndTagInBody(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    if (p.openElements.hasInScope(tn)) {\r\n        p.openElements.generateImpliedEndTags();\r\n        p.openElements.popUntilTagNamePopped(tn);\r\n        p.activeFormattingElements.clearToLastMarker();\r\n    }\r\n}\r\n\r\nfunction brEndTagInBody(p) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertFakeElement($.BR);\r\n    p.openElements.pop();\r\n    p.framesetOk = false;\r\n}\r\n\r\nfunction genericEndTagInBody(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    for (let i = p.openElements.stackTop; i > 0; i--) {\r\n        const element = p.openElements.items[i];\r\n\r\n        if (p.treeAdapter.getTagName(element) === tn) {\r\n            p.openElements.generateImpliedEndTagsWithExclusion(tn);\r\n            p.openElements.popUntilElementPopped(element);\r\n            break;\r\n        }\r\n\r\n        if (p._isSpecialElement(element)) {\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\n//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.\r\n//It's faster than using dictionary.\r\nfunction endTagInBody(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    switch (tn.length) {\r\n        case 1:\r\n            if (tn === $.A || tn === $.B || tn === $.I || tn === $.S || tn === $.U) {\r\n                callAdoptionAgency(p, token);\r\n            } else if (tn === $.P) {\r\n                pEndTagInBody(p, token);\r\n            } else {\r\n                genericEndTagInBody(p, token);\r\n            }\r\n\r\n            break;\r\n\r\n        case 2:\r\n            if (tn === $.DL || tn === $.UL || tn === $.OL) {\r\n                addressEndTagInBody(p, token);\r\n            } else if (tn === $.LI) {\r\n                liEndTagInBody(p, token);\r\n            } else if (tn === $.DD || tn === $.DT) {\r\n                ddEndTagInBody(p, token);\r\n            } else if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) {\r\n                numberedHeaderEndTagInBody(p, token);\r\n            } else if (tn === $.BR) {\r\n                brEndTagInBody(p, token);\r\n            } else if (tn === $.EM || tn === $.TT) {\r\n                callAdoptionAgency(p, token);\r\n            } else {\r\n                genericEndTagInBody(p, token);\r\n            }\r\n\r\n            break;\r\n\r\n        case 3:\r\n            if (tn === $.BIG) {\r\n                callAdoptionAgency(p, token);\r\n            } else if (tn === $.DIR || tn === $.DIV || tn === $.NAV || tn === $.PRE) {\r\n                addressEndTagInBody(p, token);\r\n            } else {\r\n                genericEndTagInBody(p, token);\r\n            }\r\n\r\n            break;\r\n\r\n        case 4:\r\n            if (tn === $.BODY) {\r\n                bodyEndTagInBody(p, token);\r\n            } else if (tn === $.HTML) {\r\n                htmlEndTagInBody(p, token);\r\n            } else if (tn === $.FORM) {\r\n                formEndTagInBody(p, token);\r\n            } else if (tn === $.CODE || tn === $.FONT || tn === $.NOBR) {\r\n                callAdoptionAgency(p, token);\r\n            } else if (tn === $.MAIN || tn === $.MENU) {\r\n                addressEndTagInBody(p, token);\r\n            } else {\r\n                genericEndTagInBody(p, token);\r\n            }\r\n\r\n            break;\r\n\r\n        case 5:\r\n            if (tn === $.ASIDE) {\r\n                addressEndTagInBody(p, token);\r\n            } else if (tn === $.SMALL) {\r\n                callAdoptionAgency(p, token);\r\n            } else {\r\n                genericEndTagInBody(p, token);\r\n            }\r\n\r\n            break;\r\n\r\n        case 6:\r\n            if (\r\n                tn === $.CENTER ||\r\n                tn === $.FIGURE ||\r\n                tn === $.FOOTER ||\r\n                tn === $.HEADER ||\r\n                tn === $.HGROUP ||\r\n                tn === $.DIALOG\r\n            ) {\r\n                addressEndTagInBody(p, token);\r\n            } else if (tn === $.APPLET || tn === $.OBJECT) {\r\n                appletEndTagInBody(p, token);\r\n            } else if (tn === $.STRIKE || tn === $.STRONG) {\r\n                callAdoptionAgency(p, token);\r\n            } else {\r\n                genericEndTagInBody(p, token);\r\n            }\r\n\r\n            break;\r\n\r\n        case 7:\r\n            if (\r\n                tn === $.ADDRESS ||\r\n                tn === $.ARTICLE ||\r\n                tn === $.DETAILS ||\r\n                tn === $.SECTION ||\r\n                tn === $.SUMMARY ||\r\n                tn === $.LISTING\r\n            ) {\r\n                addressEndTagInBody(p, token);\r\n            } else if (tn === $.MARQUEE) {\r\n                appletEndTagInBody(p, token);\r\n            } else {\r\n                genericEndTagInBody(p, token);\r\n            }\r\n\r\n            break;\r\n\r\n        case 8:\r\n            if (tn === $.FIELDSET) {\r\n                addressEndTagInBody(p, token);\r\n            } else if (tn === $.TEMPLATE) {\r\n                endTagInHead(p, token);\r\n            } else {\r\n                genericEndTagInBody(p, token);\r\n            }\r\n\r\n            break;\r\n\r\n        case 10:\r\n            if (tn === $.BLOCKQUOTE || tn === $.FIGCAPTION) {\r\n                addressEndTagInBody(p, token);\r\n            } else {\r\n                genericEndTagInBody(p, token);\r\n            }\r\n\r\n            break;\r\n\r\n        default:\r\n            genericEndTagInBody(p, token);\r\n    }\r\n}\r\n\r\nfunction eofInBody(p, token) {\r\n    if (p.tmplInsertionModeStackTop > -1) {\r\n        eofInTemplate(p, token);\r\n    } else {\r\n        p.stopped = true;\r\n    }\r\n}\r\n\r\n// The \"text\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction endTagInText(p, token) {\r\n    if (token.tagName === $.SCRIPT) {\r\n        p.pendingScript = p.openElements.current;\r\n    }\r\n\r\n    p.openElements.pop();\r\n    p.insertionMode = p.originalInsertionMode;\r\n}\r\n\r\nfunction eofInText(p, token) {\r\n    p._err(ERR.eofInElementThatCanContainOnlyText);\r\n    p.openElements.pop();\r\n    p.insertionMode = p.originalInsertionMode;\r\n    p._processToken(token);\r\n}\r\n\r\n// The \"in table\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction characterInTable(p, token) {\r\n    const curTn = p.openElements.currentTagName;\r\n\r\n    if (curTn === $.TABLE || curTn === $.TBODY || curTn === $.TFOOT || curTn === $.THEAD || curTn === $.TR) {\r\n        p.pendingCharacterTokens = [];\r\n        p.hasNonWhitespacePendingCharacterToken = false;\r\n        p.originalInsertionMode = p.insertionMode;\r\n        p.insertionMode = IN_TABLE_TEXT_MODE;\r\n        p._processToken(token);\r\n    } else {\r\n        tokenInTable(p, token);\r\n    }\r\n}\r\n\r\nfunction captionStartTagInTable(p, token) {\r\n    p.openElements.clearBackToTableContext();\r\n    p.activeFormattingElements.insertMarker();\r\n    p._insertElement(token, NS.HTML);\r\n    p.insertionMode = IN_CAPTION_MODE;\r\n}\r\n\r\nfunction colgroupStartTagInTable(p, token) {\r\n    p.openElements.clearBackToTableContext();\r\n    p._insertElement(token, NS.HTML);\r\n    p.insertionMode = IN_COLUMN_GROUP_MODE;\r\n}\r\n\r\nfunction colStartTagInTable(p, token) {\r\n    p.openElements.clearBackToTableContext();\r\n    p._insertFakeElement($.COLGROUP);\r\n    p.insertionMode = IN_COLUMN_GROUP_MODE;\r\n    p._processToken(token);\r\n}\r\n\r\nfunction tbodyStartTagInTable(p, token) {\r\n    p.openElements.clearBackToTableContext();\r\n    p._insertElement(token, NS.HTML);\r\n    p.insertionMode = IN_TABLE_BODY_MODE;\r\n}\r\n\r\nfunction tdStartTagInTable(p, token) {\r\n    p.openElements.clearBackToTableContext();\r\n    p._insertFakeElement($.TBODY);\r\n    p.insertionMode = IN_TABLE_BODY_MODE;\r\n    p._processToken(token);\r\n}\r\n\r\nfunction tableStartTagInTable(p, token) {\r\n    if (p.openElements.hasInTableScope($.TABLE)) {\r\n        p.openElements.popUntilTagNamePopped($.TABLE);\r\n        p._resetInsertionMode();\r\n        p._processToken(token);\r\n    }\r\n}\r\n\r\nfunction inputStartTagInTable(p, token) {\r\n    const inputType = Tokenizer.getTokenAttr(token, ATTRS.TYPE);\r\n\r\n    if (inputType && inputType.toLowerCase() === HIDDEN_INPUT_TYPE) {\r\n        p._appendElement(token, NS.HTML);\r\n    } else {\r\n        tokenInTable(p, token);\r\n    }\r\n\r\n    token.ackSelfClosing = true;\r\n}\r\n\r\nfunction formStartTagInTable(p, token) {\r\n    if (!p.formElement && p.openElements.tmplCount === 0) {\r\n        p._insertElement(token, NS.HTML);\r\n        p.formElement = p.openElements.current;\r\n        p.openElements.pop();\r\n    }\r\n}\r\n\r\nfunction startTagInTable(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    switch (tn.length) {\r\n        case 2:\r\n            if (tn === $.TD || tn === $.TH || tn === $.TR) {\r\n                tdStartTagInTable(p, token);\r\n            } else {\r\n                tokenInTable(p, token);\r\n            }\r\n\r\n            break;\r\n\r\n        case 3:\r\n            if (tn === $.COL) {\r\n                colStartTagInTable(p, token);\r\n            } else {\r\n                tokenInTable(p, token);\r\n            }\r\n\r\n            break;\r\n\r\n        case 4:\r\n            if (tn === $.FORM) {\r\n                formStartTagInTable(p, token);\r\n            } else {\r\n                tokenInTable(p, token);\r\n            }\r\n\r\n            break;\r\n\r\n        case 5:\r\n            if (tn === $.TABLE) {\r\n                tableStartTagInTable(p, token);\r\n            } else if (tn === $.STYLE) {\r\n                startTagInHead(p, token);\r\n            } else if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {\r\n                tbodyStartTagInTable(p, token);\r\n            } else if (tn === $.INPUT) {\r\n                inputStartTagInTable(p, token);\r\n            } else {\r\n                tokenInTable(p, token);\r\n            }\r\n\r\n            break;\r\n\r\n        case 6:\r\n            if (tn === $.SCRIPT) {\r\n                startTagInHead(p, token);\r\n            } else {\r\n                tokenInTable(p, token);\r\n            }\r\n\r\n            break;\r\n\r\n        case 7:\r\n            if (tn === $.CAPTION) {\r\n                captionStartTagInTable(p, token);\r\n            } else {\r\n                tokenInTable(p, token);\r\n            }\r\n\r\n            break;\r\n\r\n        case 8:\r\n            if (tn === $.COLGROUP) {\r\n                colgroupStartTagInTable(p, token);\r\n            } else if (tn === $.TEMPLATE) {\r\n                startTagInHead(p, token);\r\n            } else {\r\n                tokenInTable(p, token);\r\n            }\r\n\r\n            break;\r\n\r\n        default:\r\n            tokenInTable(p, token);\r\n    }\r\n}\r\n\r\nfunction endTagInTable(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    if (tn === $.TABLE) {\r\n        if (p.openElements.hasInTableScope($.TABLE)) {\r\n            p.openElements.popUntilTagNamePopped($.TABLE);\r\n            p._resetInsertionMode();\r\n        }\r\n    } else if (tn === $.TEMPLATE) {\r\n        endTagInHead(p, token);\r\n    } else if (\r\n        tn !== $.BODY &&\r\n        tn !== $.CAPTION &&\r\n        tn !== $.COL &&\r\n        tn !== $.COLGROUP &&\r\n        tn !== $.HTML &&\r\n        tn !== $.TBODY &&\r\n        tn !== $.TD &&\r\n        tn !== $.TFOOT &&\r\n        tn !== $.TH &&\r\n        tn !== $.THEAD &&\r\n        tn !== $.TR\r\n    ) {\r\n        tokenInTable(p, token);\r\n    }\r\n}\r\n\r\nfunction tokenInTable(p, token) {\r\n    const savedFosterParentingState = p.fosterParentingEnabled;\r\n\r\n    p.fosterParentingEnabled = true;\r\n    p._processTokenInBodyMode(token);\r\n    p.fosterParentingEnabled = savedFosterParentingState;\r\n}\r\n\r\n// The \"in table text\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction whitespaceCharacterInTableText(p, token) {\r\n    p.pendingCharacterTokens.push(token);\r\n}\r\n\r\nfunction characterInTableText(p, token) {\r\n    p.pendingCharacterTokens.push(token);\r\n    p.hasNonWhitespacePendingCharacterToken = true;\r\n}\r\n\r\nfunction tokenInTableText(p, token) {\r\n    let i = 0;\r\n\r\n    if (p.hasNonWhitespacePendingCharacterToken) {\r\n        for (; i < p.pendingCharacterTokens.length; i++) {\r\n            tokenInTable(p, p.pendingCharacterTokens[i]);\r\n        }\r\n    } else {\r\n        for (; i < p.pendingCharacterTokens.length; i++) {\r\n            p._insertCharacters(p.pendingCharacterTokens[i]);\r\n        }\r\n    }\r\n\r\n    p.insertionMode = p.originalInsertionMode;\r\n    p._processToken(token);\r\n}\r\n\r\n// The \"in caption\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInCaption(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    if (\r\n        tn === $.CAPTION ||\r\n        tn === $.COL ||\r\n        tn === $.COLGROUP ||\r\n        tn === $.TBODY ||\r\n        tn === $.TD ||\r\n        tn === $.TFOOT ||\r\n        tn === $.TH ||\r\n        tn === $.THEAD ||\r\n        tn === $.TR\r\n    ) {\r\n        if (p.openElements.hasInTableScope($.CAPTION)) {\r\n            p.openElements.generateImpliedEndTags();\r\n            p.openElements.popUntilTagNamePopped($.CAPTION);\r\n            p.activeFormattingElements.clearToLastMarker();\r\n            p.insertionMode = IN_TABLE_MODE;\r\n            p._processToken(token);\r\n        }\r\n    } else {\r\n        startTagInBody(p, token);\r\n    }\r\n}\r\n\r\nfunction endTagInCaption(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    if (tn === $.CAPTION || tn === $.TABLE) {\r\n        if (p.openElements.hasInTableScope($.CAPTION)) {\r\n            p.openElements.generateImpliedEndTags();\r\n            p.openElements.popUntilTagNamePopped($.CAPTION);\r\n            p.activeFormattingElements.clearToLastMarker();\r\n            p.insertionMode = IN_TABLE_MODE;\r\n\r\n            if (tn === $.TABLE) {\r\n                p._processToken(token);\r\n            }\r\n        }\r\n    } else if (\r\n        tn !== $.BODY &&\r\n        tn !== $.COL &&\r\n        tn !== $.COLGROUP &&\r\n        tn !== $.HTML &&\r\n        tn !== $.TBODY &&\r\n        tn !== $.TD &&\r\n        tn !== $.TFOOT &&\r\n        tn !== $.TH &&\r\n        tn !== $.THEAD &&\r\n        tn !== $.TR\r\n    ) {\r\n        endTagInBody(p, token);\r\n    }\r\n}\r\n\r\n// The \"in column group\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInColumnGroup(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    if (tn === $.HTML) {\r\n        startTagInBody(p, token);\r\n    } else if (tn === $.COL) {\r\n        p._appendElement(token, NS.HTML);\r\n        token.ackSelfClosing = true;\r\n    } else if (tn === $.TEMPLATE) {\r\n        startTagInHead(p, token);\r\n    } else {\r\n        tokenInColumnGroup(p, token);\r\n    }\r\n}\r\n\r\nfunction endTagInColumnGroup(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    if (tn === $.COLGROUP) {\r\n        if (p.openElements.currentTagName === $.COLGROUP) {\r\n            p.openElements.pop();\r\n            p.insertionMode = IN_TABLE_MODE;\r\n        }\r\n    } else if (tn === $.TEMPLATE) {\r\n        endTagInHead(p, token);\r\n    } else if (tn !== $.COL) {\r\n        tokenInColumnGroup(p, token);\r\n    }\r\n}\r\n\r\nfunction tokenInColumnGroup(p, token) {\r\n    if (p.openElements.currentTagName === $.COLGROUP) {\r\n        p.openElements.pop();\r\n        p.insertionMode = IN_TABLE_MODE;\r\n        p._processToken(token);\r\n    }\r\n}\r\n\r\n// The \"in table body\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInTableBody(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    if (tn === $.TR) {\r\n        p.openElements.clearBackToTableBodyContext();\r\n        p._insertElement(token, NS.HTML);\r\n        p.insertionMode = IN_ROW_MODE;\r\n    } else if (tn === $.TH || tn === $.TD) {\r\n        p.openElements.clearBackToTableBodyContext();\r\n        p._insertFakeElement($.TR);\r\n        p.insertionMode = IN_ROW_MODE;\r\n        p._processToken(token);\r\n    } else if (\r\n        tn === $.CAPTION ||\r\n        tn === $.COL ||\r\n        tn === $.COLGROUP ||\r\n        tn === $.TBODY ||\r\n        tn === $.TFOOT ||\r\n        tn === $.THEAD\r\n    ) {\r\n        if (p.openElements.hasTableBodyContextInTableScope()) {\r\n            p.openElements.clearBackToTableBodyContext();\r\n            p.openElements.pop();\r\n            p.insertionMode = IN_TABLE_MODE;\r\n            p._processToken(token);\r\n        }\r\n    } else {\r\n        startTagInTable(p, token);\r\n    }\r\n}\r\n\r\nfunction endTagInTableBody(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {\r\n        if (p.openElements.hasInTableScope(tn)) {\r\n            p.openElements.clearBackToTableBodyContext();\r\n            p.openElements.pop();\r\n            p.insertionMode = IN_TABLE_MODE;\r\n        }\r\n    } else if (tn === $.TABLE) {\r\n        if (p.openElements.hasTableBodyContextInTableScope()) {\r\n            p.openElements.clearBackToTableBodyContext();\r\n            p.openElements.pop();\r\n            p.insertionMode = IN_TABLE_MODE;\r\n            p._processToken(token);\r\n        }\r\n    } else if (\r\n        (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP) ||\r\n        (tn !== $.HTML && tn !== $.TD && tn !== $.TH && tn !== $.TR)\r\n    ) {\r\n        endTagInTable(p, token);\r\n    }\r\n}\r\n\r\n// The \"in row\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInRow(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    if (tn === $.TH || tn === $.TD) {\r\n        p.openElements.clearBackToTableRowContext();\r\n        p._insertElement(token, NS.HTML);\r\n        p.insertionMode = IN_CELL_MODE;\r\n        p.activeFormattingElements.insertMarker();\r\n    } else if (\r\n        tn === $.CAPTION ||\r\n        tn === $.COL ||\r\n        tn === $.COLGROUP ||\r\n        tn === $.TBODY ||\r\n        tn === $.TFOOT ||\r\n        tn === $.THEAD ||\r\n        tn === $.TR\r\n    ) {\r\n        if (p.openElements.hasInTableScope($.TR)) {\r\n            p.openElements.clearBackToTableRowContext();\r\n            p.openElements.pop();\r\n            p.insertionMode = IN_TABLE_BODY_MODE;\r\n            p._processToken(token);\r\n        }\r\n    } else {\r\n        startTagInTable(p, token);\r\n    }\r\n}\r\n\r\nfunction endTagInRow(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    if (tn === $.TR) {\r\n        if (p.openElements.hasInTableScope($.TR)) {\r\n            p.openElements.clearBackToTableRowContext();\r\n            p.openElements.pop();\r\n            p.insertionMode = IN_TABLE_BODY_MODE;\r\n        }\r\n    } else if (tn === $.TABLE) {\r\n        if (p.openElements.hasInTableScope($.TR)) {\r\n            p.openElements.clearBackToTableRowContext();\r\n            p.openElements.pop();\r\n            p.insertionMode = IN_TABLE_BODY_MODE;\r\n            p._processToken(token);\r\n        }\r\n    } else if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {\r\n        if (p.openElements.hasInTableScope(tn) || p.openElements.hasInTableScope($.TR)) {\r\n            p.openElements.clearBackToTableRowContext();\r\n            p.openElements.pop();\r\n            p.insertionMode = IN_TABLE_BODY_MODE;\r\n            p._processToken(token);\r\n        }\r\n    } else if (\r\n        (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP) ||\r\n        (tn !== $.HTML && tn !== $.TD && tn !== $.TH)\r\n    ) {\r\n        endTagInTable(p, token);\r\n    }\r\n}\r\n\r\n// The \"in cell\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInCell(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    if (\r\n        tn === $.CAPTION ||\r\n        tn === $.COL ||\r\n        tn === $.COLGROUP ||\r\n        tn === $.TBODY ||\r\n        tn === $.TD ||\r\n        tn === $.TFOOT ||\r\n        tn === $.TH ||\r\n        tn === $.THEAD ||\r\n        tn === $.TR\r\n    ) {\r\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\r\n            p._closeTableCell();\r\n            p._processToken(token);\r\n        }\r\n    } else {\r\n        startTagInBody(p, token);\r\n    }\r\n}\r\n\r\nfunction endTagInCell(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    if (tn === $.TD || tn === $.TH) {\r\n        if (p.openElements.hasInTableScope(tn)) {\r\n            p.openElements.generateImpliedEndTags();\r\n            p.openElements.popUntilTagNamePopped(tn);\r\n            p.activeFormattingElements.clearToLastMarker();\r\n            p.insertionMode = IN_ROW_MODE;\r\n        }\r\n    } else if (tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD || tn === $.TR) {\r\n        if (p.openElements.hasInTableScope(tn)) {\r\n            p._closeTableCell();\r\n            p._processToken(token);\r\n        }\r\n    } else if (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP && tn !== $.HTML) {\r\n        endTagInBody(p, token);\r\n    }\r\n}\r\n\r\n// The \"in select\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInSelect(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    if (tn === $.HTML) {\r\n        startTagInBody(p, token);\r\n    } else if (tn === $.OPTION) {\r\n        if (p.openElements.currentTagName === $.OPTION) {\r\n            p.openElements.pop();\r\n        }\r\n\r\n        p._insertElement(token, NS.HTML);\r\n    } else if (tn === $.OPTGROUP) {\r\n        if (p.openElements.currentTagName === $.OPTION) {\r\n            p.openElements.pop();\r\n        }\r\n\r\n        if (p.openElements.currentTagName === $.OPTGROUP) {\r\n            p.openElements.pop();\r\n        }\r\n\r\n        p._insertElement(token, NS.HTML);\r\n    } else if (tn === $.INPUT || tn === $.KEYGEN || tn === $.TEXTAREA || tn === $.SELECT) {\r\n        if (p.openElements.hasInSelectScope($.SELECT)) {\r\n            p.openElements.popUntilTagNamePopped($.SELECT);\r\n            p._resetInsertionMode();\r\n\r\n            if (tn !== $.SELECT) {\r\n                p._processToken(token);\r\n            }\r\n        }\r\n    } else if (tn === $.SCRIPT || tn === $.TEMPLATE) {\r\n        startTagInHead(p, token);\r\n    }\r\n}\r\n\r\nfunction endTagInSelect(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    if (tn === $.OPTGROUP) {\r\n        const prevOpenElement = p.openElements.items[p.openElements.stackTop - 1];\r\n        const prevOpenElementTn = prevOpenElement && p.treeAdapter.getTagName(prevOpenElement);\r\n\r\n        if (p.openElements.currentTagName === $.OPTION && prevOpenElementTn === $.OPTGROUP) {\r\n            p.openElements.pop();\r\n        }\r\n\r\n        if (p.openElements.currentTagName === $.OPTGROUP) {\r\n            p.openElements.pop();\r\n        }\r\n    } else if (tn === $.OPTION) {\r\n        if (p.openElements.currentTagName === $.OPTION) {\r\n            p.openElements.pop();\r\n        }\r\n    } else if (tn === $.SELECT && p.openElements.hasInSelectScope($.SELECT)) {\r\n        p.openElements.popUntilTagNamePopped($.SELECT);\r\n        p._resetInsertionMode();\r\n    } else if (tn === $.TEMPLATE) {\r\n        endTagInHead(p, token);\r\n    }\r\n}\r\n\r\n//12.2.5.4.17 The \"in select in table\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInSelectInTable(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    if (\r\n        tn === $.CAPTION ||\r\n        tn === $.TABLE ||\r\n        tn === $.TBODY ||\r\n        tn === $.TFOOT ||\r\n        tn === $.THEAD ||\r\n        tn === $.TR ||\r\n        tn === $.TD ||\r\n        tn === $.TH\r\n    ) {\r\n        p.openElements.popUntilTagNamePopped($.SELECT);\r\n        p._resetInsertionMode();\r\n        p._processToken(token);\r\n    } else {\r\n        startTagInSelect(p, token);\r\n    }\r\n}\r\n\r\nfunction endTagInSelectInTable(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    if (\r\n        tn === $.CAPTION ||\r\n        tn === $.TABLE ||\r\n        tn === $.TBODY ||\r\n        tn === $.TFOOT ||\r\n        tn === $.THEAD ||\r\n        tn === $.TR ||\r\n        tn === $.TD ||\r\n        tn === $.TH\r\n    ) {\r\n        if (p.openElements.hasInTableScope(tn)) {\r\n            p.openElements.popUntilTagNamePopped($.SELECT);\r\n            p._resetInsertionMode();\r\n            p._processToken(token);\r\n        }\r\n    } else {\r\n        endTagInSelect(p, token);\r\n    }\r\n}\r\n\r\n// The \"in template\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInTemplate(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    if (\r\n        tn === $.BASE ||\r\n        tn === $.BASEFONT ||\r\n        tn === $.BGSOUND ||\r\n        tn === $.LINK ||\r\n        tn === $.META ||\r\n        tn === $.NOFRAMES ||\r\n        tn === $.SCRIPT ||\r\n        tn === $.STYLE ||\r\n        tn === $.TEMPLATE ||\r\n        tn === $.TITLE\r\n    ) {\r\n        startTagInHead(p, token);\r\n    } else {\r\n        const newInsertionMode = TEMPLATE_INSERTION_MODE_SWITCH_MAP[tn] || IN_BODY_MODE;\r\n\r\n        p._popTmplInsertionMode();\r\n        p._pushTmplInsertionMode(newInsertionMode);\r\n        p.insertionMode = newInsertionMode;\r\n        p._processToken(token);\r\n    }\r\n}\r\n\r\nfunction endTagInTemplate(p, token) {\r\n    if (token.tagName === $.TEMPLATE) {\r\n        endTagInHead(p, token);\r\n    }\r\n}\r\n\r\nfunction eofInTemplate(p, token) {\r\n    if (p.openElements.tmplCount > 0) {\r\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\r\n        p.activeFormattingElements.clearToLastMarker();\r\n        p._popTmplInsertionMode();\r\n        p._resetInsertionMode();\r\n        p._processToken(token);\r\n    } else {\r\n        p.stopped = true;\r\n    }\r\n}\r\n\r\n// The \"after body\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagAfterBody(p, token) {\r\n    if (token.tagName === $.HTML) {\r\n        startTagInBody(p, token);\r\n    } else {\r\n        tokenAfterBody(p, token);\r\n    }\r\n}\r\n\r\nfunction endTagAfterBody(p, token) {\r\n    if (token.tagName === $.HTML) {\r\n        if (!p.fragmentContext) {\r\n            p.insertionMode = AFTER_AFTER_BODY_MODE;\r\n        }\r\n    } else {\r\n        tokenAfterBody(p, token);\r\n    }\r\n}\r\n\r\nfunction tokenAfterBody(p, token) {\r\n    p.insertionMode = IN_BODY_MODE;\r\n    p._processToken(token);\r\n}\r\n\r\n// The \"in frameset\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInFrameset(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    if (tn === $.HTML) {\r\n        startTagInBody(p, token);\r\n    } else if (tn === $.FRAMESET) {\r\n        p._insertElement(token, NS.HTML);\r\n    } else if (tn === $.FRAME) {\r\n        p._appendElement(token, NS.HTML);\r\n        token.ackSelfClosing = true;\r\n    } else if (tn === $.NOFRAMES) {\r\n        startTagInHead(p, token);\r\n    }\r\n}\r\n\r\nfunction endTagInFrameset(p, token) {\r\n    if (token.tagName === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\r\n        p.openElements.pop();\r\n\r\n        if (!p.fragmentContext && p.openElements.currentTagName !== $.FRAMESET) {\r\n            p.insertionMode = AFTER_FRAMESET_MODE;\r\n        }\r\n    }\r\n}\r\n\r\n// The \"after frameset\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagAfterFrameset(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    if (tn === $.HTML) {\r\n        startTagInBody(p, token);\r\n    } else if (tn === $.NOFRAMES) {\r\n        startTagInHead(p, token);\r\n    }\r\n}\r\n\r\nfunction endTagAfterFrameset(p, token) {\r\n    if (token.tagName === $.HTML) {\r\n        p.insertionMode = AFTER_AFTER_FRAMESET_MODE;\r\n    }\r\n}\r\n\r\n// The \"after after body\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagAfterAfterBody(p, token) {\r\n    if (token.tagName === $.HTML) {\r\n        startTagInBody(p, token);\r\n    } else {\r\n        tokenAfterAfterBody(p, token);\r\n    }\r\n}\r\n\r\nfunction tokenAfterAfterBody(p, token) {\r\n    p.insertionMode = IN_BODY_MODE;\r\n    p._processToken(token);\r\n}\r\n\r\n// The \"after after frameset\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagAfterAfterFrameset(p, token) {\r\n    const tn = token.tagName;\r\n\r\n    if (tn === $.HTML) {\r\n        startTagInBody(p, token);\r\n    } else if (tn === $.NOFRAMES) {\r\n        startTagInHead(p, token);\r\n    }\r\n}\r\n\r\n// The rules for parsing tokens in foreign content\r\n//------------------------------------------------------------------\r\nfunction nullCharacterInForeignContent(p, token) {\r\n    token.chars = unicode.REPLACEMENT_CHARACTER;\r\n    p._insertCharacters(token);\r\n}\r\n\r\nfunction characterInForeignContent(p, token) {\r\n    p._insertCharacters(token);\r\n    p.framesetOk = false;\r\n}\r\n\r\nfunction startTagInForeignContent(p, token) {\r\n    if (foreignContent.causesExit(token) && !p.fragmentContext) {\r\n        while (\r\n            p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\r\n            !p._isIntegrationPoint(p.openElements.current)\r\n        ) {\r\n            p.openElements.pop();\r\n        }\r\n\r\n        p._processToken(token);\r\n    } else {\r\n        const current = p._getAdjustedCurrentElement();\r\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\r\n\r\n        if (currentNs === NS.MATHML) {\r\n            foreignContent.adjustTokenMathMLAttrs(token);\r\n        } else if (currentNs === NS.SVG) {\r\n            foreignContent.adjustTokenSVGTagName(token);\r\n            foreignContent.adjustTokenSVGAttrs(token);\r\n        }\r\n\r\n        foreignContent.adjustTokenXMLAttrs(token);\r\n\r\n        if (token.selfClosing) {\r\n            p._appendElement(token, currentNs);\r\n        } else {\r\n            p._insertElement(token, currentNs);\r\n        }\r\n\r\n        token.ackSelfClosing = true;\r\n    }\r\n}\r\n\r\nfunction endTagInForeignContent(p, token) {\r\n    for (let i = p.openElements.stackTop; i > 0; i--) {\r\n        const element = p.openElements.items[i];\r\n\r\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\r\n            p._processToken(token);\r\n            break;\r\n        }\r\n\r\n        if (p.treeAdapter.getTagName(element).toLowerCase() === token.tagName) {\r\n            p.openElements.popUntilElementPopped(element);\r\n            break;\r\n        }\r\n    }\r\n}\r\n", "/**\r\n * @typedef {import('vfile').VFile} VFile\r\n * @typedef {import('parse5').Document} P5Document\r\n * @typedef {import('parse5').DocumentFragment} P5Fragment\r\n * @typedef {Omit<import('parse5').Element, 'parentNode'>} P5Element\r\n * @typedef {import('parse5').Attribute} P5Attribute\r\n * @typedef {Omit<import('parse5').Location, 'startOffset' | 'endOffset'> & {startOffset: number|undefined, endOffset: number|undefined}} P5Location\r\n * @typedef {import('parse5').ParserOptions} P5ParserOptions\r\n * @typedef {import('hast').Root} Root\r\n * @typedef {import('hast').DocType} Doctype\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').Text} Text\r\n * @typedef {import('hast').Comment} Comment\r\n * @typedef {import('hast').Content} Content\r\n * @typedef {Root|Content} Node\r\n * @typedef {import('../complex-types').Raw} Raw\r\n *\r\n * @typedef {Omit<Comment, 'value'> & {value: {stitch: Node}}} Stitch\r\n *\r\n * @typedef Options\r\n * @property {Array<string>} [passThrough]\r\n *   List of custom hast node types to pass through (keep) in hast.\r\n *   If the passed through nodes have children, those children are expected to\r\n *   be hast and will be handled.\r\n *\r\n * @typedef HiddenTokenizer\r\n * @property {Array<HiddenLocationTracker>} __mixins\r\n *   Way too simple, but works for us.\r\n * @property {HiddenPreprocessor} preprocessor\r\n * @property {(value: string) => void} write\r\n * @property {() => number} _consume\r\n * @property {Array<HiddenToken>} tokenQueue\r\n * @property {string} state\r\n * @property {string} returnState\r\n * @property {number} charRefCode\r\n * @property {Array<number>} tempBuff\r\n * @property {Function} _flushCodePointsConsumedAsCharacterReference\r\n * @property {string} lastStartTagName\r\n * @property {number} consumedAfterSnapshot\r\n * @property {boolean} active\r\n * @property {HiddenToken|undefined} currentCharacterToken\r\n * @property {HiddenToken|undefined} currentToken\r\n * @property {unknown} currentAttr\r\n * @property {Function} NAMED_CHARACTER_REFERENCE_STATE\r\n * @property {Function} NUMERIC_CHARACTER_REFERENCE_END_STATE\r\n *\r\n * @typedef {Record<string, unknown> & {location: P5Location}} HiddenToken\r\n *\r\n * @typedef HiddenPreprocessor\r\n * @property {string|undefined} html\r\n * @property {number} pos\r\n * @property {number} lastGapPos\r\n * @property {number} lastCharPos\r\n * @property {Array<number>} gapStack\r\n * @property {boolean} skipNextNewLine\r\n * @property {boolean} lastChunkWritten\r\n * @property {boolean} endOfChunkHit\r\n *\r\n * @typedef HiddenLocationTracker\r\n * @property {P5Location|undefined} currentAttrLocation\r\n * @property {P5Location} ctLoc\r\n * @property {HiddenPosTracker} posTracker\r\n *\r\n * @typedef HiddenPosTracker\r\n * @property {boolean} isEol\r\n * @property {number} lineStartPos\r\n * @property {number} droppedBufferSize\r\n * @property {number} offset\r\n * @property {number} col\r\n * @property {number} line\r\n */\r\n\r\n// @ts-expect-error: untyped.\r\nimport Parser from 'parse5/lib/parser/index.js'\r\nimport {pointStart, pointEnd} from 'unist-util-position'\r\nimport {visit} from 'unist-util-visit'\r\nimport {fromParse5} from 'hast-util-from-parse5'\r\nimport {toParse5} from 'hast-util-to-parse5'\r\nimport {htmlVoidElements} from 'html-void-elements'\r\nimport {webNamespaces} from 'web-namespaces'\r\nimport {zwitch} from 'zwitch'\r\n\r\nconst inTemplateMode = 'IN_TEMPLATE_MODE'\r\nconst dataState = 'DATA_STATE'\r\nconst characterToken = 'CHARACTER_TOKEN'\r\nconst startTagToken = 'START_TAG_TOKEN'\r\nconst endTagToken = 'END_TAG_TOKEN'\r\nconst commentToken = 'COMMENT_TOKEN'\r\nconst doctypeToken = 'DOCTYPE_TOKEN'\r\n\r\n/** @type {P5ParserOptions} */\r\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\r\n\r\n/**\r\n * Given a hast tree and an optional vfile (for positional info), return a new\r\n * parsed-again hast tree.\r\n *\r\n * @param tree\r\n *   Original hast tree.\r\n * @param file\r\n *   Virtual file for positional info, optional.\r\n * @param options\r\n *   Configuration.\r\n */\r\nexport const raw =\r\n  /**\r\n   * @type {(\r\n   *   ((tree: Node, file: VFile|undefined, options?: Options) => Node) &\r\n   *   ((tree: Node, options?: Options) => Node)\r\n   * )}\r\n   */\r\n  (\r\n    /**\r\n     * @param {Node} tree\r\n     * @param {VFile} [file]\r\n     * @param {Options} [options]\r\n     */\r\n    function (tree, file, options) {\r\n      let index = -1\r\n      const parser = new Parser(parseOptions)\r\n      const one = zwitch('type', {\r\n        handlers: {root, element, text, comment, doctype, raw: handleRaw},\r\n        // @ts-expect-error: hush.\r\n        unknown\r\n      })\r\n      /** @type {boolean|undefined} */\r\n      let stitches\r\n      /** @type {HiddenTokenizer|undefined} */\r\n      let tokenizer\r\n      /** @type {HiddenPreprocessor|undefined} */\r\n      let preprocessor\r\n      /** @type {HiddenPosTracker|undefined} */\r\n      let posTracker\r\n      /** @type {HiddenLocationTracker|undefined} */\r\n      let locationTracker\r\n\r\n      if (isOptions(file)) {\r\n        options = file\r\n        file = undefined\r\n      }\r\n\r\n      if (options && options.passThrough) {\r\n        while (++index < options.passThrough.length) {\r\n          // @ts-expect-error: hush.\r\n          one.handlers[options.passThrough[index]] = stitch\r\n        }\r\n      }\r\n\r\n      const result = fromParse5(\r\n        documentMode(tree) ? document() : fragment(),\r\n        file\r\n      )\r\n\r\n      if (stitches) {\r\n        visit(result, 'comment', (node, index, parent) => {\r\n          const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\r\n          if (stitch.value.stitch && parent !== null && index !== null) {\r\n            // @ts-expect-error: assume the stitch is allowed.\r\n            parent.children[index] = stitch.value.stitch\r\n            return index\r\n          }\r\n        })\r\n      }\r\n\r\n      // Unpack if possible and when not given a `root`.\r\n      if (\r\n        tree.type !== 'root' &&\r\n        result.type === 'root' &&\r\n        result.children.length === 1\r\n      ) {\r\n        return result.children[0]\r\n      }\r\n\r\n      return result\r\n\r\n      /**\r\n       * @returns {P5Fragment}\r\n       */\r\n      function fragment() {\r\n        /** @type {P5Element} */\r\n        const context = {\r\n          nodeName: 'template',\r\n          tagName: 'template',\r\n          attrs: [],\r\n          namespaceURI: webNamespaces.html,\r\n          childNodes: []\r\n        }\r\n        /** @type {P5Element} */\r\n        const mock = {\r\n          nodeName: 'documentmock',\r\n          tagName: 'documentmock',\r\n          attrs: [],\r\n          namespaceURI: webNamespaces.html,\r\n          childNodes: []\r\n        }\r\n        /** @type {P5Fragment} */\r\n        const doc = {nodeName: '#document-fragment', childNodes: []}\r\n\r\n        parser._bootstrap(mock, context)\r\n        parser._pushTmplInsertionMode(inTemplateMode)\r\n        parser._initTokenizerForFragmentParsing()\r\n        parser._insertFakeRootElement()\r\n        parser._resetInsertionMode()\r\n        parser._findFormInFragmentContext()\r\n\r\n        tokenizer = parser.tokenizer\r\n        /* c8 ignore next */\r\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\r\n        preprocessor = tokenizer.preprocessor\r\n        locationTracker = tokenizer.__mixins[0]\r\n        posTracker = locationTracker.posTracker\r\n\r\n        one(tree)\r\n\r\n        resetTokenizer()\r\n\r\n        parser._adoptNodes(mock.childNodes[0], doc)\r\n\r\n        return doc\r\n      }\r\n\r\n      /**\r\n       * @returns {P5Document}\r\n       */\r\n      function document() {\r\n        /** @type {P5Document} */\r\n        const doc = parser.treeAdapter.createDocument()\r\n\r\n        parser._bootstrap(doc, undefined)\r\n        tokenizer = parser.tokenizer\r\n        /* c8 ignore next */\r\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\r\n        preprocessor = tokenizer.preprocessor\r\n        locationTracker = tokenizer.__mixins[0]\r\n        posTracker = locationTracker.posTracker\r\n\r\n        one(tree)\r\n\r\n        resetTokenizer()\r\n\r\n        return doc\r\n      }\r\n\r\n      /**\r\n       * @param {Array<Content>} nodes\r\n       * @returns {void}\r\n       */\r\n      function all(nodes) {\r\n        let index = -1\r\n\r\n        /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\r\n        if (nodes) {\r\n          while (++index < nodes.length) {\r\n            one(nodes[index])\r\n          }\r\n        }\r\n      }\r\n\r\n      /**\r\n       * @param {Root} node\r\n       * @returns {void}\r\n       */\r\n      function root(node) {\r\n        all(node.children)\r\n      }\r\n\r\n      /**\r\n       * @param {Element} node\r\n       * @returns {void}\r\n       */\r\n      function element(node) {\r\n        resetTokenizer()\r\n        parser._processInputToken(startTag(node))\r\n\r\n        all(node.children)\r\n\r\n        if (!htmlVoidElements.includes(node.tagName)) {\r\n          resetTokenizer()\r\n          parser._processInputToken(endTag(node))\r\n        }\r\n      }\r\n\r\n      /**\r\n       * @param {Text} node\r\n       * @returns {void}\r\n       */\r\n      function text(node) {\r\n        resetTokenizer()\r\n        parser._processInputToken({\r\n          type: characterToken,\r\n          chars: node.value,\r\n          location: createParse5Location(node)\r\n        })\r\n      }\r\n\r\n      /**\r\n       * @param {Doctype} node\r\n       * @returns {void}\r\n       */\r\n      function doctype(node) {\r\n        resetTokenizer()\r\n        parser._processInputToken({\r\n          type: doctypeToken,\r\n          name: 'html',\r\n          forceQuirks: false,\r\n          publicId: '',\r\n          systemId: '',\r\n          location: createParse5Location(node)\r\n        })\r\n      }\r\n\r\n      /**\r\n       * @param {Comment|Stitch} node\r\n       * @returns {void}\r\n       */\r\n      function comment(node) {\r\n        resetTokenizer()\r\n        parser._processInputToken({\r\n          type: commentToken,\r\n          data: node.value,\r\n          location: createParse5Location(node)\r\n        })\r\n      }\r\n\r\n      /**\r\n       * @param {Raw} node\r\n       * @returns {void}\r\n       */\r\n      function handleRaw(node) {\r\n        const start = pointStart(node)\r\n        const line = start.line || 1\r\n        const column = start.column || 1\r\n        const offset = start.offset || 0\r\n\r\n        /* c8 ignore next 4 */\r\n        if (!preprocessor) throw new Error('Expected `preprocessor`')\r\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\r\n        if (!posTracker) throw new Error('Expected `posTracker`')\r\n        if (!locationTracker) throw new Error('Expected `locationTracker`')\r\n\r\n        // Reset preprocessor:\r\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/tokenizer/preprocessor.js#L17>.\r\n        preprocessor.html = undefined\r\n        preprocessor.pos = -1\r\n        preprocessor.lastGapPos = -1\r\n        preprocessor.lastCharPos = -1\r\n        preprocessor.gapStack = []\r\n        preprocessor.skipNextNewLine = false\r\n        preprocessor.lastChunkWritten = false\r\n        preprocessor.endOfChunkHit = false\r\n\r\n        // Reset preprocessor mixin:\r\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/position-tracking/preprocessor-mixin.js>.\r\n        posTracker.isEol = false\r\n        posTracker.lineStartPos = -column + 1 // Looks weird, but ensures we get correct positional info.\r\n        posTracker.droppedBufferSize = offset\r\n        posTracker.offset = 0\r\n        posTracker.col = 1\r\n        posTracker.line = line\r\n\r\n        // Reset location tracker:\r\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/location-info/tokenizer-mixin.js>.\r\n        locationTracker.currentAttrLocation = undefined\r\n        locationTracker.ctLoc = createParse5Location(node)\r\n\r\n        // See the code for `parse` and `parseFragment`:\r\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/parser/index.js#L371>.\r\n        tokenizer.write(node.value)\r\n        parser._runParsingLoop(null)\r\n\r\n        // Character references hang, so if we ended there, we need to flush\r\n        // those too.\r\n        // We reset the preprocessor as if the document ends here.\r\n        // Then one single call to the relevant state does the trick, parse5\r\n        // consumes the whole token.\r\n        if (\r\n          tokenizer.state === 'NAMED_CHARACTER_REFERENCE_STATE' ||\r\n          tokenizer.state === 'NUMERIC_CHARACTER_REFERENCE_END_STATE'\r\n        ) {\r\n          preprocessor.lastChunkWritten = true\r\n          tokenizer[tokenizer.state](tokenizer._consume())\r\n        }\r\n      }\r\n\r\n      /**\r\n       * @param {Node} node\r\n       */\r\n      function stitch(node) {\r\n        stitches = true\r\n\r\n        /** @type {Node} */\r\n        let clone\r\n\r\n        // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\r\n        // passed through node).\r\n        if ('children' in node) {\r\n          clone = {\r\n            ...node,\r\n            children: raw(\r\n              {type: 'root', children: node.children},\r\n              file,\r\n              options\r\n              // @ts-expect-error Assume a given parent yields a parent.\r\n            ).children\r\n          }\r\n        } else {\r\n          clone = {...node}\r\n        }\r\n\r\n        // Hack: `value` is supposed to be a string, but as none of the tools\r\n        // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\r\n        // through.\r\n        comment({type: 'comment', value: {stitch: clone}})\r\n      }\r\n\r\n      function resetTokenizer() {\r\n        /* c8 ignore next 2 */\r\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\r\n        if (!posTracker) throw new Error('Expected `posTracker`')\r\n\r\n        // Process final characters if they’re still there after hibernating.\r\n        // Similar to:\r\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/location-info/tokenizer-mixin.js#L95>.\r\n        const token = tokenizer.currentCharacterToken\r\n\r\n        if (token) {\r\n          token.location.endLine = posTracker.line\r\n          token.location.endCol = posTracker.col + 1\r\n          token.location.endOffset = posTracker.offset + 1\r\n          parser._processInputToken(token)\r\n        }\r\n\r\n        // Reset tokenizer:\r\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/tokenizer/index.js#L218-L234>.\r\n        // Especially putting it back in the `data` state is useful: some elements,\r\n        // like textareas and iframes, change the state.\r\n        // See GH-7.\r\n        // But also if broken HTML is in `raw`, and then a correct element is given.\r\n        // See GH-11.\r\n        tokenizer.tokenQueue = []\r\n        tokenizer.state = dataState\r\n        tokenizer.returnState = ''\r\n        tokenizer.charRefCode = -1\r\n        tokenizer.tempBuff = []\r\n        tokenizer.lastStartTagName = ''\r\n        tokenizer.consumedAfterSnapshot = -1\r\n        tokenizer.active = false\r\n        tokenizer.currentCharacterToken = undefined\r\n        tokenizer.currentToken = undefined\r\n        tokenizer.currentAttr = undefined\r\n      }\r\n    }\r\n  )\r\n/**\r\n * @param {Element} node\r\n * @returns {HiddenToken}\r\n */\r\nfunction startTag(node) {\r\n  /** @type {P5Location} */\r\n  const location = Object.assign(createParse5Location(node))\r\n  // @ts-expect-error extra positional info.\r\n  location.startTag = Object.assign({}, location)\r\n\r\n  // Untyped token.\r\n  return {\r\n    type: startTagToken,\r\n    tagName: node.tagName,\r\n    selfClosing: false,\r\n    attrs: attributes(node),\r\n    location\r\n  }\r\n}\r\n\r\n/**\r\n * @param {Element} node\r\n * @returns {Array<P5Attribute>}\r\n */\r\nfunction attributes(node) {\r\n  return toParse5({\r\n    tagName: node.tagName,\r\n    type: 'element',\r\n    properties: node.properties,\r\n    children: []\r\n    // @ts-expect-error Assume element.\r\n  }).attrs\r\n}\r\n\r\n/**\r\n * @param {Element} node\r\n * @returns {HiddenToken}\r\n */\r\nfunction endTag(node) {\r\n  /** @type {P5Location} */\r\n  const location = Object.assign(createParse5Location(node))\r\n  // @ts-expect-error extra positional info.\r\n  location.startTag = Object.assign({}, location)\r\n\r\n  // Untyped token.\r\n  return {\r\n    type: endTagToken,\r\n    tagName: node.tagName,\r\n    attrs: [],\r\n    location\r\n  }\r\n}\r\n\r\n/**\r\n * @param {Node} node\r\n */\r\nfunction unknown(node) {\r\n  throw new Error('Cannot compile `' + node.type + '` node')\r\n}\r\n\r\n/**\r\n * @param {Node} node\r\n * @returns {boolean}\r\n */\r\nfunction documentMode(node) {\r\n  const head = node.type === 'root' ? node.children[0] : node\r\n  return Boolean(\r\n    head &&\r\n      (head.type === 'doctype' ||\r\n        (head.type === 'element' && head.tagName === 'html'))\r\n  )\r\n}\r\n\r\n/**\r\n * @param {Node|Stitch} node\r\n * @returns {P5Location}\r\n */\r\nfunction createParse5Location(node) {\r\n  const start = pointStart(node)\r\n  const end = pointEnd(node)\r\n\r\n  return {\r\n    startLine: start.line,\r\n    startCol: start.column,\r\n    startOffset: start.offset,\r\n    endLine: end.line,\r\n    endCol: end.column,\r\n    endOffset: end.offset\r\n  }\r\n}\r\n\r\n/**\r\n * @param {VFile|Options|undefined} value\r\n * @return {value is Options}\r\n */\r\nfunction isOptions(value) {\r\n  return Boolean(value && !('message' in value && 'messages' in value))\r\n}\r\n", "/**\r\n * @typedef {import('unist').Position} Position\r\n * @typedef {import('unist').Node} Node\r\n * @typedef {import('unist').Point} Point\r\n */\r\n\r\n/**\r\n * @typedef NodeLike\r\n * @property {string} type\r\n * @property {PositionLike | null | undefined} [position]\r\n *\r\n * @typedef PositionLike\r\n * @property {PointLike | null | undefined} [start]\r\n * @property {PointLike | null | undefined} [end]\r\n *\r\n * @typedef PointLike\r\n * @property {number | null | undefined} [line]\r\n * @property {number | null | undefined} [column]\r\n * @property {number | null | undefined} [offset]\r\n */\r\n\r\n/**\r\n * Get the starting point of `node`.\r\n *\r\n * @param node\r\n *   Node.\r\n * @returns\r\n *   Point.\r\n */\r\nexport const pointStart = point('start')\r\n\r\n/**\r\n * Get the ending point of `node`.\r\n *\r\n * @param node\r\n *   Node.\r\n * @returns\r\n *   Point.\r\n */\r\nexport const pointEnd = point('end')\r\n\r\n/**\r\n * Get the positional info of `node`.\r\n *\r\n * @param {NodeLike | Node | null | undefined} [node]\r\n *   Node.\r\n * @returns {Position}\r\n *   Position.\r\n */\r\nexport function position(node) {\r\n  return {start: pointStart(node), end: pointEnd(node)}\r\n}\r\n\r\n/**\r\n * Get the positional info of `node`.\r\n *\r\n * @param {'start' | 'end'} type\r\n *   Side.\r\n * @returns\r\n *   Getter.\r\n */\r\nfunction point(type) {\r\n  return point\r\n\r\n  /**\r\n   * Get the point info of `node` at a bound side.\r\n   *\r\n   * @param {NodeLike | Node | null | undefined} [node]\r\n   * @returns {Point}\r\n   */\r\n  function point(node) {\r\n    const point = (node && node.position && node.position[type]) || {}\r\n\r\n    // To do: next major: don’t return points when invalid.\r\n    return {\r\n      // @ts-expect-error: in practice, null is allowed.\r\n      line: point.line || null,\r\n      // @ts-expect-error: in practice, null is allowed.\r\n      column: point.column || null,\r\n      // @ts-expect-error: in practice, null is allowed.\r\n      offset: point.offset > -1 ? point.offset : null\r\n    }\r\n  }\r\n}\r\n", "/**\r\n * @typedef {import('unist').Node} Node\r\n * @typedef {import('unist').Parent} Parent\r\n */\r\n\r\n/**\r\n * @typedef {Record<string, unknown>} Props\r\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\r\n *   Check for an arbitrary node, unaware of TypeScript inferral.\r\n *\r\n * @callback TestFunctionAnything\r\n *   Check if a node passes a test, unaware of TypeScript inferral.\r\n * @param {unknown} this\r\n *   The given context.\r\n * @param {Node} node\r\n *   A node.\r\n * @param {number | null | undefined} [index]\r\n *   The node’s position in its parent.\r\n * @param {Parent | null | undefined} [parent]\r\n *   The node’s parent.\r\n * @returns {boolean | void}\r\n *   Whether this node passes the test.\r\n */\r\n\r\n/**\r\n * @template {Node} Kind\r\n *   Node type.\r\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\r\n *   Check for a node that can be inferred by TypeScript.\r\n */\r\n\r\n/**\r\n * Check if a node passes a certain test.\r\n *\r\n * @template {Node} Kind\r\n *   Node type.\r\n * @callback TestFunctionPredicate\r\n *   Complex test function for a node that can be inferred by TypeScript.\r\n * @param {Node} node\r\n *   A node.\r\n * @param {number | null | undefined} [index]\r\n *   The node’s position in its parent.\r\n * @param {Parent | null | undefined} [parent]\r\n *   The node’s parent.\r\n * @returns {node is Kind}\r\n *   Whether this node passes the test.\r\n */\r\n\r\n/**\r\n * @callback AssertAnything\r\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\r\n * @param {unknown} [node]\r\n *   Anything (typically a node).\r\n * @param {number | null | undefined} [index]\r\n *   The node’s position in its parent.\r\n * @param {Parent | null | undefined} [parent]\r\n *   The node’s parent.\r\n * @returns {boolean}\r\n *   Whether this is a node and passes a test.\r\n */\r\n\r\n/**\r\n * Check if a node is a node and passes a certain node test.\r\n *\r\n * @template {Node} Kind\r\n *   Node type.\r\n * @callback AssertPredicate\r\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\r\n * @param {unknown} [node]\r\n *   Anything (typically a node).\r\n * @param {number | null | undefined} [index]\r\n *   The node’s position in its parent.\r\n * @param {Parent | null | undefined} [parent]\r\n *   The node’s parent.\r\n * @returns {node is Kind}\r\n *   Whether this is a node and passes a test.\r\n */\r\n\r\n/**\r\n * Check if `node` is a `Node` and whether it passes the given test.\r\n *\r\n * @param node\r\n *   Thing to check, typically `Node`.\r\n * @param test\r\n *   A check for a specific node.\r\n * @param index\r\n *   The node’s position in its parent.\r\n * @param parent\r\n *   The node’s parent.\r\n * @returns\r\n *   Whether `node` is a node and passes a test.\r\n */\r\nexport const is =\r\n  /**\r\n   * @type {(\r\n   *   (() => false) &\r\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\r\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\r\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\r\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\r\n   * )}\r\n   */\r\n  (\r\n    /**\r\n     * @param {unknown} [node]\r\n     * @param {Test} [test]\r\n     * @param {number | null | undefined} [index]\r\n     * @param {Parent | null | undefined} [parent]\r\n     * @param {unknown} [context]\r\n     * @returns {boolean}\r\n     */\r\n    // eslint-disable-next-line max-params\r\n    function is(node, test, index, parent, context) {\r\n      const check = convert(test)\r\n\r\n      if (\r\n        index !== undefined &&\r\n        index !== null &&\r\n        (typeof index !== 'number' ||\r\n          index < 0 ||\r\n          index === Number.POSITIVE_INFINITY)\r\n      ) {\r\n        throw new Error('Expected positive finite index')\r\n      }\r\n\r\n      if (\r\n        parent !== undefined &&\r\n        parent !== null &&\r\n        (!is(parent) || !parent.children)\r\n      ) {\r\n        throw new Error('Expected parent node')\r\n      }\r\n\r\n      if (\r\n        (parent === undefined || parent === null) !==\r\n        (index === undefined || index === null)\r\n      ) {\r\n        throw new Error('Expected both parent and index')\r\n      }\r\n\r\n      // @ts-expect-error Looks like a node.\r\n      return node && node.type && typeof node.type === 'string'\r\n        ? Boolean(check.call(context, node, index, parent))\r\n        : false\r\n    }\r\n  )\r\n\r\n/**\r\n * Generate an assertion from a test.\r\n *\r\n * Useful if you’re going to test many nodes, for example when creating a\r\n * utility where something else passes a compatible test.\r\n *\r\n * The created function is a bit faster because it expects valid input only:\r\n * a `node`, `index`, and `parent`.\r\n *\r\n * @param test\r\n *   *   when nullish, checks if `node` is a `Node`.\r\n *   *   when `string`, works like passing `(node) => node.type === test`.\r\n *   *   when `function` checks if function passed the node is true.\r\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\r\n *   *   when `array`, checks if any one of the subtests pass.\r\n * @returns\r\n *   An assertion.\r\n */\r\nexport const convert =\r\n  /**\r\n   * @type {(\r\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\r\n   *   ((test?: Test) => AssertAnything)\r\n   * )}\r\n   */\r\n  (\r\n    /**\r\n     * @param {Test} [test]\r\n     * @returns {AssertAnything}\r\n     */\r\n    function (test) {\r\n      if (test === undefined || test === null) {\r\n        return ok\r\n      }\r\n\r\n      if (typeof test === 'string') {\r\n        return typeFactory(test)\r\n      }\r\n\r\n      if (typeof test === 'object') {\r\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\r\n      }\r\n\r\n      if (typeof test === 'function') {\r\n        return castFactory(test)\r\n      }\r\n\r\n      throw new Error('Expected function, string, or object as test')\r\n    }\r\n  )\r\n\r\n/**\r\n * @param {Array<string | Props | TestFunctionAnything>} tests\r\n * @returns {AssertAnything}\r\n */\r\nfunction anyFactory(tests) {\r\n  /** @type {Array<AssertAnything>} */\r\n  const checks = []\r\n  let index = -1\r\n\r\n  while (++index < tests.length) {\r\n    checks[index] = convert(tests[index])\r\n  }\r\n\r\n  return castFactory(any)\r\n\r\n  /**\r\n   * @this {unknown}\r\n   * @param {Array<unknown>} parameters\r\n   * @returns {boolean}\r\n   */\r\n  function any(...parameters) {\r\n    let index = -1\r\n\r\n    while (++index < checks.length) {\r\n      if (checks[index].call(this, ...parameters)) return true\r\n    }\r\n\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * Turn an object into a test for a node with a certain fields.\r\n *\r\n * @param {Props} check\r\n * @returns {AssertAnything}\r\n */\r\nfunction propsFactory(check) {\r\n  return castFactory(all)\r\n\r\n  /**\r\n   * @param {Node} node\r\n   * @returns {boolean}\r\n   */\r\n  function all(node) {\r\n    /** @type {string} */\r\n    let key\r\n\r\n    for (key in check) {\r\n      // @ts-expect-error: hush, it sure works as an index.\r\n      if (node[key] !== check[key]) return false\r\n    }\r\n\r\n    return true\r\n  }\r\n}\r\n\r\n/**\r\n * Turn a string into a test for a node with a certain type.\r\n *\r\n * @param {string} check\r\n * @returns {AssertAnything}\r\n */\r\nfunction typeFactory(check) {\r\n  return castFactory(type)\r\n\r\n  /**\r\n   * @param {Node} node\r\n   */\r\n  function type(node) {\r\n    return node && node.type === check\r\n  }\r\n}\r\n\r\n/**\r\n * Turn a custom test into a test for a node that passes that test.\r\n *\r\n * @param {TestFunctionAnything} check\r\n * @returns {AssertAnything}\r\n */\r\nfunction castFactory(check) {\r\n  return assertion\r\n\r\n  /**\r\n   * @this {unknown}\r\n   * @param {unknown} node\r\n   * @param {Array<unknown>} parameters\r\n   * @returns {boolean}\r\n   */\r\n  function assertion(node, ...parameters) {\r\n    return Boolean(\r\n      node &&\r\n        typeof node === 'object' &&\r\n        'type' in node &&\r\n        // @ts-expect-error: fine.\r\n        Boolean(check.call(this, node, ...parameters))\r\n    )\r\n  }\r\n}\r\n\r\nfunction ok() {\r\n  return true\r\n}\r\n", "/**\r\n * @param {string} d\r\n * @returns {string}\r\n */\r\nexport function color(d) {\r\n  return d\r\n}\r\n", "/**\r\n * @typedef {import('unist').Node} Node\r\n * @typedef {import('unist').Parent} Parent\r\n * @typedef {import('unist-util-is').Test} Test\r\n */\r\n\r\n/**\r\n * @typedef {boolean | 'skip'} Action\r\n *   Union of the action types.\r\n *\r\n * @typedef {number} Index\r\n *   Move to the sibling at `index` next (after node itself is completely\r\n *   traversed).\r\n *\r\n *   Useful if mutating the tree, such as removing the node the visitor is\r\n *   currently on, or any of its previous siblings.\r\n *   Results less than 0 or greater than or equal to `children.length` stop\r\n *   traversing the parent.\r\n *\r\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\r\n *   List with one or two values, the first an action, the second an index.\r\n *\r\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\r\n *   Any value that can be returned from a visitor.\r\n */\r\n\r\n/**\r\n * @template {Node} [Visited=Node]\r\n *   Visited node type.\r\n * @template {Parent} [Ancestor=Parent]\r\n *   Ancestor type.\r\n * @callback Visitor\r\n *   Handle a node (matching `test`, if given).\r\n *\r\n *   Visitors are free to transform `node`.\r\n *   They can also transform the parent of node (the last of `ancestors`).\r\n *\r\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\r\n *   descendants to be walked (which is a bug).\r\n *\r\n *   When adding or removing previous siblings of `node` (or next siblings, in\r\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\r\n *   sibling to traverse after `node` is traversed.\r\n *   Adding or removing next siblings of `node` (or previous siblings, in case\r\n *   of reverse) is handled as expected without needing to return a new `Index`.\r\n *\r\n *   Removing the children property of an ancestor still results in them being\r\n *   traversed.\r\n * @param {Visited} node\r\n *   Found node.\r\n * @param {Array<Ancestor>} ancestors\r\n *   Ancestors of `node`.\r\n * @returns {VisitorResult}\r\n *   What to do next.\r\n *\r\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\r\n *   An `Action` is treated as a tuple of `[Action]`.\r\n *\r\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\r\n *   When the `Action` is `EXIT`, that action can be returned.\r\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\r\n */\r\n\r\n/**\r\n * @template {Node} [Tree=Node]\r\n *   Tree type.\r\n * @template {Test} [Check=string]\r\n *   Test type.\r\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\r\n *   Build a typed `Visitor` function from a tree and a test.\r\n *\r\n *   It will infer which values are passed as `node` and which as `parents`.\r\n */\r\n\r\nimport {convert} from 'unist-util-is'\r\nimport {color} from './color.js'\r\n\r\n/**\r\n * Continue traversing as normal.\r\n */\r\nexport const CONTINUE = true\r\n\r\n/**\r\n * Stop traversing immediately.\r\n */\r\nexport const EXIT = false\r\n\r\n/**\r\n * Do not traverse this node’s children.\r\n */\r\nexport const SKIP = 'skip'\r\n\r\n/**\r\n * Visit nodes, with ancestral information.\r\n *\r\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\r\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\r\n *\r\n * You can choose for which nodes `visitor` is called by passing a `test`.\r\n * For complex tests, you should test yourself in `visitor`, as it will be\r\n * faster and will have improved type information.\r\n *\r\n * Walking the tree is an intensive task.\r\n * Make use of the return values of the visitor when possible.\r\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\r\n * to check if a node matches, and then perform different operations.\r\n *\r\n * You can change the tree.\r\n * See `Visitor` for more info.\r\n *\r\n * @param tree\r\n *   Tree to traverse.\r\n * @param test\r\n *   `unist-util-is`-compatible test\r\n * @param visitor\r\n *   Handle each node.\r\n * @param reverse\r\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\r\n * @returns\r\n *   Nothing.\r\n */\r\nexport const visitParents =\r\n  /**\r\n   * @type {(\r\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\r\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\r\n   * )}\r\n   */\r\n  (\r\n    /**\r\n     * @param {Node} tree\r\n     * @param {Test} test\r\n     * @param {Visitor<Node>} visitor\r\n     * @param {boolean | null | undefined} [reverse]\r\n     * @returns {void}\r\n     */\r\n    function (tree, test, visitor, reverse) {\r\n      if (typeof test === 'function' && typeof visitor !== 'function') {\r\n        reverse = visitor\r\n        // @ts-expect-error no visitor given, so `visitor` is test.\r\n        visitor = test\r\n        test = null\r\n      }\r\n\r\n      const is = convert(test)\r\n      const step = reverse ? -1 : 1\r\n\r\n      factory(tree, undefined, [])()\r\n\r\n      /**\r\n       * @param {Node} node\r\n       * @param {number | undefined} index\r\n       * @param {Array<Parent>} parents\r\n       */\r\n      function factory(node, index, parents) {\r\n        /** @type {Record<string, unknown>} */\r\n        // @ts-expect-error: hush\r\n        const value = node && typeof node === 'object' ? node : {}\r\n\r\n        if (typeof value.type === 'string') {\r\n          const name =\r\n            // `hast`\r\n            typeof value.tagName === 'string'\r\n              ? value.tagName\r\n              : // `xast`\r\n              typeof value.name === 'string'\r\n              ? value.name\r\n              : undefined\r\n\r\n          Object.defineProperty(visit, 'name', {\r\n            value:\r\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\r\n          })\r\n        }\r\n\r\n        return visit\r\n\r\n        function visit() {\r\n          /** @type {ActionTuple} */\r\n          let result = []\r\n          /** @type {ActionTuple} */\r\n          let subresult\r\n          /** @type {number} */\r\n          let offset\r\n          /** @type {Array<Parent>} */\r\n          let grandparents\r\n\r\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\r\n            result = toResult(visitor(node, parents))\r\n\r\n            if (result[0] === EXIT) {\r\n              return result\r\n            }\r\n          }\r\n\r\n          // @ts-expect-error looks like a parent.\r\n          if (node.children && result[0] !== SKIP) {\r\n            // @ts-expect-error looks like a parent.\r\n            offset = (reverse ? node.children.length : -1) + step\r\n            // @ts-expect-error looks like a parent.\r\n            grandparents = parents.concat(node)\r\n\r\n            // @ts-expect-error looks like a parent.\r\n            while (offset > -1 && offset < node.children.length) {\r\n              // @ts-expect-error looks like a parent.\r\n              subresult = factory(node.children[offset], offset, grandparents)()\r\n\r\n              if (subresult[0] === EXIT) {\r\n                return subresult\r\n              }\r\n\r\n              offset =\r\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\r\n            }\r\n          }\r\n\r\n          return result\r\n        }\r\n      }\r\n    }\r\n  )\r\n\r\n/**\r\n * Turn a return value into a clean result.\r\n *\r\n * @param {VisitorResult} value\r\n *   Valid return values from visitors.\r\n * @returns {ActionTuple}\r\n *   Clean result.\r\n */\r\nfunction toResult(value) {\r\n  if (Array.isArray(value)) {\r\n    return value\r\n  }\r\n\r\n  if (typeof value === 'number') {\r\n    return [CONTINUE, value]\r\n  }\r\n\r\n  return [value]\r\n}\r\n", "/**\r\n * @typedef {import('unist').Node} Node\r\n * @typedef {import('unist').Parent} Parent\r\n * @typedef {import('unist-util-is').Test} Test\r\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\r\n */\r\n\r\n/**\r\n * Check if `Child` can be a child of `Ancestor`.\r\n *\r\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\r\n * `never`.\r\n *\r\n * @template {Node} Ancestor\r\n *   Node type.\r\n * @template {Node} Child\r\n *   Node type.\r\n * @typedef {(\r\n *   Ancestor extends Parent\r\n *     ? Child extends Ancestor['children'][number]\r\n *       ? Ancestor\r\n *       : never\r\n *     : never\r\n * )} ParentsOf\r\n */\r\n\r\n/**\r\n * @template {Node} [Visited=Node]\r\n *   Visited node type.\r\n * @template {Parent} [Ancestor=Parent]\r\n *   Ancestor type.\r\n * @callback Visitor\r\n *   Handle a node (matching `test`, if given).\r\n *\r\n *   Visitors are free to transform `node`.\r\n *   They can also transform `parent`.\r\n *\r\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\r\n *   descendants to be walked (which is a bug).\r\n *\r\n *   When adding or removing previous siblings of `node` (or next siblings, in\r\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\r\n *   sibling to traverse after `node` is traversed.\r\n *   Adding or removing next siblings of `node` (or previous siblings, in case\r\n *   of reverse) is handled as expected without needing to return a new `Index`.\r\n *\r\n *   Removing the children property of `parent` still results in them being\r\n *   traversed.\r\n * @param {Visited} node\r\n *   Found node.\r\n * @param {Visited extends Node ? number | null : never} index\r\n *   Index of `node` in `parent`.\r\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\r\n *   Parent of `node`.\r\n * @returns {VisitorResult}\r\n *   What to do next.\r\n *\r\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\r\n *   An `Action` is treated as a tuple of `[Action]`.\r\n *\r\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\r\n *   When the `Action` is `EXIT`, that action can be returned.\r\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\r\n */\r\n\r\n/**\r\n * Build a typed `Visitor` function from a node and all possible parents.\r\n *\r\n * It will infer which values are passed as `node` and which as `parent`.\r\n *\r\n * @template {Node} Visited\r\n *   Node type.\r\n * @template {Parent} Ancestor\r\n *   Parent type.\r\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\r\n */\r\n\r\n/**\r\n * Build a typed `Visitor` function from a list of descendants and a test.\r\n *\r\n * It will infer which values are passed as `node` and which as `parent`.\r\n *\r\n * @template {Node} Descendant\r\n *   Node type.\r\n * @template {Test} Check\r\n *   Test type.\r\n * @typedef {(\r\n *   BuildVisitorFromMatch<\r\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\r\n *     Extract<Descendant, Parent>\r\n *   >\r\n * )} BuildVisitorFromDescendants\r\n */\r\n\r\n/**\r\n * Build a typed `Visitor` function from a tree and a test.\r\n *\r\n * It will infer which values are passed as `node` and which as `parent`.\r\n *\r\n * @template {Node} [Tree=Node]\r\n *   Node type.\r\n * @template {Test} [Check=string]\r\n *   Test type.\r\n * @typedef {(\r\n *   BuildVisitorFromDescendants<\r\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\r\n *     Check\r\n *   >\r\n * )} BuildVisitor\r\n */\r\n\r\nimport {visitParents} from 'unist-util-visit-parents'\r\n\r\n/**\r\n * Visit nodes.\r\n *\r\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\r\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\r\n *\r\n * You can choose for which nodes `visitor` is called by passing a `test`.\r\n * For complex tests, you should test yourself in `visitor`, as it will be\r\n * faster and will have improved type information.\r\n *\r\n * Walking the tree is an intensive task.\r\n * Make use of the return values of the visitor when possible.\r\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\r\n * to check if a node matches, and then perform different operations.\r\n *\r\n * You can change the tree.\r\n * See `Visitor` for more info.\r\n *\r\n * @param tree\r\n *   Tree to traverse.\r\n * @param test\r\n *   `unist-util-is`-compatible test\r\n * @param visitor\r\n *   Handle each node.\r\n * @param reverse\r\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\r\n * @returns\r\n *   Nothing.\r\n */\r\nexport const visit =\r\n  /**\r\n   * @type {(\r\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\r\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\r\n   * )}\r\n   */\r\n  (\r\n    /**\r\n     * @param {Node} tree\r\n     * @param {Test} test\r\n     * @param {Visitor} visitor\r\n     * @param {boolean | null | undefined} [reverse]\r\n     * @returns {void}\r\n     */\r\n    function (tree, test, visitor, reverse) {\r\n      if (typeof test === 'function' && typeof visitor !== 'function') {\r\n        reverse = visitor\r\n        visitor = test\r\n        test = null\r\n      }\r\n\r\n      visitParents(tree, test, overload, reverse)\r\n\r\n      /**\r\n       * @param {Node} node\r\n       * @param {Array<Parent>} parents\r\n       */\r\n      function overload(node, parents) {\r\n        const parent = parents[parents.length - 1]\r\n        return visitor(\r\n          node,\r\n          parent ? parent.children.indexOf(node) : null,\r\n          parent\r\n        )\r\n      }\r\n    }\r\n  )\r\n\r\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\r\n", "/**\r\n * @typedef {import('./info.js').Info} Info\r\n * @typedef {Record<string, Info>} Properties\r\n * @typedef {Record<string, string>} Normal\r\n */\r\n\r\nexport class Schema {\r\n  /**\r\n   * @constructor\r\n   * @param {Properties} property\r\n   * @param {Normal} normal\r\n   * @param {string} [space]\r\n   */\r\n  constructor(property, normal, space) {\r\n    this.property = property\r\n    this.normal = normal\r\n    if (space) {\r\n      this.space = space\r\n    }\r\n  }\r\n}\r\n\r\n/** @type {Properties} */\r\nSchema.prototype.property = {}\r\n/** @type {Normal} */\r\nSchema.prototype.normal = {}\r\n/** @type {string|null} */\r\nSchema.prototype.space = null\r\n", "/**\r\n * @typedef {import('./schema.js').Properties} Properties\r\n * @typedef {import('./schema.js').Normal} Normal\r\n */\r\n\r\nimport {Schema} from './schema.js'\r\n\r\n/**\r\n * @param {Schema[]} definitions\r\n * @param {string} [space]\r\n * @returns {Schema}\r\n */\r\nexport function merge(definitions, space) {\r\n  /** @type {Properties} */\r\n  const property = {}\r\n  /** @type {Normal} */\r\n  const normal = {}\r\n  let index = -1\r\n\r\n  while (++index < definitions.length) {\r\n    Object.assign(property, definitions[index].property)\r\n    Object.assign(normal, definitions[index].normal)\r\n  }\r\n\r\n  return new Schema(property, normal, space)\r\n}\r\n", "/**\r\n * @param {string} value\r\n * @returns {string}\r\n */\r\nexport function normalize(value) {\r\n  return value.toLowerCase()\r\n}\r\n", "export class Info {\r\n  /**\r\n   * @constructor\r\n   * @param {string} property\r\n   * @param {string} attribute\r\n   */\r\n  constructor(property, attribute) {\r\n    /** @type {string} */\r\n    this.property = property\r\n    /** @type {string} */\r\n    this.attribute = attribute\r\n  }\r\n}\r\n\r\n/** @type {string|null} */\r\nInfo.prototype.space = null\r\nInfo.prototype.boolean = false\r\nInfo.prototype.booleanish = false\r\nInfo.prototype.overloadedBoolean = false\r\nInfo.prototype.number = false\r\nInfo.prototype.commaSeparated = false\r\nInfo.prototype.spaceSeparated = false\r\nInfo.prototype.commaOrSpaceSeparated = false\r\nInfo.prototype.mustUseProperty = false\r\nInfo.prototype.defined = false\r\n", "let powers = 0\r\n\r\nexport const boolean = increment()\r\nexport const booleanish = increment()\r\nexport const overloadedBoolean = increment()\r\nexport const number = increment()\r\nexport const spaceSeparated = increment()\r\nexport const commaSeparated = increment()\r\nexport const commaOrSpaceSeparated = increment()\r\n\r\nfunction increment() {\r\n  return 2 ** ++powers\r\n}\r\n", "import {Info} from './info.js'\r\nimport * as types from './types.js'\r\n\r\n/** @type {Array<keyof types>} */\r\n// @ts-expect-error: hush.\r\nconst checks = Object.keys(types)\r\n\r\nexport class DefinedInfo extends Info {\r\n  /**\r\n   * @constructor\r\n   * @param {string} property\r\n   * @param {string} attribute\r\n   * @param {number|null} [mask]\r\n   * @param {string} [space]\r\n   */\r\n  constructor(property, attribute, mask, space) {\r\n    let index = -1\r\n\r\n    super(property, attribute)\r\n\r\n    mark(this, 'space', space)\r\n\r\n    if (typeof mask === 'number') {\r\n      while (++index < checks.length) {\r\n        const check = checks[index]\r\n        mark(this, checks[index], (mask & types[check]) === types[check])\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nDefinedInfo.prototype.defined = true\r\n\r\n/**\r\n * @param {DefinedInfo} values\r\n * @param {string} key\r\n * @param {unknown} value\r\n */\r\nfunction mark(values, key, value) {\r\n  if (value) {\r\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\r\n    values[key] = value\r\n  }\r\n}\r\n", "/**\r\n * @typedef {import('./schema.js').Properties} Properties\r\n * @typedef {import('./schema.js').Normal} Normal\r\n *\r\n * @typedef {Record<string, string>} Attributes\r\n *\r\n * @typedef {Object} Definition\r\n * @property {Record<string, number|null>} properties\r\n * @property {(attributes: Attributes, property: string) => string} transform\r\n * @property {string} [space]\r\n * @property {Attributes} [attributes]\r\n * @property {Array<string>} [mustUseProperty]\r\n */\r\n\r\nimport {normalize} from '../normalize.js'\r\nimport {Schema} from './schema.js'\r\nimport {DefinedInfo} from './defined-info.js'\r\n\r\nconst own = {}.hasOwnProperty\r\n\r\n/**\r\n * @param {Definition} definition\r\n * @returns {Schema}\r\n */\r\nexport function create(definition) {\r\n  /** @type {Properties} */\r\n  const property = {}\r\n  /** @type {Normal} */\r\n  const normal = {}\r\n  /** @type {string} */\r\n  let prop\r\n\r\n  for (prop in definition.properties) {\r\n    if (own.call(definition.properties, prop)) {\r\n      const value = definition.properties[prop]\r\n      const info = new DefinedInfo(\r\n        prop,\r\n        definition.transform(definition.attributes || {}, prop),\r\n        value,\r\n        definition.space\r\n      )\r\n\r\n      if (\r\n        definition.mustUseProperty &&\r\n        definition.mustUseProperty.includes(prop)\r\n      ) {\r\n        info.mustUseProperty = true\r\n      }\r\n\r\n      property[prop] = info\r\n\r\n      normal[normalize(prop)] = prop\r\n      normal[normalize(info.attribute)] = prop\r\n    }\r\n  }\r\n\r\n  return new Schema(property, normal, definition.space)\r\n}\r\n", "import {create} from './util/create.js'\r\n\r\nexport const xlink = create({\r\n  space: 'xlink',\r\n  transform(_, prop) {\r\n    return 'xlink:' + prop.slice(5).toLowerCase()\r\n  },\r\n  properties: {\r\n    xLinkActuate: null,\r\n    xLinkArcRole: null,\r\n    xLinkHref: null,\r\n    xLinkRole: null,\r\n    xLinkShow: null,\r\n    xLinkTitle: null,\r\n    xLinkType: null\r\n  }\r\n})\r\n", "import {create} from './util/create.js'\r\n\r\nexport const xml = create({\r\n  space: 'xml',\r\n  transform(_, prop) {\r\n    return 'xml:' + prop.slice(3).toLowerCase()\r\n  },\r\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\r\n})\r\n", "/**\r\n * @param {Record<string, string>} attributes\r\n * @param {string} attribute\r\n * @returns {string}\r\n */\r\nexport function caseSensitiveTransform(attributes, attribute) {\r\n  return attribute in attributes ? attributes[attribute] : attribute\r\n}\r\n", "import {caseSensitiveTransform} from './case-sensitive-transform.js'\r\n\r\n/**\r\n * @param {Record<string, string>} attributes\r\n * @param {string} property\r\n * @returns {string}\r\n */\r\nexport function caseInsensitiveTransform(attributes, property) {\r\n  return caseSensitiveTransform(attributes, property.toLowerCase())\r\n}\r\n", "import {create} from './util/create.js'\r\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\r\n\r\nexport const xmlns = create({\r\n  space: 'xmlns',\r\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\r\n  transform: caseInsensitiveTransform,\r\n  properties: {xmlns: null, xmlnsXLink: null}\r\n})\r\n", "import {booleanish, number, spaceSeparated} from './util/types.js'\r\nimport {create} from './util/create.js'\r\n\r\nexport const aria = create({\r\n  transform(_, prop) {\r\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\r\n  },\r\n  properties: {\r\n    ariaActiveDescendant: null,\r\n    ariaAtomic: booleanish,\r\n    ariaAutoComplete: null,\r\n    ariaBusy: booleanish,\r\n    ariaChecked: booleanish,\r\n    ariaColCount: number,\r\n    ariaColIndex: number,\r\n    ariaColSpan: number,\r\n    ariaControls: spaceSeparated,\r\n    ariaCurrent: null,\r\n    ariaDescribedBy: spaceSeparated,\r\n    ariaDetails: null,\r\n    ariaDisabled: booleanish,\r\n    ariaDropEffect: spaceSeparated,\r\n    ariaErrorMessage: null,\r\n    ariaExpanded: booleanish,\r\n    ariaFlowTo: spaceSeparated,\r\n    ariaGrabbed: booleanish,\r\n    ariaHasPopup: null,\r\n    ariaHidden: booleanish,\r\n    ariaInvalid: null,\r\n    ariaKeyShortcuts: null,\r\n    ariaLabel: null,\r\n    ariaLabelledBy: spaceSeparated,\r\n    ariaLevel: number,\r\n    ariaLive: null,\r\n    ariaModal: booleanish,\r\n    ariaMultiLine: booleanish,\r\n    ariaMultiSelectable: booleanish,\r\n    ariaOrientation: null,\r\n    ariaOwns: spaceSeparated,\r\n    ariaPlaceholder: null,\r\n    ariaPosInSet: number,\r\n    ariaPressed: booleanish,\r\n    ariaReadOnly: booleanish,\r\n    ariaRelevant: null,\r\n    ariaRequired: booleanish,\r\n    ariaRoleDescription: spaceSeparated,\r\n    ariaRowCount: number,\r\n    ariaRowIndex: number,\r\n    ariaRowSpan: number,\r\n    ariaSelected: booleanish,\r\n    ariaSetSize: number,\r\n    ariaSort: null,\r\n    ariaValueMax: number,\r\n    ariaValueMin: number,\r\n    ariaValueNow: number,\r\n    ariaValueText: null,\r\n    role: null\r\n  }\r\n})\r\n", "import {\r\n  boolean,\r\n  overloadedBoolean,\r\n  booleanish,\r\n  number,\r\n  spaceSeparated,\r\n  commaSeparated\r\n} from './util/types.js'\r\nimport {create} from './util/create.js'\r\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\r\n\r\nexport const html = create({\r\n  space: 'html',\r\n  attributes: {\r\n    acceptcharset: 'accept-charset',\r\n    classname: 'class',\r\n    htmlfor: 'for',\r\n    httpequiv: 'http-equiv'\r\n  },\r\n  transform: caseInsensitiveTransform,\r\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\r\n  properties: {\r\n    // Standard Properties.\r\n    abbr: null,\r\n    accept: commaSeparated,\r\n    acceptCharset: spaceSeparated,\r\n    accessKey: spaceSeparated,\r\n    action: null,\r\n    allow: null,\r\n    allowFullScreen: boolean,\r\n    allowPaymentRequest: boolean,\r\n    allowUserMedia: boolean,\r\n    alt: null,\r\n    as: null,\r\n    async: boolean,\r\n    autoCapitalize: null,\r\n    autoComplete: spaceSeparated,\r\n    autoFocus: boolean,\r\n    autoPlay: boolean,\r\n    blocking: spaceSeparated,\r\n    capture: boolean,\r\n    charSet: null,\r\n    checked: boolean,\r\n    cite: null,\r\n    className: spaceSeparated,\r\n    cols: number,\r\n    colSpan: null,\r\n    content: null,\r\n    contentEditable: booleanish,\r\n    controls: boolean,\r\n    controlsList: spaceSeparated,\r\n    coords: number | commaSeparated,\r\n    crossOrigin: null,\r\n    data: null,\r\n    dateTime: null,\r\n    decoding: null,\r\n    default: boolean,\r\n    defer: boolean,\r\n    dir: null,\r\n    dirName: null,\r\n    disabled: boolean,\r\n    download: overloadedBoolean,\r\n    draggable: booleanish,\r\n    encType: null,\r\n    enterKeyHint: null,\r\n    fetchPriority: null,\r\n    form: null,\r\n    formAction: null,\r\n    formEncType: null,\r\n    formMethod: null,\r\n    formNoValidate: boolean,\r\n    formTarget: null,\r\n    headers: spaceSeparated,\r\n    height: number,\r\n    hidden: boolean,\r\n    high: number,\r\n    href: null,\r\n    hrefLang: null,\r\n    htmlFor: spaceSeparated,\r\n    httpEquiv: spaceSeparated,\r\n    id: null,\r\n    imageSizes: null,\r\n    imageSrcSet: null,\r\n    inert: boolean,\r\n    inputMode: null,\r\n    integrity: null,\r\n    is: null,\r\n    isMap: boolean,\r\n    itemId: null,\r\n    itemProp: spaceSeparated,\r\n    itemRef: spaceSeparated,\r\n    itemScope: boolean,\r\n    itemType: spaceSeparated,\r\n    kind: null,\r\n    label: null,\r\n    lang: null,\r\n    language: null,\r\n    list: null,\r\n    loading: null,\r\n    loop: boolean,\r\n    low: number,\r\n    manifest: null,\r\n    max: null,\r\n    maxLength: number,\r\n    media: null,\r\n    method: null,\r\n    min: null,\r\n    minLength: number,\r\n    multiple: boolean,\r\n    muted: boolean,\r\n    name: null,\r\n    nonce: null,\r\n    noModule: boolean,\r\n    noValidate: boolean,\r\n    onAbort: null,\r\n    onAfterPrint: null,\r\n    onAuxClick: null,\r\n    onBeforeMatch: null,\r\n    onBeforePrint: null,\r\n    onBeforeToggle: null,\r\n    onBeforeUnload: null,\r\n    onBlur: null,\r\n    onCancel: null,\r\n    onCanPlay: null,\r\n    onCanPlayThrough: null,\r\n    onChange: null,\r\n    onClick: null,\r\n    onClose: null,\r\n    onContextLost: null,\r\n    onContextMenu: null,\r\n    onContextRestored: null,\r\n    onCopy: null,\r\n    onCueChange: null,\r\n    onCut: null,\r\n    onDblClick: null,\r\n    onDrag: null,\r\n    onDragEnd: null,\r\n    onDragEnter: null,\r\n    onDragExit: null,\r\n    onDragLeave: null,\r\n    onDragOver: null,\r\n    onDragStart: null,\r\n    onDrop: null,\r\n    onDurationChange: null,\r\n    onEmptied: null,\r\n    onEnded: null,\r\n    onError: null,\r\n    onFocus: null,\r\n    onFormData: null,\r\n    onHashChange: null,\r\n    onInput: null,\r\n    onInvalid: null,\r\n    onKeyDown: null,\r\n    onKeyPress: null,\r\n    onKeyUp: null,\r\n    onLanguageChange: null,\r\n    onLoad: null,\r\n    onLoadedData: null,\r\n    onLoadedMetadata: null,\r\n    onLoadEnd: null,\r\n    onLoadStart: null,\r\n    onMessage: null,\r\n    onMessageError: null,\r\n    onMouseDown: null,\r\n    onMouseEnter: null,\r\n    onMouseLeave: null,\r\n    onMouseMove: null,\r\n    onMouseOut: null,\r\n    onMouseOver: null,\r\n    onMouseUp: null,\r\n    onOffline: null,\r\n    onOnline: null,\r\n    onPageHide: null,\r\n    onPageShow: null,\r\n    onPaste: null,\r\n    onPause: null,\r\n    onPlay: null,\r\n    onPlaying: null,\r\n    onPopState: null,\r\n    onProgress: null,\r\n    onRateChange: null,\r\n    onRejectionHandled: null,\r\n    onReset: null,\r\n    onResize: null,\r\n    onScroll: null,\r\n    onScrollEnd: null,\r\n    onSecurityPolicyViolation: null,\r\n    onSeeked: null,\r\n    onSeeking: null,\r\n    onSelect: null,\r\n    onSlotChange: null,\r\n    onStalled: null,\r\n    onStorage: null,\r\n    onSubmit: null,\r\n    onSuspend: null,\r\n    onTimeUpdate: null,\r\n    onToggle: null,\r\n    onUnhandledRejection: null,\r\n    onUnload: null,\r\n    onVolumeChange: null,\r\n    onWaiting: null,\r\n    onWheel: null,\r\n    open: boolean,\r\n    optimum: number,\r\n    pattern: null,\r\n    ping: spaceSeparated,\r\n    placeholder: null,\r\n    playsInline: boolean,\r\n    popover: null,\r\n    popoverTarget: null,\r\n    popoverTargetAction: null,\r\n    poster: null,\r\n    preload: null,\r\n    readOnly: boolean,\r\n    referrerPolicy: null,\r\n    rel: spaceSeparated,\r\n    required: boolean,\r\n    reversed: boolean,\r\n    rows: number,\r\n    rowSpan: number,\r\n    sandbox: spaceSeparated,\r\n    scope: null,\r\n    scoped: boolean,\r\n    seamless: boolean,\r\n    selected: boolean,\r\n    shadowRootDelegatesFocus: boolean,\r\n    shadowRootMode: null,\r\n    shape: null,\r\n    size: number,\r\n    sizes: null,\r\n    slot: null,\r\n    span: number,\r\n    spellCheck: booleanish,\r\n    src: null,\r\n    srcDoc: null,\r\n    srcLang: null,\r\n    srcSet: null,\r\n    start: number,\r\n    step: null,\r\n    style: null,\r\n    tabIndex: number,\r\n    target: null,\r\n    title: null,\r\n    translate: null,\r\n    type: null,\r\n    typeMustMatch: boolean,\r\n    useMap: null,\r\n    value: booleanish,\r\n    width: number,\r\n    wrap: null,\r\n\r\n    // Legacy.\r\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\r\n    align: null, // Several. Use CSS `text-align` instead,\r\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\r\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\r\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\r\n    background: null, // `<body>`. Use CSS `background-image` instead\r\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\r\n    border: number, // `<table>`. Use CSS `border-width` instead,\r\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\r\n    bottomMargin: number, // `<body>`\r\n    cellPadding: null, // `<table>`\r\n    cellSpacing: null, // `<table>`\r\n    char: null, // Several table elements. When `align=char`, sets the character to align on\r\n    charOff: null, // Several table elements. When `char`, offsets the alignment\r\n    classId: null, // `<object>`\r\n    clear: null, // `<br>`. Use CSS `clear` instead\r\n    code: null, // `<object>`\r\n    codeBase: null, // `<object>`\r\n    codeType: null, // `<object>`\r\n    color: null, // `<font>` and `<hr>`. Use CSS instead\r\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\r\n    declare: boolean, // `<object>`\r\n    event: null, // `<script>`\r\n    face: null, // `<font>`. Use CSS instead\r\n    frame: null, // `<table>`\r\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\r\n    hSpace: number, // `<img>` and `<object>`\r\n    leftMargin: number, // `<body>`\r\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\r\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\r\n    lowSrc: null, // `<img>`. Use a `<picture>`\r\n    marginHeight: number, // `<body>`\r\n    marginWidth: number, // `<body>`\r\n    noResize: boolean, // `<frame>`\r\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\r\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\r\n    noWrap: boolean, // `<td>` and `<th>`\r\n    object: null, // `<applet>`\r\n    profile: null, // `<head>`\r\n    prompt: null, // `<isindex>`\r\n    rev: null, // `<link>`\r\n    rightMargin: number, // `<body>`\r\n    rules: null, // `<table>`\r\n    scheme: null, // `<meta>`\r\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\r\n    standby: null, // `<object>`\r\n    summary: null, // `<table>`\r\n    text: null, // `<body>`. Use CSS `color` instead\r\n    topMargin: number, // `<body>`\r\n    valueType: null, // `<param>`\r\n    version: null, // `<html>`. Use a doctype.\r\n    vAlign: null, // Several. Use CSS `vertical-align` instead\r\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\r\n    vSpace: number, // `<img>` and `<object>`\r\n\r\n    // Non-standard Properties.\r\n    allowTransparency: null,\r\n    autoCorrect: null,\r\n    autoSave: null,\r\n    disablePictureInPicture: boolean,\r\n    disableRemotePlayback: boolean,\r\n    prefix: null,\r\n    property: null,\r\n    results: number,\r\n    security: null,\r\n    unselectable: null\r\n  }\r\n})\r\n", "import {\r\n  boolean,\r\n  number,\r\n  spaceSeparated,\r\n  commaSeparated,\r\n  commaOrSpaceSeparated\r\n} from './util/types.js'\r\nimport {create} from './util/create.js'\r\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\r\n\r\nexport const svg = create({\r\n  space: 'svg',\r\n  attributes: {\r\n    accentHeight: 'accent-height',\r\n    alignmentBaseline: 'alignment-baseline',\r\n    arabicForm: 'arabic-form',\r\n    baselineShift: 'baseline-shift',\r\n    capHeight: 'cap-height',\r\n    className: 'class',\r\n    clipPath: 'clip-path',\r\n    clipRule: 'clip-rule',\r\n    colorInterpolation: 'color-interpolation',\r\n    colorInterpolationFilters: 'color-interpolation-filters',\r\n    colorProfile: 'color-profile',\r\n    colorRendering: 'color-rendering',\r\n    crossOrigin: 'crossorigin',\r\n    dataType: 'datatype',\r\n    dominantBaseline: 'dominant-baseline',\r\n    enableBackground: 'enable-background',\r\n    fillOpacity: 'fill-opacity',\r\n    fillRule: 'fill-rule',\r\n    floodColor: 'flood-color',\r\n    floodOpacity: 'flood-opacity',\r\n    fontFamily: 'font-family',\r\n    fontSize: 'font-size',\r\n    fontSizeAdjust: 'font-size-adjust',\r\n    fontStretch: 'font-stretch',\r\n    fontStyle: 'font-style',\r\n    fontVariant: 'font-variant',\r\n    fontWeight: 'font-weight',\r\n    glyphName: 'glyph-name',\r\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\r\n    glyphOrientationVertical: 'glyph-orientation-vertical',\r\n    hrefLang: 'hreflang',\r\n    horizAdvX: 'horiz-adv-x',\r\n    horizOriginX: 'horiz-origin-x',\r\n    horizOriginY: 'horiz-origin-y',\r\n    imageRendering: 'image-rendering',\r\n    letterSpacing: 'letter-spacing',\r\n    lightingColor: 'lighting-color',\r\n    markerEnd: 'marker-end',\r\n    markerMid: 'marker-mid',\r\n    markerStart: 'marker-start',\r\n    navDown: 'nav-down',\r\n    navDownLeft: 'nav-down-left',\r\n    navDownRight: 'nav-down-right',\r\n    navLeft: 'nav-left',\r\n    navNext: 'nav-next',\r\n    navPrev: 'nav-prev',\r\n    navRight: 'nav-right',\r\n    navUp: 'nav-up',\r\n    navUpLeft: 'nav-up-left',\r\n    navUpRight: 'nav-up-right',\r\n    onAbort: 'onabort',\r\n    onActivate: 'onactivate',\r\n    onAfterPrint: 'onafterprint',\r\n    onBeforePrint: 'onbeforeprint',\r\n    onBegin: 'onbegin',\r\n    onCancel: 'oncancel',\r\n    onCanPlay: 'oncanplay',\r\n    onCanPlayThrough: 'oncanplaythrough',\r\n    onChange: 'onchange',\r\n    onClick: 'onclick',\r\n    onClose: 'onclose',\r\n    onCopy: 'oncopy',\r\n    onCueChange: 'oncuechange',\r\n    onCut: 'oncut',\r\n    onDblClick: 'ondblclick',\r\n    onDrag: 'ondrag',\r\n    onDragEnd: 'ondragend',\r\n    onDragEnter: 'ondragenter',\r\n    onDragExit: 'ondragexit',\r\n    onDragLeave: 'ondragleave',\r\n    onDragOver: 'ondragover',\r\n    onDragStart: 'ondragstart',\r\n    onDrop: 'ondrop',\r\n    onDurationChange: 'ondurationchange',\r\n    onEmptied: 'onemptied',\r\n    onEnd: 'onend',\r\n    onEnded: 'onended',\r\n    onError: 'onerror',\r\n    onFocus: 'onfocus',\r\n    onFocusIn: 'onfocusin',\r\n    onFocusOut: 'onfocusout',\r\n    onHashChange: 'onhashchange',\r\n    onInput: 'oninput',\r\n    onInvalid: 'oninvalid',\r\n    onKeyDown: 'onkeydown',\r\n    onKeyPress: 'onkeypress',\r\n    onKeyUp: 'onkeyup',\r\n    onLoad: 'onload',\r\n    onLoadedData: 'onloadeddata',\r\n    onLoadedMetadata: 'onloadedmetadata',\r\n    onLoadStart: 'onloadstart',\r\n    onMessage: 'onmessage',\r\n    onMouseDown: 'onmousedown',\r\n    onMouseEnter: 'onmouseenter',\r\n    onMouseLeave: 'onmouseleave',\r\n    onMouseMove: 'onmousemove',\r\n    onMouseOut: 'onmouseout',\r\n    onMouseOver: 'onmouseover',\r\n    onMouseUp: 'onmouseup',\r\n    onMouseWheel: 'onmousewheel',\r\n    onOffline: 'onoffline',\r\n    onOnline: 'ononline',\r\n    onPageHide: 'onpagehide',\r\n    onPageShow: 'onpageshow',\r\n    onPaste: 'onpaste',\r\n    onPause: 'onpause',\r\n    onPlay: 'onplay',\r\n    onPlaying: 'onplaying',\r\n    onPopState: 'onpopstate',\r\n    onProgress: 'onprogress',\r\n    onRateChange: 'onratechange',\r\n    onRepeat: 'onrepeat',\r\n    onReset: 'onreset',\r\n    onResize: 'onresize',\r\n    onScroll: 'onscroll',\r\n    onSeeked: 'onseeked',\r\n    onSeeking: 'onseeking',\r\n    onSelect: 'onselect',\r\n    onShow: 'onshow',\r\n    onStalled: 'onstalled',\r\n    onStorage: 'onstorage',\r\n    onSubmit: 'onsubmit',\r\n    onSuspend: 'onsuspend',\r\n    onTimeUpdate: 'ontimeupdate',\r\n    onToggle: 'ontoggle',\r\n    onUnload: 'onunload',\r\n    onVolumeChange: 'onvolumechange',\r\n    onWaiting: 'onwaiting',\r\n    onZoom: 'onzoom',\r\n    overlinePosition: 'overline-position',\r\n    overlineThickness: 'overline-thickness',\r\n    paintOrder: 'paint-order',\r\n    panose1: 'panose-1',\r\n    pointerEvents: 'pointer-events',\r\n    referrerPolicy: 'referrerpolicy',\r\n    renderingIntent: 'rendering-intent',\r\n    shapeRendering: 'shape-rendering',\r\n    stopColor: 'stop-color',\r\n    stopOpacity: 'stop-opacity',\r\n    strikethroughPosition: 'strikethrough-position',\r\n    strikethroughThickness: 'strikethrough-thickness',\r\n    strokeDashArray: 'stroke-dasharray',\r\n    strokeDashOffset: 'stroke-dashoffset',\r\n    strokeLineCap: 'stroke-linecap',\r\n    strokeLineJoin: 'stroke-linejoin',\r\n    strokeMiterLimit: 'stroke-miterlimit',\r\n    strokeOpacity: 'stroke-opacity',\r\n    strokeWidth: 'stroke-width',\r\n    tabIndex: 'tabindex',\r\n    textAnchor: 'text-anchor',\r\n    textDecoration: 'text-decoration',\r\n    textRendering: 'text-rendering',\r\n    transformOrigin: 'transform-origin',\r\n    typeOf: 'typeof',\r\n    underlinePosition: 'underline-position',\r\n    underlineThickness: 'underline-thickness',\r\n    unicodeBidi: 'unicode-bidi',\r\n    unicodeRange: 'unicode-range',\r\n    unitsPerEm: 'units-per-em',\r\n    vAlphabetic: 'v-alphabetic',\r\n    vHanging: 'v-hanging',\r\n    vIdeographic: 'v-ideographic',\r\n    vMathematical: 'v-mathematical',\r\n    vectorEffect: 'vector-effect',\r\n    vertAdvY: 'vert-adv-y',\r\n    vertOriginX: 'vert-origin-x',\r\n    vertOriginY: 'vert-origin-y',\r\n    wordSpacing: 'word-spacing',\r\n    writingMode: 'writing-mode',\r\n    xHeight: 'x-height',\r\n    // These were camelcased in Tiny. Now lowercased in SVG 2\r\n    playbackOrder: 'playbackorder',\r\n    timelineBegin: 'timelinebegin'\r\n  },\r\n  transform: caseSensitiveTransform,\r\n  properties: {\r\n    about: commaOrSpaceSeparated,\r\n    accentHeight: number,\r\n    accumulate: null,\r\n    additive: null,\r\n    alignmentBaseline: null,\r\n    alphabetic: number,\r\n    amplitude: number,\r\n    arabicForm: null,\r\n    ascent: number,\r\n    attributeName: null,\r\n    attributeType: null,\r\n    azimuth: number,\r\n    bandwidth: null,\r\n    baselineShift: null,\r\n    baseFrequency: null,\r\n    baseProfile: null,\r\n    bbox: null,\r\n    begin: null,\r\n    bias: number,\r\n    by: null,\r\n    calcMode: null,\r\n    capHeight: number,\r\n    className: spaceSeparated,\r\n    clip: null,\r\n    clipPath: null,\r\n    clipPathUnits: null,\r\n    clipRule: null,\r\n    color: null,\r\n    colorInterpolation: null,\r\n    colorInterpolationFilters: null,\r\n    colorProfile: null,\r\n    colorRendering: null,\r\n    content: null,\r\n    contentScriptType: null,\r\n    contentStyleType: null,\r\n    crossOrigin: null,\r\n    cursor: null,\r\n    cx: null,\r\n    cy: null,\r\n    d: null,\r\n    dataType: null,\r\n    defaultAction: null,\r\n    descent: number,\r\n    diffuseConstant: number,\r\n    direction: null,\r\n    display: null,\r\n    dur: null,\r\n    divisor: number,\r\n    dominantBaseline: null,\r\n    download: boolean,\r\n    dx: null,\r\n    dy: null,\r\n    edgeMode: null,\r\n    editable: null,\r\n    elevation: number,\r\n    enableBackground: null,\r\n    end: null,\r\n    event: null,\r\n    exponent: number,\r\n    externalResourcesRequired: null,\r\n    fill: null,\r\n    fillOpacity: number,\r\n    fillRule: null,\r\n    filter: null,\r\n    filterRes: null,\r\n    filterUnits: null,\r\n    floodColor: null,\r\n    floodOpacity: null,\r\n    focusable: null,\r\n    focusHighlight: null,\r\n    fontFamily: null,\r\n    fontSize: null,\r\n    fontSizeAdjust: null,\r\n    fontStretch: null,\r\n    fontStyle: null,\r\n    fontVariant: null,\r\n    fontWeight: null,\r\n    format: null,\r\n    fr: null,\r\n    from: null,\r\n    fx: null,\r\n    fy: null,\r\n    g1: commaSeparated,\r\n    g2: commaSeparated,\r\n    glyphName: commaSeparated,\r\n    glyphOrientationHorizontal: null,\r\n    glyphOrientationVertical: null,\r\n    glyphRef: null,\r\n    gradientTransform: null,\r\n    gradientUnits: null,\r\n    handler: null,\r\n    hanging: number,\r\n    hatchContentUnits: null,\r\n    hatchUnits: null,\r\n    height: null,\r\n    href: null,\r\n    hrefLang: null,\r\n    horizAdvX: number,\r\n    horizOriginX: number,\r\n    horizOriginY: number,\r\n    id: null,\r\n    ideographic: number,\r\n    imageRendering: null,\r\n    initialVisibility: null,\r\n    in: null,\r\n    in2: null,\r\n    intercept: number,\r\n    k: number,\r\n    k1: number,\r\n    k2: number,\r\n    k3: number,\r\n    k4: number,\r\n    kernelMatrix: commaOrSpaceSeparated,\r\n    kernelUnitLength: null,\r\n    keyPoints: null, // SEMI_COLON_SEPARATED\r\n    keySplines: null, // SEMI_COLON_SEPARATED\r\n    keyTimes: null, // SEMI_COLON_SEPARATED\r\n    kerning: null,\r\n    lang: null,\r\n    lengthAdjust: null,\r\n    letterSpacing: null,\r\n    lightingColor: null,\r\n    limitingConeAngle: number,\r\n    local: null,\r\n    markerEnd: null,\r\n    markerMid: null,\r\n    markerStart: null,\r\n    markerHeight: null,\r\n    markerUnits: null,\r\n    markerWidth: null,\r\n    mask: null,\r\n    maskContentUnits: null,\r\n    maskUnits: null,\r\n    mathematical: null,\r\n    max: null,\r\n    media: null,\r\n    mediaCharacterEncoding: null,\r\n    mediaContentEncodings: null,\r\n    mediaSize: number,\r\n    mediaTime: null,\r\n    method: null,\r\n    min: null,\r\n    mode: null,\r\n    name: null,\r\n    navDown: null,\r\n    navDownLeft: null,\r\n    navDownRight: null,\r\n    navLeft: null,\r\n    navNext: null,\r\n    navPrev: null,\r\n    navRight: null,\r\n    navUp: null,\r\n    navUpLeft: null,\r\n    navUpRight: null,\r\n    numOctaves: null,\r\n    observer: null,\r\n    offset: null,\r\n    onAbort: null,\r\n    onActivate: null,\r\n    onAfterPrint: null,\r\n    onBeforePrint: null,\r\n    onBegin: null,\r\n    onCancel: null,\r\n    onCanPlay: null,\r\n    onCanPlayThrough: null,\r\n    onChange: null,\r\n    onClick: null,\r\n    onClose: null,\r\n    onCopy: null,\r\n    onCueChange: null,\r\n    onCut: null,\r\n    onDblClick: null,\r\n    onDrag: null,\r\n    onDragEnd: null,\r\n    onDragEnter: null,\r\n    onDragExit: null,\r\n    onDragLeave: null,\r\n    onDragOver: null,\r\n    onDragStart: null,\r\n    onDrop: null,\r\n    onDurationChange: null,\r\n    onEmptied: null,\r\n    onEnd: null,\r\n    onEnded: null,\r\n    onError: null,\r\n    onFocus: null,\r\n    onFocusIn: null,\r\n    onFocusOut: null,\r\n    onHashChange: null,\r\n    onInput: null,\r\n    onInvalid: null,\r\n    onKeyDown: null,\r\n    onKeyPress: null,\r\n    onKeyUp: null,\r\n    onLoad: null,\r\n    onLoadedData: null,\r\n    onLoadedMetadata: null,\r\n    onLoadStart: null,\r\n    onMessage: null,\r\n    onMouseDown: null,\r\n    onMouseEnter: null,\r\n    onMouseLeave: null,\r\n    onMouseMove: null,\r\n    onMouseOut: null,\r\n    onMouseOver: null,\r\n    onMouseUp: null,\r\n    onMouseWheel: null,\r\n    onOffline: null,\r\n    onOnline: null,\r\n    onPageHide: null,\r\n    onPageShow: null,\r\n    onPaste: null,\r\n    onPause: null,\r\n    onPlay: null,\r\n    onPlaying: null,\r\n    onPopState: null,\r\n    onProgress: null,\r\n    onRateChange: null,\r\n    onRepeat: null,\r\n    onReset: null,\r\n    onResize: null,\r\n    onScroll: null,\r\n    onSeeked: null,\r\n    onSeeking: null,\r\n    onSelect: null,\r\n    onShow: null,\r\n    onStalled: null,\r\n    onStorage: null,\r\n    onSubmit: null,\r\n    onSuspend: null,\r\n    onTimeUpdate: null,\r\n    onToggle: null,\r\n    onUnload: null,\r\n    onVolumeChange: null,\r\n    onWaiting: null,\r\n    onZoom: null,\r\n    opacity: null,\r\n    operator: null,\r\n    order: null,\r\n    orient: null,\r\n    orientation: null,\r\n    origin: null,\r\n    overflow: null,\r\n    overlay: null,\r\n    overlinePosition: number,\r\n    overlineThickness: number,\r\n    paintOrder: null,\r\n    panose1: null,\r\n    path: null,\r\n    pathLength: number,\r\n    patternContentUnits: null,\r\n    patternTransform: null,\r\n    patternUnits: null,\r\n    phase: null,\r\n    ping: spaceSeparated,\r\n    pitch: null,\r\n    playbackOrder: null,\r\n    pointerEvents: null,\r\n    points: null,\r\n    pointsAtX: number,\r\n    pointsAtY: number,\r\n    pointsAtZ: number,\r\n    preserveAlpha: null,\r\n    preserveAspectRatio: null,\r\n    primitiveUnits: null,\r\n    propagate: null,\r\n    property: commaOrSpaceSeparated,\r\n    r: null,\r\n    radius: null,\r\n    referrerPolicy: null,\r\n    refX: null,\r\n    refY: null,\r\n    rel: commaOrSpaceSeparated,\r\n    rev: commaOrSpaceSeparated,\r\n    renderingIntent: null,\r\n    repeatCount: null,\r\n    repeatDur: null,\r\n    requiredExtensions: commaOrSpaceSeparated,\r\n    requiredFeatures: commaOrSpaceSeparated,\r\n    requiredFonts: commaOrSpaceSeparated,\r\n    requiredFormats: commaOrSpaceSeparated,\r\n    resource: null,\r\n    restart: null,\r\n    result: null,\r\n    rotate: null,\r\n    rx: null,\r\n    ry: null,\r\n    scale: null,\r\n    seed: null,\r\n    shapeRendering: null,\r\n    side: null,\r\n    slope: null,\r\n    snapshotTime: null,\r\n    specularConstant: number,\r\n    specularExponent: number,\r\n    spreadMethod: null,\r\n    spacing: null,\r\n    startOffset: null,\r\n    stdDeviation: null,\r\n    stemh: null,\r\n    stemv: null,\r\n    stitchTiles: null,\r\n    stopColor: null,\r\n    stopOpacity: null,\r\n    strikethroughPosition: number,\r\n    strikethroughThickness: number,\r\n    string: null,\r\n    stroke: null,\r\n    strokeDashArray: commaOrSpaceSeparated,\r\n    strokeDashOffset: null,\r\n    strokeLineCap: null,\r\n    strokeLineJoin: null,\r\n    strokeMiterLimit: number,\r\n    strokeOpacity: number,\r\n    strokeWidth: null,\r\n    style: null,\r\n    surfaceScale: number,\r\n    syncBehavior: null,\r\n    syncBehaviorDefault: null,\r\n    syncMaster: null,\r\n    syncTolerance: null,\r\n    syncToleranceDefault: null,\r\n    systemLanguage: commaOrSpaceSeparated,\r\n    tabIndex: number,\r\n    tableValues: null,\r\n    target: null,\r\n    targetX: number,\r\n    targetY: number,\r\n    textAnchor: null,\r\n    textDecoration: null,\r\n    textRendering: null,\r\n    textLength: null,\r\n    timelineBegin: null,\r\n    title: null,\r\n    transformBehavior: null,\r\n    type: null,\r\n    typeOf: commaOrSpaceSeparated,\r\n    to: null,\r\n    transform: null,\r\n    transformOrigin: null,\r\n    u1: null,\r\n    u2: null,\r\n    underlinePosition: number,\r\n    underlineThickness: number,\r\n    unicode: null,\r\n    unicodeBidi: null,\r\n    unicodeRange: null,\r\n    unitsPerEm: number,\r\n    values: null,\r\n    vAlphabetic: number,\r\n    vMathematical: number,\r\n    vectorEffect: null,\r\n    vHanging: number,\r\n    vIdeographic: number,\r\n    version: null,\r\n    vertAdvY: number,\r\n    vertOriginX: number,\r\n    vertOriginY: number,\r\n    viewBox: null,\r\n    viewTarget: null,\r\n    visibility: null,\r\n    width: null,\r\n    widths: null,\r\n    wordSpacing: null,\r\n    writingMode: null,\r\n    x: null,\r\n    x1: null,\r\n    x2: null,\r\n    xChannelSelector: null,\r\n    xHeight: number,\r\n    y: null,\r\n    y1: null,\r\n    y2: null,\r\n    yChannelSelector: null,\r\n    z: null,\r\n    zoomAndPan: null\r\n  }\r\n})\r\n", "/**\r\n * @typedef {import('./util/schema.js').Schema} Schema\r\n */\r\n\r\nimport {normalize} from './normalize.js'\r\nimport {DefinedInfo} from './util/defined-info.js'\r\nimport {Info} from './util/info.js'\r\n\r\nconst valid = /^data[-\\w.:]+$/i\r\nconst dash = /-[a-z]/g\r\nconst cap = /[A-Z]/g\r\n\r\n/**\r\n * @param {Schema} schema\r\n * @param {string} value\r\n * @returns {Info}\r\n */\r\nexport function find(schema, value) {\r\n  const normal = normalize(value)\r\n  let prop = value\r\n  let Type = Info\r\n\r\n  if (normal in schema.normal) {\r\n    return schema.property[schema.normal[normal]]\r\n  }\r\n\r\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\r\n    // Attribute or property.\r\n    if (value.charAt(4) === '-') {\r\n      // Turn it into a property.\r\n      const rest = value.slice(5).replace(dash, camelcase)\r\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\r\n    } else {\r\n      // Turn it into an attribute.\r\n      const rest = value.slice(4)\r\n\r\n      if (!dash.test(rest)) {\r\n        let dashes = rest.replace(cap, kebab)\r\n\r\n        if (dashes.charAt(0) !== '-') {\r\n          dashes = '-' + dashes\r\n        }\r\n\r\n        value = 'data' + dashes\r\n      }\r\n    }\r\n\r\n    Type = DefinedInfo\r\n  }\r\n\r\n  return new Type(prop, value)\r\n}\r\n\r\n/**\r\n * @param {string} $0\r\n * @returns {string}\r\n */\r\nfunction kebab($0) {\r\n  return '-' + $0.toLowerCase()\r\n}\r\n\r\n/**\r\n * @param {string} $0\r\n * @returns {string}\r\n */\r\nfunction camelcase($0) {\r\n  return $0.charAt(1).toUpperCase()\r\n}\r\n", "/**\r\n * @typedef {import('./lib/util/info.js').Info} Info\r\n * @typedef {import('./lib/util/schema.js').Schema} Schema\r\n */\r\n\r\nimport {merge} from './lib/util/merge.js'\r\nimport {xlink} from './lib/xlink.js'\r\nimport {xml} from './lib/xml.js'\r\nimport {xmlns} from './lib/xmlns.js'\r\nimport {aria} from './lib/aria.js'\r\nimport {html as htmlBase} from './lib/html.js'\r\nimport {svg as svgBase} from './lib/svg.js'\r\n\r\nexport {find} from './lib/find.js'\r\nexport {hastToReact} from './lib/hast-to-react.js'\r\nexport {normalize} from './lib/normalize.js'\r\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\r\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\r\n", "/**\r\n * @typedef {import('hast').Properties} Properties\r\n * @typedef {import('hast').Element} Element\r\n */\r\n\r\nconst search = /[#.]/g\r\n\r\n/**\r\n * Create a hast element from a simple CSS selector.\r\n *\r\n * @template {string} Selector\r\n *   Type of selector.\r\n * @template {string} [DefaultTagName='div']\r\n *   Type of default tag name.\r\n * @param {Selector | null | undefined} [selector]\r\n *   Simple CSS selector.\r\n *\r\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\r\n *   Multiple classes are allowed.\r\n *   Uses the last ID if multiple IDs are found.\r\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\r\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\r\n * @returns {Element & {tagName: import('./extract.js').ExtractTagName<Selector, DefaultTagName>}}\r\n *   Built element.\r\n */\r\nexport function parseSelector(selector, defaultTagName) {\r\n  const value = selector || ''\r\n  /** @type {Properties} */\r\n  const props = {}\r\n  let start = 0\r\n  /** @type {string | undefined} */\r\n  let previous\r\n  /** @type {string | undefined} */\r\n  let tagName\r\n\r\n  while (start < value.length) {\r\n    search.lastIndex = start\r\n    const match = search.exec(value)\r\n    const subvalue = value.slice(start, match ? match.index : value.length)\r\n\r\n    if (subvalue) {\r\n      if (!previous) {\r\n        tagName = subvalue\r\n      } else if (previous === '#') {\r\n        props.id = subvalue\r\n      } else if (Array.isArray(props.className)) {\r\n        props.className.push(subvalue)\r\n      } else {\r\n        props.className = [subvalue]\r\n      }\r\n\r\n      start += subvalue.length\r\n    }\r\n\r\n    if (match) {\r\n      previous = match[0]\r\n      start++\r\n    }\r\n  }\r\n\r\n  return {\r\n    type: 'element',\r\n    // @ts-expect-error: fine.\r\n    tagName: tagName || defaultTagName || 'div',\r\n    properties: props,\r\n    children: []\r\n  }\r\n}\r\n", "/**\r\n * Parse space-separated tokens to an array of strings.\r\n *\r\n * @param {string} value\r\n *   Space-separated tokens.\r\n * @returns {Array<string>}\r\n *   List of tokens.\r\n */\r\nexport function parse(value) {\r\n  const input = String(value || '').trim()\r\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\r\n}\r\n\r\n/**\r\n * Serialize an array of strings as space separated-tokens.\r\n *\r\n * @param {Array<string|number>} values\r\n *   List of tokens.\r\n * @returns {string}\r\n *   Space-separated tokens.\r\n */\r\nexport function stringify(values) {\r\n  return values.join(' ').trim()\r\n}\r\n", "/**\r\n * @typedef Options\r\n *   Configuration for `stringify`.\r\n * @property {boolean} [padLeft=true]\r\n *   Whether to pad a space before a token.\r\n * @property {boolean} [padRight=false]\r\n *   Whether to pad a space after a token.\r\n */\r\n\r\n/**\r\n * @typedef {Options} StringifyOptions\r\n *   Please use `StringifyOptions` instead.\r\n */\r\n\r\n/**\r\n * Parse comma-separated tokens to an array.\r\n *\r\n * @param {string} value\r\n *   Comma-separated tokens.\r\n * @returns {Array<string>}\r\n *   List of tokens.\r\n */\r\nexport function parse(value) {\r\n  /** @type {Array<string>} */\r\n  const tokens = []\r\n  const input = String(value || '')\r\n  let index = input.indexOf(',')\r\n  let start = 0\r\n  /** @type {boolean} */\r\n  let end = false\r\n\r\n  while (!end) {\r\n    if (index === -1) {\r\n      index = input.length\r\n      end = true\r\n    }\r\n\r\n    const token = input.slice(start, index).trim()\r\n\r\n    if (token || !end) {\r\n      tokens.push(token)\r\n    }\r\n\r\n    start = index + 1\r\n    index = input.indexOf(',', start)\r\n  }\r\n\r\n  return tokens\r\n}\r\n\r\n/**\r\n * Serialize an array of strings or numbers to comma-separated tokens.\r\n *\r\n * @param {Array<string|number>} values\r\n *   List of tokens.\r\n * @param {Options} [options]\r\n *   Configuration for `stringify` (optional).\r\n * @returns {string}\r\n *   Comma-separated tokens.\r\n */\r\nexport function stringify(values, options) {\r\n  const settings = options || {}\r\n\r\n  // Ensure the last empty entry is seen.\r\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\r\n\r\n  return input\r\n    .join(\r\n      (settings.padRight ? ' ' : '') +\r\n        ',' +\r\n        (settings.padLeft === false ? '' : ' ')\r\n    )\r\n    .trim()\r\n}\r\n", "/**\r\n * @typedef {import('hast').Root} Root\r\n * @typedef {import('hast').Content} Content\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').Properties} Properties\r\n * @typedef {import('property-information').Info} Info\r\n * @typedef {import('property-information').Schema} Schema\r\n */\r\n\r\n/**\r\n * @typedef {Content | Root} Node\r\n *   Any concrete `hast` node.\r\n * @typedef {Root | Element} HResult\r\n *   Result from a `h` (or `s`) call.\r\n *\r\n * @typedef {string | number} HStyleValue\r\n *   Value for a CSS style field.\r\n * @typedef {Record<string, HStyleValue>} HStyle\r\n *   Supported value of a `style` prop.\r\n * @typedef {string | number | boolean | null | undefined} HPrimitiveValue\r\n *   Primitive property value.\r\n * @typedef {Array<string | number>} HArrayValue\r\n *   List of property values for space- or comma separated values (such as `className`).\r\n * @typedef {HPrimitiveValue | HArrayValue} HPropertyValue\r\n *   Primitive value or list value.\r\n * @typedef {{[property: string]: HPropertyValue | HStyle}} HProperties\r\n *   Acceptable value for element properties.\r\n *\r\n * @typedef {string | number | null | undefined} HPrimitiveChild\r\n *   Primitive children, either ignored (nullish), or turned into text nodes.\r\n * @typedef {Array<Node | HPrimitiveChild>} HArrayChild\r\n *   List of children.\r\n * @typedef {Node | HPrimitiveChild | HArrayChild} HChild\r\n *   Acceptable child value.\r\n */\r\n\r\nimport {find, normalize} from 'property-information'\r\nimport {parseSelector} from 'hast-util-parse-selector'\r\nimport {parse as spaces} from 'space-separated-tokens'\r\nimport {parse as commas} from 'comma-separated-tokens'\r\n\r\nconst buttonTypes = new Set(['menu', 'submit', 'reset', 'button'])\r\n\r\nconst own = {}.hasOwnProperty\r\n\r\n/**\r\n * @param {Schema} schema\r\n * @param {string} defaultTagName\r\n * @param {Array<string>} [caseSensitive]\r\n */\r\nexport function core(schema, defaultTagName, caseSensitive) {\r\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\r\n\r\n  const h =\r\n    /**\r\n     * @type {{\r\n     *   (): Root\r\n     *   (selector: null | undefined, ...children: Array<HChild>): Root\r\n     *   (selector: string, properties?: HProperties, ...children: Array<HChild>): Element\r\n     *   (selector: string, ...children: Array<HChild>): Element\r\n     * }}\r\n     */\r\n    (\r\n      /**\r\n       * Hyperscript compatible DSL for creating virtual hast trees.\r\n       *\r\n       * @param {string | null} [selector]\r\n       * @param {HProperties | HChild} [properties]\r\n       * @param {Array<HChild>} children\r\n       * @returns {HResult}\r\n       */\r\n      function (selector, properties, ...children) {\r\n        let index = -1\r\n        /** @type {HResult} */\r\n        let node\r\n\r\n        if (selector === undefined || selector === null) {\r\n          node = {type: 'root', children: []}\r\n          // @ts-expect-error Properties are not supported for roots.\r\n          children.unshift(properties)\r\n        } else {\r\n          node = parseSelector(selector, defaultTagName)\r\n          // Normalize the name.\r\n          node.tagName = node.tagName.toLowerCase()\r\n          if (adjust && own.call(adjust, node.tagName)) {\r\n            node.tagName = adjust[node.tagName]\r\n          }\r\n\r\n          // Handle props.\r\n          if (isProperties(properties, node.tagName)) {\r\n            /** @type {string} */\r\n            let key\r\n\r\n            for (key in properties) {\r\n              if (own.call(properties, key)) {\r\n                // @ts-expect-error `node.properties` is set.\r\n                addProperty(schema, node.properties, key, properties[key])\r\n              }\r\n            }\r\n          } else {\r\n            children.unshift(properties)\r\n          }\r\n        }\r\n\r\n        // Handle children.\r\n        while (++index < children.length) {\r\n          addChild(node.children, children[index])\r\n        }\r\n\r\n        if (node.type === 'element' && node.tagName === 'template') {\r\n          node.content = {type: 'root', children: node.children}\r\n          node.children = []\r\n        }\r\n\r\n        return node\r\n      }\r\n    )\r\n\r\n  return h\r\n}\r\n\r\n/**\r\n * @param {HProperties | HChild} value\r\n * @param {string} name\r\n * @returns {value is HProperties}\r\n */\r\nfunction isProperties(value, name) {\r\n  if (\r\n    value === null ||\r\n    value === undefined ||\r\n    typeof value !== 'object' ||\r\n    Array.isArray(value)\r\n  ) {\r\n    return false\r\n  }\r\n\r\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\r\n    return true\r\n  }\r\n\r\n  if ('children' in value && Array.isArray(value.children)) {\r\n    return false\r\n  }\r\n\r\n  if (name === 'button') {\r\n    return buttonTypes.has(value.type.toLowerCase())\r\n  }\r\n\r\n  return !('value' in value)\r\n}\r\n\r\n/**\r\n * @param {Schema} schema\r\n * @param {Properties} properties\r\n * @param {string} key\r\n * @param {HStyle | HPropertyValue} value\r\n * @returns {void}\r\n */\r\nfunction addProperty(schema, properties, key, value) {\r\n  const info = find(schema, key)\r\n  let index = -1\r\n  /** @type {HPropertyValue} */\r\n  let result\r\n\r\n  // Ignore nullish and NaN values.\r\n  if (value === undefined || value === null) return\r\n\r\n  if (typeof value === 'number') {\r\n    // Ignore NaN.\r\n    if (Number.isNaN(value)) return\r\n\r\n    result = value\r\n  }\r\n  // Booleans.\r\n  else if (typeof value === 'boolean') {\r\n    result = value\r\n  }\r\n  // Handle list values.\r\n  else if (typeof value === 'string') {\r\n    if (info.spaceSeparated) {\r\n      result = spaces(value)\r\n    } else if (info.commaSeparated) {\r\n      result = commas(value)\r\n    } else if (info.commaOrSpaceSeparated) {\r\n      result = spaces(commas(value).join(' '))\r\n    } else {\r\n      result = parsePrimitive(info, info.property, value)\r\n    }\r\n  } else if (Array.isArray(value)) {\r\n    result = value.concat()\r\n  } else {\r\n    result = info.property === 'style' ? style(value) : String(value)\r\n  }\r\n\r\n  if (Array.isArray(result)) {\r\n    /** @type {Array<string | number>} */\r\n    const finalResult = []\r\n\r\n    while (++index < result.length) {\r\n      // @ts-expect-error Assume no booleans in array.\r\n      finalResult[index] = parsePrimitive(info, info.property, result[index])\r\n    }\r\n\r\n    result = finalResult\r\n  }\r\n\r\n  // Class names (which can be added both on the `selector` and here).\r\n  if (info.property === 'className' && Array.isArray(properties.className)) {\r\n    // @ts-expect-error Assume no booleans in `className`.\r\n    result = properties.className.concat(result)\r\n  }\r\n\r\n  properties[info.property] = result\r\n}\r\n\r\n/**\r\n * @param {Array<Content>} nodes\r\n * @param {HChild} value\r\n * @returns {void}\r\n */\r\nfunction addChild(nodes, value) {\r\n  let index = -1\r\n\r\n  if (value === undefined || value === null) {\r\n    // Empty.\r\n  } else if (typeof value === 'string' || typeof value === 'number') {\r\n    nodes.push({type: 'text', value: String(value)})\r\n  } else if (Array.isArray(value)) {\r\n    while (++index < value.length) {\r\n      addChild(nodes, value[index])\r\n    }\r\n  } else if (typeof value === 'object' && 'type' in value) {\r\n    if (value.type === 'root') {\r\n      addChild(nodes, value.children)\r\n    } else {\r\n      nodes.push(value)\r\n    }\r\n  } else {\r\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\r\n  }\r\n}\r\n\r\n/**\r\n * Parse a single primitives.\r\n *\r\n * @param {Info} info\r\n * @param {string} name\r\n * @param {HPrimitiveValue} value\r\n * @returns {HPrimitiveValue}\r\n */\r\nfunction parsePrimitive(info, name, value) {\r\n  if (typeof value === 'string') {\r\n    if (info.number && value && !Number.isNaN(Number(value))) {\r\n      return Number(value)\r\n    }\r\n\r\n    if (\r\n      (info.boolean || info.overloadedBoolean) &&\r\n      (value === '' || normalize(value) === normalize(name))\r\n    ) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  return value\r\n}\r\n\r\n/**\r\n * Serialize a `style` object as a string.\r\n *\r\n * @param {HStyle} value\r\n *   Style object.\r\n * @returns {string}\r\n *   CSS string.\r\n */\r\nfunction style(value) {\r\n  /** @type {Array<string>} */\r\n  const result = []\r\n  /** @type {string} */\r\n  let key\r\n\r\n  for (key in value) {\r\n    if (own.call(value, key)) {\r\n      result.push([key, value[key]].join(': '))\r\n    }\r\n  }\r\n\r\n  return result.join('; ')\r\n}\r\n\r\n/**\r\n * Create a map to adjust casing.\r\n *\r\n * @param {Array<string>} values\r\n *   List of properly cased keys.\r\n * @returns {Record<string, string>}\r\n *   Map of lowercase keys to uppercase keys.\r\n */\r\nfunction createAdjustMap(values) {\r\n  /** @type {Record<string, string>} */\r\n  const result = {}\r\n  let index = -1\r\n\r\n  while (++index < values.length) {\r\n    result[values[index].toLowerCase()] = values[index]\r\n  }\r\n\r\n  return result\r\n}\r\n", "/**\r\n * @typedef {import('./core.js').HChild} Child\r\n *   Acceptable child value.\r\n * @typedef {import('./core.js').HProperties} Properties\r\n *   Acceptable value for element properties.\r\n * @typedef {import('./core.js').HResult} Result\r\n *   Result from a `h` (or `s`) call.\r\n *\r\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\r\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\r\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\r\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\r\n */\r\n\r\nimport {html} from 'property-information'\r\nimport {core} from './core.js'\r\n\r\nexport const h = core(html, 'div')\r\n", "export const svgCaseSensitiveTagNames = [\r\n  'altGlyph',\r\n  'altGlyphDef',\r\n  'altGlyphItem',\r\n  'animateColor',\r\n  'animateMotion',\r\n  'animateTransform',\r\n  'clipPath',\r\n  'feBlend',\r\n  'feColorMatrix',\r\n  'feComponentTransfer',\r\n  'feComposite',\r\n  'feConvolveMatrix',\r\n  'feDiffuseLighting',\r\n  'feDisplacementMap',\r\n  'feDistantLight',\r\n  'feDropShadow',\r\n  'feFlood',\r\n  'feFuncA',\r\n  'feFuncB',\r\n  'feFuncG',\r\n  'feFuncR',\r\n  'feGaussianBlur',\r\n  'feImage',\r\n  'feMerge',\r\n  'feMergeNode',\r\n  'feMorphology',\r\n  'feOffset',\r\n  'fePointLight',\r\n  'feSpecularLighting',\r\n  'feSpotLight',\r\n  'feTile',\r\n  'feTurbulence',\r\n  'foreignObject',\r\n  'glyphRef',\r\n  'linearGradient',\r\n  'radialGradient',\r\n  'solidColor',\r\n  'textArea',\r\n  'textPath'\r\n]\r\n", "/**\r\n * @typedef {import('./core.js').HChild} Child\r\n *   Acceptable child value.\r\n * @typedef {import('./core.js').HProperties} Properties\r\n *   Acceptable value for element properties.\r\n * @typedef {import('./core.js').HResult} Result\r\n *   Result from a `h` (or `s`) call.\r\n *\r\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\r\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\r\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\r\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\r\n */\r\n\r\nimport {svg} from 'property-information'\r\nimport {core} from './core.js'\r\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\r\n\r\nexport const s = core(svg, 'g', svgCaseSensitiveTagNames)\r\n", "/**\r\n * @typedef {import('vfile').VFile} VFile\r\n * @typedef {import('vfile').Value} Value\r\n */\r\n\r\n/**\r\n * @typedef Point\r\n *   unist point, where `line` and `column` can be `undefined`.\r\n * @property {number | undefined} line\r\n *   Line.\r\n * @property {number | undefined} column\r\n *   Column.\r\n * @property {number | undefined} [offset]\r\n *   Offset.\r\n *\r\n * @typedef PointLike\r\n *   unist point, allowed as input.\r\n * @property {number | null | undefined} [line]\r\n *   Line.\r\n * @property {number | null | undefined} [column]\r\n *   Column.\r\n * @property {number | null | undefined} [offset]\r\n *   Offset.\r\n *\r\n * @callback ToPoint\r\n *   Get a line/column-based `point` from `offset`.\r\n * @param {number | null | undefined} [offset]\r\n *   Something that should be an `offset.\r\n * @returns {Point}\r\n *   Point, line/column are undefined for invalid or out of bounds input.\r\n *\r\n * @callback ToOffset\r\n *   Get an offset from a line/column-based `point`.\r\n * @param {Point | null | undefined} [point]\r\n *   Something that should be a `point.\r\n * @returns {number}\r\n *   Offset or `-1` for invalid or out of bounds input.\r\n *\r\n * @typedef Location\r\n *   Accessors for index.\r\n * @property {ToPoint} toPoint\r\n *   Get a line/column-based `point` from `offset`.\r\n * @property {ToOffset} toOffset\r\n *   Get an offset from a line/column-based `point`.\r\n */\r\n\r\n/**\r\n * Index the given document so you can translate between line/column and offset\r\n * based positional info.\r\n *\r\n * @param {VFile | Value} file\r\n *   File to index.\r\n * @returns {Location}\r\n *   Accessors for index.\r\n */\r\nexport function location(file) {\r\n  const value = String(file)\r\n  /** @type {Array<number>} */\r\n  const indices = []\r\n  const search = /\\r?\\n|\\r/g\r\n\r\n  while (search.test(value)) {\r\n    indices.push(search.lastIndex)\r\n  }\r\n\r\n  indices.push(value.length + 1)\r\n\r\n  return {toPoint, toOffset}\r\n\r\n  /** @type {ToPoint} */\r\n  function toPoint(offset) {\r\n    let index = -1\r\n\r\n    if (\r\n      typeof offset === 'number' &&\r\n      offset > -1 &&\r\n      offset < indices[indices.length - 1]\r\n    ) {\r\n      while (++index < indices.length) {\r\n        if (indices[index] > offset) {\r\n          return {\r\n            line: index + 1,\r\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\r\n            offset\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return {line: undefined, column: undefined, offset: undefined}\r\n  }\r\n\r\n  /** @type {ToOffset} */\r\n  function toOffset(point) {\r\n    const line = point && point.line\r\n    const column = point && point.column\r\n\r\n    if (\r\n      typeof line === 'number' &&\r\n      typeof column === 'number' &&\r\n      !Number.isNaN(line) &&\r\n      !Number.isNaN(column) &&\r\n      line - 1 in indices\r\n    ) {\r\n      const offset = (indices[line - 2] || 0) + column - 1 || 0\r\n\r\n      if (offset > -1 && offset < indices[indices.length - 1]) {\r\n        return offset\r\n      }\r\n    }\r\n\r\n    return -1\r\n  }\r\n}\r\n", "/**\r\n * Map of web namespaces.\r\n *\r\n * @type {Record<string, string>}\r\n */\r\nexport const webNamespaces = {\r\n  html: 'http://www.w3.org/1999/xhtml',\r\n  mathml: 'http://www.w3.org/1998/Math/MathML',\r\n  svg: 'http://www.w3.org/2000/svg',\r\n  xlink: 'http://www.w3.org/1999/xlink',\r\n  xml: 'http://www.w3.org/XML/1998/namespace',\r\n  xmlns: 'http://www.w3.org/2000/xmlns/'\r\n}\r\n", "/**\r\n * @typedef {import('vfile').VFile} VFile\r\n * @typedef {import('property-information').Schema} Schema\r\n * @typedef {import('unist').Position} Position\r\n * @typedef {import('unist').Point} Point\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').Root} Root\r\n * @typedef {import('hast').Content} Content\r\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\r\n * @typedef {import('parse5').Token.ElementLocation} P5ElementLocation\r\n * @typedef {import('parse5').Token.Location} P5Location\r\n */\r\n\r\n/**\r\n * @typedef {Content | Root} Node\r\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\r\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5DocumentFragment\r\n * @typedef {DefaultTreeAdapterMap['documentType']} P5DocumentType\r\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\r\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\r\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\r\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\r\n * @typedef {DefaultTreeAdapterMap['template']} P5Template\r\n *\r\n * @typedef {'html' | 'svg'} Space\r\n *   Namespace.\r\n *\r\n * @typedef Options\r\n *   Configuration.\r\n * @property {Space | null | undefined} [space='html']\r\n *   Which space the document is in.\r\n *\r\n *   When an `<svg>` element is found in the HTML space, this package already\r\n *   automatically switches to and from the SVG space when entering and exiting\r\n *   it.\r\n * @property {VFile | null | undefined} [file]\r\n *   File used to add positional info to nodes.\r\n *\r\n *   If given, the file should represent the original HTML source.\r\n * @property {boolean} [verbose=false]\r\n *   Whether to add extra positional info about starting tags, closing tags,\r\n *   and attributes to elements.\r\n *\r\n *   > 👉 **Note**: only used when `file` is given.\r\n *\r\n * @typedef State\r\n *   Info passed around about the current state.\r\n * @property {Schema} schema\r\n *   Current schema.\r\n * @property {VFile | undefined} file\r\n *   Corresponding file.\r\n * @property {boolean | undefined} verbose\r\n *   Add extra positional info.\r\n * @property {boolean} location\r\n *   Whether location info was found.\r\n */\r\n\r\nimport {h, s} from 'hastscript'\r\nimport {html, svg, find} from 'property-information'\r\nimport {location} from 'vfile-location'\r\nimport {webNamespaces} from 'web-namespaces'\r\n\r\nconst own = {}.hasOwnProperty\r\n/** @type {unknown} */\r\n// type-coverage:ignore-next-line\r\nconst proto = Object.prototype\r\n\r\n/**\r\n * Transform a `parse5` AST to hast.\r\n *\r\n * @param {P5Node} tree\r\n *   `parse5` tree to transform.\r\n * @param {Options | VFile | null | undefined} [options]\r\n *   Configuration.\r\n * @returns {Node}\r\n *   hast tree.\r\n */\r\nexport function fromParse5(tree, options) {\r\n  const options_ = options || {}\r\n  /** @type {Options} */\r\n  let settings\r\n  /** @type {VFile | undefined} */\r\n  let file\r\n\r\n  if (isFile(options_)) {\r\n    file = options_\r\n    settings = {}\r\n  } else {\r\n    file = options_.file || undefined\r\n    settings = options_\r\n  }\r\n\r\n  return one(\r\n    {\r\n      schema: settings.space === 'svg' ? svg : html,\r\n      file,\r\n      verbose: settings.verbose,\r\n      location: false\r\n    },\r\n    tree\r\n  )\r\n}\r\n\r\n/**\r\n * Transform a node.\r\n *\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @param {P5Node} node\r\n *   p5 node.\r\n * @returns {Node}\r\n *   hast node.\r\n */\r\nfunction one(state, node) {\r\n  /** @type {Node} */\r\n  let result\r\n\r\n  switch (node.nodeName) {\r\n    case '#comment': {\r\n      const reference = /** @type {P5Comment} */ (node)\r\n      result = {type: 'comment', value: reference.data}\r\n      patch(state, reference, result)\r\n      return result\r\n    }\r\n\r\n    case '#document':\r\n    case '#document-fragment': {\r\n      const reference = /** @type {P5Document | P5DocumentFragment} */ (node)\r\n      const quirksMode =\r\n        'mode' in reference\r\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\r\n          : false\r\n\r\n      result = {\r\n        type: 'root',\r\n        children: all(state, node.childNodes),\r\n        data: {quirksMode}\r\n      }\r\n\r\n      if (state.file && state.location) {\r\n        const doc = String(state.file)\r\n        const loc = location(doc)\r\n        const start = loc.toPoint(0)\r\n        const end = loc.toPoint(doc.length)\r\n        // @ts-expect-error: always defined as we give valid input.\r\n        result.position = {start, end}\r\n      }\r\n\r\n      return result\r\n    }\r\n\r\n    case '#documentType': {\r\n      const reference = /** @type {P5DocumentType} */ (node)\r\n      // @ts-expect-error Types are out of date.\r\n      result = {type: 'doctype'}\r\n      patch(state, reference, result)\r\n      return result\r\n    }\r\n\r\n    case '#text': {\r\n      const reference = /** @type {P5Text} */ (node)\r\n      result = {type: 'text', value: reference.value}\r\n      patch(state, reference, result)\r\n      return result\r\n    }\r\n\r\n    // Element.\r\n    default: {\r\n      const reference = /** @type {P5Element} */ (node)\r\n      result = element(state, reference)\r\n      return result\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Transform children.\r\n *\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @param {Array<P5Node>} nodes\r\n *   Nodes.\r\n * @returns {Array<Content>}\r\n *   hast nodes.\r\n */\r\nfunction all(state, nodes) {\r\n  let index = -1\r\n  /** @type {Array<Content>} */\r\n  const result = []\r\n\r\n  while (++index < nodes.length) {\r\n    // @ts-expect-error Assume no roots in `nodes`.\r\n    result[index] = one(state, nodes[index])\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n/**\r\n * Transform an element.\r\n *\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @param {P5Element} node\r\n *   `parse5` node to transform.\r\n * @returns {Element}\r\n *   hast node.\r\n */\r\nfunction element(state, node) {\r\n  const schema = state.schema\r\n\r\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\r\n\r\n  // Props.\r\n  let index = -1\r\n  /** @type {Record<string, string>} */\r\n  const props = {}\r\n\r\n  while (++index < node.attrs.length) {\r\n    const attribute = node.attrs[index]\r\n    const name =\r\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\r\n    if (!own.call(proto, name)) {\r\n      props[name] = attribute.value\r\n    }\r\n  }\r\n\r\n  // Build.\r\n  const fn = state.schema.space === 'svg' ? s : h\r\n  const result = fn(node.tagName, props, all(state, node.childNodes))\r\n  patch(state, node, result)\r\n\r\n  // Switch content.\r\n  if (result.tagName === 'template') {\r\n    const reference = /** @type {P5Template} */ (node)\r\n    const pos = reference.sourceCodeLocation\r\n    const startTag = pos && pos.startTag && position(pos.startTag)\r\n    const endTag = pos && pos.endTag && position(pos.endTag)\r\n\r\n    /** @type {Root} */\r\n    // @ts-expect-error Types are wrong.\r\n    const content = one(state, reference.content)\r\n\r\n    if (startTag && endTag && state.file) {\r\n      content.position = {start: startTag.end, end: endTag.start}\r\n    }\r\n\r\n    result.content = content\r\n  }\r\n\r\n  state.schema = schema\r\n\r\n  return result\r\n}\r\n\r\n/**\r\n * Patch positional info from `from` onto `to`.\r\n *\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @param {P5Node} from\r\n *   p5 node.\r\n * @param {Node} to\r\n *   hast node.\r\n * @returns {void}\r\n *   Nothing.\r\n */\r\nfunction patch(state, from, to) {\r\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\r\n    const position = createLocation(state, to, from.sourceCodeLocation)\r\n\r\n    if (position) {\r\n      state.location = true\r\n      to.position = position\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Create clean positional information.\r\n *\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @param {Node} node\r\n *   hast node.\r\n * @param {P5ElementLocation} location\r\n *   p5 location info.\r\n * @returns {Position | undefined}\r\n *   Position, or nothing.\r\n */\r\nfunction createLocation(state, node, location) {\r\n  const result = position(location)\r\n\r\n  if (node.type === 'element') {\r\n    const tail = node.children[node.children.length - 1]\r\n\r\n    // Bug for unclosed with children.\r\n    // See: <https://github.com/inikulin/parse5/issues/109>.\r\n    if (\r\n      result &&\r\n      !location.endTag &&\r\n      tail &&\r\n      tail.position &&\r\n      tail.position.end\r\n    ) {\r\n      result.end = Object.assign({}, tail.position.end)\r\n    }\r\n\r\n    if (state.verbose) {\r\n      /** @type {Record<string, Position | undefined>} */\r\n      const props = {}\r\n      /** @type {string} */\r\n      let key\r\n\r\n      if (location.attrs) {\r\n        for (key in location.attrs) {\r\n          if (own.call(location.attrs, key)) {\r\n            props[find(state.schema, key).property] = position(\r\n              location.attrs[key]\r\n            )\r\n          }\r\n        }\r\n      }\r\n\r\n      node.data = {\r\n        position: {\r\n          // @ts-expect-error: assume not `undefined`.\r\n          opening: position(location.startTag),\r\n          closing: location.endTag ? position(location.endTag) : null,\r\n          properties: props\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n/**\r\n * Turn a p5 location into a position.\r\n *\r\n * @param {P5Location} loc\r\n *   Location.\r\n * @returns {Position | undefined}\r\n *   Position or nothing.\r\n */\r\nfunction position(loc) {\r\n  const start = point({\r\n    line: loc.startLine,\r\n    column: loc.startCol,\r\n    offset: loc.startOffset\r\n  })\r\n  const end = point({\r\n    line: loc.endLine,\r\n    column: loc.endCol,\r\n    offset: loc.endOffset\r\n  })\r\n  // @ts-expect-error `undefined` is fine.\r\n  return start || end ? {start, end} : undefined\r\n}\r\n\r\n/**\r\n * Filter out invalid points.\r\n *\r\n * @param {Point} point\r\n *   Point with potentially `undefined` values.\r\n * @returns {Point | undefined}\r\n *   Point or nothing.\r\n */\r\nfunction point(point) {\r\n  return point.line && point.column ? point : undefined\r\n}\r\n\r\n/**\r\n * Check if something is a file.\r\n *\r\n * @param {VFile | Options} value\r\n *   File or options.\r\n * @returns {value is VFile}\r\n *   Whether `value` is a file.\r\n */\r\nfunction isFile(value) {\r\n  return 'messages' in value\r\n}\r\n", "/**\r\n * @callback Handler\r\n *   Handle a value, with a certain ID field set to a certain value.\r\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\r\n *   place on the `handlers` record.\r\n * @param {...any} parameters\r\n *   Arbitrary parameters passed to the zwitch.\r\n *   The first will be an object with a certain ID field set to a certain value.\r\n * @returns {any}\r\n *   Anything!\r\n */\r\n\r\n/**\r\n * @callback UnknownHandler\r\n *   Handle values that do have a certain ID field, but it’s set to a value\r\n *   that is not listed in the `handlers` record.\r\n * @param {unknown} value\r\n *   An object with a certain ID field set to an unknown value.\r\n * @param {...any} rest\r\n *   Arbitrary parameters passed to the zwitch.\r\n * @returns {any}\r\n *   Anything!\r\n */\r\n\r\n/**\r\n * @callback InvalidHandler\r\n *   Handle values that do not have a certain ID field.\r\n * @param {unknown} value\r\n *   Any unknown value.\r\n * @param {...any} rest\r\n *   Arbitrary parameters passed to the zwitch.\r\n * @returns {void|null|undefined|never}\r\n *   This should crash or return nothing.\r\n */\r\n\r\n/**\r\n * @template {InvalidHandler} [Invalid=InvalidHandler]\r\n * @template {UnknownHandler} [Unknown=UnknownHandler]\r\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\r\n * @typedef Options\r\n *   Configuration (required).\r\n * @property {Invalid} [invalid]\r\n *   Handler to use for invalid values.\r\n * @property {Unknown} [unknown]\r\n *   Handler to use for unknown values.\r\n * @property {Handlers} [handlers]\r\n *   Handlers to use.\r\n */\r\n\r\nconst own = {}.hasOwnProperty\r\n\r\n/**\r\n * Handle values based on a field.\r\n *\r\n * @template {InvalidHandler} [Invalid=InvalidHandler]\r\n * @template {UnknownHandler} [Unknown=UnknownHandler]\r\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\r\n * @param {string} key\r\n *   Field to switch on.\r\n * @param {Options<Invalid, Unknown, Handlers>} [options]\r\n *   Configuration (required).\r\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\r\n */\r\nexport function zwitch(key, options) {\r\n  const settings = options || {}\r\n\r\n  /**\r\n   * Handle one value.\r\n   *\r\n   * Based on the bound `key`, a respective handler will be called.\r\n   * If `value` is not an object, or doesn’t have a `key` property, the special\r\n   * “invalid” handler will be called.\r\n   * If `value` has an unknown `key`, the special “unknown” handler will be\r\n   * called.\r\n   *\r\n   * All arguments, and the context object, are passed through to the handler,\r\n   * and it’s result is returned.\r\n   *\r\n   * @this {unknown}\r\n   *   Any context object.\r\n   * @param {unknown} [value]\r\n   *   Any value.\r\n   * @param {...unknown} parameters\r\n   *   Arbitrary parameters passed to the zwitch.\r\n   * @property {Handler} invalid\r\n   *   Handle for values that do not have a certain ID field.\r\n   * @property {Handler} unknown\r\n   *   Handle values that do have a certain ID field, but it’s set to a value\r\n   *   that is not listed in the `handlers` record.\r\n   * @property {Handlers} handlers\r\n   *   Record of handlers.\r\n   * @returns {unknown}\r\n   *   Anything.\r\n   */\r\n  function one(value, ...parameters) {\r\n    /** @type {Handler|undefined} */\r\n    let fn = one.invalid\r\n    const handlers = one.handlers\r\n\r\n    if (value && own.call(value, key)) {\r\n      // @ts-expect-error Indexable.\r\n      const id = String(value[key])\r\n      // @ts-expect-error Indexable.\r\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\r\n    }\r\n\r\n    if (fn) {\r\n      return fn.call(this, value, ...parameters)\r\n    }\r\n  }\r\n\r\n  one.handlers = settings.handlers || {}\r\n  one.invalid = settings.invalid\r\n  one.unknown = settings.unknown\r\n\r\n  // @ts-expect-error: matches!\r\n  return one\r\n}\r\n", "/**\r\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\r\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\r\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5Fragment\r\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\r\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\r\n * @typedef {DefaultTreeAdapterMap['documentType']} P5Doctype\r\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\r\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\r\n * @typedef {DefaultTreeAdapterMap['parentNode']} P5Parent\r\n * @typedef {import('parse5').Token.Attribute} P5Attribute\r\n * @typedef {Exclude<P5Node, P5Document | P5Fragment>} P5Child\r\n * @typedef {import('property-information').Schema} Schema\r\n * @typedef {import('hast').Root} Root\r\n * @typedef {import('hast').DocType} Doctype\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').Text} Text\r\n * @typedef {import('hast').Comment} Comment\r\n * @typedef {import('hast').Content} Content\r\n */\r\n\r\n/**\r\n * @typedef {Content | Root} Node\r\n * @typedef {'html' | 'svg'} Space\r\n *\r\n * @typedef Options\r\n *   Configuration.\r\n * @property {Space | null | undefined} [space='html']\r\n *   Which space the document is in.\r\n *\r\n *   When an `<svg>` element is found in the HTML space, this package already\r\n *   automatically switches to and from the SVG space when entering and exiting\r\n *   it.\r\n */\r\n\r\nimport {stringify as commas} from 'comma-separated-tokens'\r\nimport {html, svg, find} from 'property-information'\r\nimport {stringify as spaces} from 'space-separated-tokens'\r\nimport {webNamespaces} from 'web-namespaces'\r\nimport {zwitch} from 'zwitch'\r\n\r\nconst own = {}.hasOwnProperty\r\n\r\n/** @type {(from: Node, schema: Schema) => P5Node} */\r\nconst one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\r\n\r\n/**\r\n * Transform a hast tree to Parse5’s AST.\r\n *\r\n * @param {Node} tree\r\n *   Tree to transform.\r\n * @param {Options | Space | null | undefined} [options]\r\n *   Configuration.\r\n * @returns {P5Node}\r\n *   `parse5` node.\r\n */\r\nexport function toParse5(tree, options) {\r\n  const space = options && typeof options === 'object' ? options.space : options\r\n  return one(tree, space === 'svg' ? svg : html)\r\n}\r\n\r\n/**\r\n * @param {Root} node\r\n * @param {Schema} schema\r\n *   Current schema.\r\n * @returns {P5Document}\r\n */\r\nfunction root(node, schema) {\r\n  /** @type {P5Document} */\r\n  const result = {\r\n    nodeName: '#document',\r\n    // @ts-expect-error: `parse5` uses enums, which are actually strings.\r\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\r\n    childNodes: []\r\n  }\r\n  result.childNodes = all(node.children, result, schema)\r\n  patch(node, result)\r\n  return result\r\n}\r\n\r\n/**\r\n * @param {Root} node\r\n * @param {Schema} schema\r\n *   Current schema.\r\n * @returns {P5Fragment}\r\n */\r\nfunction fragment(node, schema) {\r\n  /** @type {P5Fragment} */\r\n  const result = {nodeName: '#document-fragment', childNodes: []}\r\n  result.childNodes = all(node.children, result, schema)\r\n  patch(node, result)\r\n  return result\r\n}\r\n\r\n/**\r\n * @param {Doctype} node\r\n * @returns {P5Doctype}\r\n */\r\nfunction doctype(node) {\r\n  /** @type {P5Doctype} */\r\n  const result = {\r\n    nodeName: '#documentType',\r\n    name: 'html',\r\n    publicId: '',\r\n    systemId: '',\r\n    // @ts-expect-error: change to `null` in a major?\r\n    parentNode: undefined\r\n  }\r\n\r\n  patch(node, result)\r\n  return result\r\n}\r\n\r\n/**\r\n * @param {Text} node\r\n * @returns {P5Text}\r\n */\r\nfunction text(node) {\r\n  /** @type {P5Text} */\r\n  const result = {\r\n    nodeName: '#text',\r\n    value: node.value,\r\n    // @ts-expect-error: no `parentNode`\r\n    parentNode: undefined\r\n  }\r\n  patch(node, result)\r\n  return result\r\n}\r\n\r\n/**\r\n * @param {Comment} node\r\n * @returns {P5Comment}\r\n */\r\nfunction comment(node) {\r\n  /** @type {P5Comment} */\r\n  const result = {\r\n    nodeName: '#comment',\r\n    data: node.value,\r\n    // @ts-expect-error: no `parentNode`\r\n    parentNode: undefined\r\n  }\r\n\r\n  patch(node, result)\r\n\r\n  return result\r\n}\r\n\r\n/**\r\n * @param {Element} node\r\n * @param {Schema} schema\r\n *   Current schema.\r\n * @returns {P5Element}\r\n *   `parse5` node.\r\n */\r\nfunction element(node, schema) {\r\n  const parentSchema = schema\r\n  let currentSchema = parentSchema\r\n\r\n  if (\r\n    node.type === 'element' &&\r\n    node.tagName.toLowerCase() === 'svg' &&\r\n    parentSchema.space === 'html'\r\n  ) {\r\n    currentSchema = svg\r\n  }\r\n\r\n  /** @type {Array<P5Attribute>} */\r\n  const attrs = []\r\n  /** @type {string} */\r\n  let prop\r\n\r\n  if (node.properties) {\r\n    for (prop in node.properties) {\r\n      if (prop !== 'children' && own.call(node.properties, prop)) {\r\n        const result = createProperty(\r\n          currentSchema,\r\n          prop,\r\n          node.properties[prop]\r\n        )\r\n\r\n        if (result) {\r\n          attrs.push(result)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @type {P5Element} */\r\n  const result = {\r\n    nodeName: node.tagName,\r\n    tagName: node.tagName,\r\n    attrs,\r\n    // @ts-expect-error: html and svg both have a space.\r\n    namespaceURI: webNamespaces[currentSchema.space],\r\n    childNodes: [],\r\n    // @ts-expect-error: no `parentNode`\r\n    parentNode: undefined\r\n  }\r\n  result.childNodes = all(node.children, result, currentSchema)\r\n  patch(node, result)\r\n\r\n  if (node.tagName === 'template' && node.content) {\r\n    // @ts-expect-error: `parse5` types are wrong.\r\n    result.content = fragment(node.content, currentSchema)\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n/**\r\n * Handle a property.\r\n *\r\n * @param {Schema} schema\r\n *   Current schema.\r\n * @param {string} prop\r\n *   Key.\r\n * @param {Array<string | number> | string | number | boolean | null | undefined} value\r\n *   hast property value.\r\n * @returns {P5Attribute | void}\r\n *   Field for runtime, optional.\r\n */\r\nfunction createProperty(schema, prop, value) {\r\n  const info = find(schema, prop)\r\n\r\n  // Ignore nullish and `NaN` values.\r\n  if (\r\n    value === undefined ||\r\n    value === null ||\r\n    value === false ||\r\n    (typeof value === 'number' && Number.isNaN(value)) ||\r\n    (!value && info.boolean)\r\n  ) {\r\n    return\r\n  }\r\n\r\n  if (Array.isArray(value)) {\r\n    // Accept `array`.\r\n    // Most props are space-separated.\r\n    value = info.commaSeparated ? commas(value) : spaces(value)\r\n  }\r\n\r\n  /** @type {P5Attribute} */\r\n  const attribute = {\r\n    name: info.attribute,\r\n    value: value === true ? '' : String(value)\r\n  }\r\n\r\n  if (info.space && info.space !== 'html' && info.space !== 'svg') {\r\n    const index = attribute.name.indexOf(':')\r\n\r\n    if (index < 0) {\r\n      attribute.prefix = ''\r\n    } else {\r\n      attribute.name = attribute.name.slice(index + 1)\r\n      attribute.prefix = info.attribute.slice(0, index)\r\n    }\r\n\r\n    attribute.namespace = webNamespaces[info.space]\r\n  }\r\n\r\n  return attribute\r\n}\r\n\r\n/**\r\n * Transform all hast nodes.\r\n *\r\n * @param {Array<Content>} children\r\n *   List of children.\r\n * @param {P5Parent} parentNode\r\n *   `parse5` parent node.\r\n * @param {Schema} schema\r\n *   Current schema.\r\n * @returns {Array<P5Child>}\r\n *   Transformed children.\r\n */\r\nfunction all(children, parentNode, schema) {\r\n  let index = -1\r\n  /** @type {Array<P5Child>} */\r\n  const results = []\r\n\r\n  if (children) {\r\n    while (++index < children.length) {\r\n      /** @type {P5Child} */\r\n      // @ts-expect-error assume no document.\r\n      const child = one(children[index], schema)\r\n\r\n      child.parentNode = parentNode\r\n\r\n      results.push(child)\r\n    }\r\n  }\r\n\r\n  return results\r\n}\r\n\r\n/**\r\n * Add position info from `from` to `to`.\r\n *\r\n * @param {Node} from\r\n *   hast node.\r\n * @param {P5Node} to\r\n *   `parse5` node.\r\n * @returns {void}\r\n *   Nothing.\r\n */\r\nfunction patch(from, to) {\r\n  const position = from.position\r\n\r\n  if (position && position.start && position.end) {\r\n    to.sourceCodeLocation = {\r\n      startLine: position.start.line,\r\n      startCol: position.start.column,\r\n      // @ts-expect-error assume this is set.\r\n      startOffset: position.start.offset,\r\n      endLine: position.end.line,\r\n      endCol: position.end.column,\r\n      // @ts-expect-error assume this is set.\r\n      endOffset: position.end.offset\r\n    }\r\n  }\r\n}\r\n", "/**\r\n * List of HTML void tag names.\r\n *\r\n * @type {Array<string>}\r\n */\r\nexport const htmlVoidElements = [\r\n  'area',\r\n  'base',\r\n  'basefont',\r\n  'bgsound',\r\n  'br',\r\n  'col',\r\n  'command',\r\n  'embed',\r\n  'frame',\r\n  'hr',\r\n  'image',\r\n  'img',\r\n  'input',\r\n  'isindex',\r\n  'keygen',\r\n  'link',\r\n  'menuitem',\r\n  'meta',\r\n  'nextid',\r\n  'param',\r\n  'source',\r\n  'track',\r\n  'wbr'\r\n]\r\n"],
  "mappings": "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",
  "names": ["element", "element", "element", "element", "require_preprocessor_mixin", "require_tokenizer_mixin", "require_parser_mixin", "text", "element", "location", "startTagToken", "doctype", "Parser", "html", "fragment", "element", "location", "point", "checks", "index", "all", "is", "visit", "attributes", "attributes", "html", "svg", "parse", "stringify", "own", "h", "parse", "html", "svg", "search", "point", "own", "svg", "html", "startTag", "position", "endTag", "location", "point", "own", "one", "own", "one", "element", "svg", "html", "all", "patch", "result", "stringify", "position", "Parser", "one", "root", "element", "text", "comment", "doctype", "fragment", "index", "stitch", "all", "location"]
}
